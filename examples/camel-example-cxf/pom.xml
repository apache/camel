<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.camel</groupId>
    <artifactId>examples</artifactId>
    <version>1.6.0</version>
  </parent>

  <artifactId>camel-example-cxf</artifactId>
  <name>Camel :: Example :: CXF</name>
  <description>An example which demonstrates the use of the Camel CXF component
  </description>

  <dependencies>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-cxf</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jetty</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-bindings-soap</artifactId>
      <version>${cxf-version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-jms</artifactId>
      <version>${cxf-version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
    </dependency>

    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>2.8.1</version>
    </dependency>

  </dependencies>

  <profiles>
  	<profile>
  		<id>HttpToJMS</id>
  		<properties>
  			<!-- Starting the camel-cxf example of routing the SOAP over http message to SOAP over JMS Server -->
  			<target.main.class>org.apache.camel.example.cxf.CamelCxfExample</target.main.class>
  		</properties>
  	</profile>
  	<profile>
  		<id>CamelTransport</id>
  		<properties>
  			<!-- Starting the camel-cxf example of using Camel transport of CXF -->
  			<target.main.class>org.apache.camel.example.camel.transport.CamelTransportExample</target.main.class>
  		</properties>
  	</profile>
  	<profile>
  		<id>WebServiceProvider</id>
  		<properties>
  			<!-- Starting the camel-cxf example of how to use the JAXWS WebServiceProvider API -->
  			<target.main.class>org.apache.camel.example.cxf.provider.CamelCxfExample</target.main.class>
  		</properties>
  	</profile>
  </profiles>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-codegen-plugin</artifactId>
        <version>${cxf-version}</version>
        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <configuration>
              <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
              <wsdlOptions>
                <wsdlOption>
                  <wsdl>${basedir}/src/main/resources/wsdl/hello_world.wsdl</wsdl>
                </wsdlOption>
              </wsdlOptions>
            </configuration>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- Allows the example to be run via 'mvn compile exec:java' -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <mainClass>${target.main.class}</mainClass>
          <includePluginDependencies>false</includePluginDependencies>
           <systemProperties>
            <property>
               <key>java.util.logging.config.file</key>
               <value>logging.properties</value>
            </property>
           </systemProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
