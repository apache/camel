<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- START SNIPPET: e1 -->
<!-- this is a spring XML file where we have Camel embedded -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- Here we define Camel, notice the namespace it uses -->
  <camelContext xmlns="http://camel.apache.org/schema/spring">

    <!-- The widget and gadget route that pickup incoming orders from the newOrder queue
         and route the orders to either the widget or gadget inventory system -->
    <route id="widgetRoute">
      <from uri="activemq:queue:newOrder"/>
      <choice>
        <when>
          <xpath>/order/product = 'widget'</xpath>
          <to uri="activemq:queue:widget"/>
          <to uri="log:widget"/>
        </when>
        <otherwise>
          <to uri="activemq:queue:gadget"/>
          <to uri="log:gadget"/>
        </otherwise>
      </choice>
    </route>

    <!-- A simple route that routes orders from the file system to the ActiveMQ newOrder queue. -->
    <route id="fileToOrder">
      <!-- route files form src/data (noop = keep the file as-is after done, and do not pickup the same file again) -->
      <from uri="file:src/data?noop=true"/>
      <!-- route to the newOrder queue on the ActiveMQ broker -->
      <to uri="activemq:queue:newOrder"/>
    </route>

  </camelContext>

  <!-- create a Camel ActiveMQ component to use, using the Spring bean style -->
  <!-- we use the vm protocol to communicate intra-jvm which is much faster than tcp -->
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <!-- the url to the remote ActiveMQ broker -->
    <property name="brokerURL" value="tcp://localhost:61616"/>
    <!-- The ActiveMQ Broker allows anonymous connection by default
    <property name="userName" value="admin"/>
    <property name="password" value="admin"/>
    -->
  </bean>

</beans>
<!-- END SNIPPET: e1 -->