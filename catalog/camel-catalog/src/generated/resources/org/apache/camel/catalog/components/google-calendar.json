{
  "component": {
    "kind": "component",
    "name": "google-calendar",
    "title": "Google Calendar",
    "description": "Perform various operations on a Google Calendar.",
    "deprecated": false,
    "firstVersion": "2.15.0",
    "label": "api,cloud",
    "javaType": "org.apache.camel.component.google.calendar.GoogleCalendarComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-google-calendar",
    "version": "4.15.0-SNAPSHOT",
    "scheme": "google-calendar",
    "extendsScheme": "",
    "syntax": "google-calendar:apiName\/methodName",
    "async": false,
    "api": true,
    "apiSyntax": "apiName\/methodName",
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false,
    "browsable": false,
    "remote": true
  },
  "componentProperties": {
    "applicationName": { "index": 0, "kind": "property", "displayName": "Application Name", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Google calendar application name. Example would be camel-google-calendar\/1.0" },
    "clientId": { "index": 1, "kind": "property", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Client ID of the calendar application" },
    "configuration": { "index": 2, "kind": "property", "displayName": "Configuration", "group": "common", "label": "", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "deprecated": false, "autowired": false, "secret": false, "description": "To use the shared configuration" },
    "delegate": { "index": 3, "kind": "property", "displayName": "Delegate", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Delegate for wide-domain service account" },
    "scopes": { "index": 4, "kind": "property", "displayName": "Scopes", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "https:\/\/www.googleapis.com\/auth\/calendar", "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Specifies the level of permissions you want a calendar application to have to a user account. See https:\/\/developers.google.com\/identity\/protocols\/googlescopes for more info. Multiple scopes can be separated by comma." },
    "bridgeErrorHandler": { "index": 5, "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "lazyStartProducer": { "index": 6, "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "index": 7, "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." },
    "clientFactory": { "index": 8, "kind": "property", "displayName": "Client Factory", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.calendar.GoogleCalendarClientFactory", "deprecated": false, "autowired": false, "secret": false, "description": "To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleCalendarClientFactory" },
    "accessToken": { "index": 9, "kind": "property", "displayName": "Access Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage." },
    "clientSecret": { "index": 10, "kind": "property", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Client secret of the calendar application" },
    "emailAddress": { "index": 11, "kind": "property", "displayName": "Email Address", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The emailAddress of the Google Service Account." },
    "p12FileName": { "index": 12, "kind": "property", "displayName": "P12 File Name", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The name of the p12 file which has the private key to use with the Google Service Account." },
    "refreshToken": { "index": 13, "kind": "property", "displayName": "Refresh Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived." },
    "serviceAccountKey": { "index": 14, "kind": "property", "displayName": "Service Account Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:" },
    "user": { "index": 15, "kind": "property", "displayName": "User", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The email address of the user the application is trying to impersonate in the service account flow" }
  },
  "properties": {
    "apiName": { "index": 0, "kind": "path", "displayName": "Api Name", "group": "common", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName", "enum": [ "ACL", "LIST", "CALENDARS", "CHANNELS", "COLORS", "FREEBUSY", "EVENTS", "SETTINGS" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "What kind of operation to perform" },
    "methodName": { "index": 1, "kind": "path", "displayName": "Method Name", "group": "common", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "enum": [ "calendarImport", "clear", "delete", "get", "insert", "instances", "list", "move", "patch", "query", "quickAdd", "stop", "update", "watch" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "What sub operation to use for the selected operation" },
    "applicationName": { "index": 2, "kind": "parameter", "displayName": "Application Name", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Google calendar application name. Example would be camel-google-calendar\/1.0" },
    "clientId": { "index": 3, "kind": "parameter", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Client ID of the calendar application" },
    "delegate": { "index": 4, "kind": "parameter", "displayName": "Delegate", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Delegate for wide-domain service account" },
    "inBody": { "index": 5, "kind": "parameter", "displayName": "In Body", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "scopes": { "index": 6, "kind": "parameter", "displayName": "Scopes", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "https:\/\/www.googleapis.com\/auth\/calendar", "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Specifies the level of permissions you want a calendar application to have to a user account. See https:\/\/developers.google.com\/identity\/protocols\/googlescopes for more info. Multiple scopes can be separated by comma." },
    "sendEmptyMessageWhenIdle": { "index": 7, "kind": "parameter", "displayName": "Send Empty Message When Idle", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead." },
    "bridgeErrorHandler": { "index": 8, "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "index": 9, "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "autowired": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "index": 10, "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut" ], "deprecated": false, "autowired": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "pollStrategy": { "index": 11, "kind": "parameter", "displayName": "Poll Strategy", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.PollingConsumerPollStrategy", "deprecated": false, "autowired": false, "secret": false, "description": "A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel." },
    "lazyStartProducer": { "index": 12, "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer (advanced)", "label": "producer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "backoffErrorThreshold": { "index": 13, "kind": "parameter", "displayName": "Backoff Error Threshold", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in." },
    "backoffIdleThreshold": { "index": 14, "kind": "parameter", "displayName": "Backoff Idle Threshold", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "The number of subsequent idle polls that should happen before the backoffMultipler should kick-in." },
    "backoffMultiplier": { "index": 15, "kind": "parameter", "displayName": "Backoff Multiplier", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "To let the scheduled polling consumer backoff if there has been a number of subsequent idles\/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and\/or backoffErrorThreshold must also be configured." },
    "delay": { "index": 16, "kind": "parameter", "displayName": "Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 500, "description": "Milliseconds before the next poll." },
    "greedy": { "index": 17, "kind": "parameter", "displayName": "Greedy", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages." },
    "initialDelay": { "index": 18, "kind": "parameter", "displayName": "Initial Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000, "description": "Milliseconds before the first poll starts." },
    "repeatCount": { "index": 19, "kind": "parameter", "displayName": "Repeat Count", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "description": "Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever." },
    "runLoggingLevel": { "index": 20, "kind": "parameter", "displayName": "Run Logging Level", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "org.apache.camel.LoggingLevel", "enum": [ "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "OFF" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "TRACE", "description": "The consumer logs a start\/complete log line when it polls. This option allows you to configure the logging level for that." },
    "scheduledExecutorService": { "index": 21, "kind": "parameter", "displayName": "Scheduled Executor Service", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.concurrent.ScheduledExecutorService", "deprecated": false, "autowired": false, "secret": false, "description": "Allows for configuring a custom\/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool." },
    "scheduler": { "index": 22, "kind": "parameter", "displayName": "Scheduler", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.lang.Object", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "description": "To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler" },
    "schedulerProperties": { "index": 23, "kind": "parameter", "displayName": "Scheduler Properties", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "prefix": "scheduler.", "multiValue": true, "deprecated": false, "autowired": false, "secret": false, "description": "To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler. This is a multi-value option with prefix: scheduler." },
    "startScheduler": { "index": 24, "kind": "parameter", "displayName": "Start Scheduler", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether the scheduler should be auto started." },
    "timeUnit": { "index": 25, "kind": "parameter", "displayName": "Time Unit", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.concurrent.TimeUnit", "enum": [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "MILLISECONDS", "description": "Time unit for initialDelay and delay options." },
    "useFixedDelay": { "index": 26, "kind": "parameter", "displayName": "Use Fixed Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details." },
    "accessToken": { "index": 27, "kind": "parameter", "displayName": "Access Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage." },
    "clientSecret": { "index": 28, "kind": "parameter", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Client secret of the calendar application" },
    "emailAddress": { "index": 29, "kind": "parameter", "displayName": "Email Address", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The emailAddress of the Google Service Account." },
    "p12FileName": { "index": 30, "kind": "parameter", "displayName": "P12 File Name", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The name of the p12 file which has the private key to use with the Google Service Account." },
    "refreshToken": { "index": 31, "kind": "parameter", "displayName": "Refresh Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived." },
    "serviceAccountKey": { "index": 32, "kind": "parameter", "displayName": "Service Account Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:" },
    "user": { "index": 33, "kind": "parameter", "displayName": "User", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.calendar.GoogleCalendarConfiguration", "configurationField": "configuration", "description": "The email address of the user the application is trying to impersonate in the service account flow" }
  },
  "apis": {
    "acl": { "consumerOnly": false, "producerOnly": false, "description": "The acl collection of methods", "methods": { "delete": { "description": "Deletes an access control rule", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Delete delete(String calendarId, String ruleId)" ] }, "get": { "description": "Returns an access control rule", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Get get(String calendarId, String ruleId)" ] }, "insert": { "description": "Creates an access control rule", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Insert insert(String calendarId, com.google.api.services.calendar.model.AclRule content)" ] }, "list": { "description": "Returns the rules in the access control list for the calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$List list(String calendarId)" ] }, "patch": { "description": "Updates an access control rule", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Patch patch(String calendarId, String ruleId, com.google.api.services.calendar.model.AclRule content)" ] }, "update": { "description": "Updates an access control rule", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Update update(String calendarId, String ruleId, com.google.api.services.calendar.model.AclRule content)" ] }, "watch": { "description": "Watch for changes to ACL resources", "signatures": [ "com.google.api.services.calendar.Calendar$Acl$Watch watch(String calendarId, com.google.api.services.calendar.model.Channel content)" ] } } },
    "calendars": { "consumerOnly": false, "producerOnly": false, "description": "The calendars collection of methods", "methods": { "clear": { "description": "Clears a primary calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Clear clear(String calendarId)" ] }, "delete": { "description": "Deletes a secondary calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Delete delete(String calendarId)" ] }, "get": { "description": "Returns metadata for a calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Get get(String calendarId)" ] }, "insert": { "description": "Creates a secondary calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Insert insert(com.google.api.services.calendar.model.Calendar content)" ] }, "patch": { "description": "Updates metadata for a calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Patch patch(String calendarId, com.google.api.services.calendar.model.Calendar content)" ] }, "update": { "description": "Updates metadata for a calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Calendars$Update update(String calendarId, com.google.api.services.calendar.model.Calendar content)" ] } } },
    "channels": { "consumerOnly": false, "producerOnly": false, "description": "The channels collection of methods", "methods": { "stop": { "description": "Stop watching resources through this channel", "signatures": [ "com.google.api.services.calendar.Calendar$Channels$Stop stop(com.google.api.services.calendar.model.Channel content)" ] } } },
    "events": { "consumerOnly": false, "producerOnly": false, "description": "The events collection of methods", "methods": { "calendarImport": { "description": "Imports an event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$CalendarImport calendarImport(String calendarId, com.google.api.services.calendar.model.Event content)" ] }, "delete": { "description": "Deletes an event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Delete delete(String calendarId, String eventId)" ] }, "get": { "description": "Returns an event based on its Google Calendar ID", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Get get(String calendarId, String eventId)" ] }, "insert": { "description": "Creates an event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Insert insert(String calendarId, com.google.api.services.calendar.model.Event content)" ] }, "instances": { "description": "Returns instances of the specified recurring event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Instances instances(String calendarId, String eventId)" ] }, "list": { "description": "Returns events on the specified calendar", "signatures": [ "com.google.api.services.calendar.Calendar$Events$List list(String calendarId)" ] }, "move": { "description": "Moves an event to another calendar, i", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Move move(String calendarId, String eventId, String destination)" ] }, "patch": { "description": "Updates an event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Patch patch(String calendarId, String eventId, com.google.api.services.calendar.model.Event content)" ] }, "quickAdd": { "description": "Creates an event based on a simple text string", "signatures": [ "com.google.api.services.calendar.Calendar$Events$QuickAdd quickAdd(String calendarId, String text)" ] }, "update": { "description": "Updates an event", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Update update(String calendarId, String eventId, com.google.api.services.calendar.model.Event content)" ] }, "watch": { "description": "Watch for changes to Events resources", "signatures": [ "com.google.api.services.calendar.Calendar$Events$Watch watch(String calendarId, com.google.api.services.calendar.model.Channel content)" ] } } },
    "freebusy": { "consumerOnly": false, "producerOnly": false, "description": "The freebusy collection of methods", "methods": { "query": { "description": "Returns free\/busy information for a set of calendars", "signatures": [ "com.google.api.services.calendar.Calendar$Freebusy$Query query(com.google.api.services.calendar.model.FreeBusyRequest content)" ] } } },
    "list": { "consumerOnly": false, "producerOnly": false, "description": "The calendarList collection of methods", "methods": { "delete": { "description": "Removes a calendar from the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Delete delete(String calendarId)" ] }, "get": { "description": "Returns a calendar from the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Get get(String calendarId)" ] }, "insert": { "description": "Inserts an existing calendar into the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Insert insert(com.google.api.services.calendar.model.CalendarListEntry content)" ] }, "list": { "description": "Returns the calendars on the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$List list()" ] }, "patch": { "description": "Updates an existing calendar on the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Patch patch(String calendarId, com.google.api.services.calendar.model.CalendarListEntry content)" ] }, "update": { "description": "Updates an existing calendar on the user's calendar list", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Update update(String calendarId, com.google.api.services.calendar.model.CalendarListEntry content)" ] }, "watch": { "description": "Watch for changes to CalendarList resources", "signatures": [ "com.google.api.services.calendar.Calendar$CalendarList$Watch watch(com.google.api.services.calendar.model.Channel content)" ] } } },
    "settings": { "consumerOnly": false, "producerOnly": false, "description": "The settings collection of methods", "methods": { "get": { "description": "Returns a single user setting", "signatures": [ "com.google.api.services.calendar.Calendar$Settings$Get get(String setting)" ] }, "list": { "description": "Returns all user settings for the authenticated user", "signatures": [ "com.google.api.services.calendar.Calendar$Settings$List list()" ] }, "watch": { "description": "Watch for changes to Settings resources", "signatures": [ "com.google.api.services.calendar.Calendar$Settings$Watch watch(com.google.api.services.calendar.model.Channel content)" ] } } }
  },
  "apiProperties": {
    "acl": { "methods": { "delete": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "ruleId": { "index": 1, "kind": "parameter", "displayName": "Rule Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "ACL rule identifier", "optional": false } } }, "get": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "ruleId": { "index": 1, "kind": "parameter", "displayName": "Rule Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "ACL rule identifier", "optional": false } } }, "insert": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.AclRule", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.AclRule", "optional": false }, "sendNotifications": { "index": 2, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to send notifications about the calendar sharing change", "optional": true } } }, "list": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "maxResults": { "index": 1, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "pageToken": { "index": 2, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "showDeleted": { "index": 3, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted ACLs in the result", "optional": true }, "syncToken": { "index": 4, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } }, "patch": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.AclRule", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.AclRule", "optional": false }, "ruleId": { "index": 2, "kind": "parameter", "displayName": "Rule Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "ACL rule identifier", "optional": false }, "sendNotifications": { "index": 3, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to send notifications about the calendar sharing change", "optional": true } } }, "update": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.AclRule", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.AclRule", "optional": false }, "ruleId": { "index": 2, "kind": "parameter", "displayName": "Rule Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "ACL rule identifier", "optional": false }, "sendNotifications": { "index": 3, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to send notifications about the calendar sharing change", "optional": true } } }, "watch": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "contentChannel": { "index": 1, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Channel", "optional": false }, "maxResults": { "index": 2, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "pageToken": { "index": 3, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "showDeleted": { "index": 4, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted ACLs in the result", "optional": true }, "syncToken": { "index": 5, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } } } },
    "calendars": { "methods": { "clear": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false } } }, "delete": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false } } }, "get": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false } } }, "insert": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Calendar", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Calendar", "optional": false } } }, "patch": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Calendar", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Calendar", "optional": false } } }, "update": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Calendar", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Calendar", "optional": false } } } } },
    "channels": { "methods": { "stop": { "properties": { "contentChannel": { "index": 0, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Channel", "optional": false } } } } },
    "events": { "methods": { "calendarImport": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "conferenceDataVersion": { "index": 1, "kind": "parameter", "displayName": "Conference Data Version", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Version number of conference data supported by the API client", "optional": true }, "content": { "index": 2, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Event", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Event", "optional": false }, "supportsAttachments": { "index": 3, "kind": "parameter", "displayName": "Supports Attachments", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether API client performing operation supports event attachments", "optional": true } } }, "delete": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "eventId": { "index": 1, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Event identifier", "optional": false }, "sendNotifications": { "index": 2, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 3, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Guests who should receive notifications about the deletion of the event", "optional": true } } }, "get": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "eventId": { "index": 2, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Event identifier", "optional": false }, "maxAttendees": { "index": 3, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "timeZone": { "index": 4, "kind": "parameter", "displayName": "Time Zone", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Time zone used in the response", "optional": true } } }, "insert": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "conferenceDataVersion": { "index": 1, "kind": "parameter", "displayName": "Conference Data Version", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Version number of conference data supported by the API client", "optional": true }, "content": { "index": 2, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Event", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Event", "optional": false }, "maxAttendees": { "index": 3, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "sendNotifications": { "index": 4, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 5, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to send notifications about the creation of the new event", "optional": true }, "supportsAttachments": { "index": 6, "kind": "parameter", "displayName": "Supports Attachments", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether API client performing operation supports event attachments", "optional": true } } }, "instances": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "eventId": { "index": 2, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Recurring event identifier", "optional": false }, "maxAttendees": { "index": 3, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "maxResults": { "index": 4, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of events returned on one result page", "optional": true }, "originalStart": { "index": 5, "kind": "parameter", "displayName": "Original Start", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The original start time of the instance in the result", "optional": true }, "pageToken": { "index": 6, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "showDeleted": { "index": 7, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted events (with status equals cancelled) in the result", "optional": true }, "timeMax": { "index": 8, "kind": "parameter", "displayName": "Time Max", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Upper bound (exclusive) for an event's start time to filter by", "optional": true }, "timeMin": { "index": 9, "kind": "parameter", "displayName": "Time Min", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Lower bound (inclusive) for an event's end time to filter by", "optional": true }, "timeZone": { "index": 10, "kind": "parameter", "displayName": "Time Zone", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Time zone used in the response", "optional": true } } }, "list": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "eventTypes": { "index": 2, "kind": "parameter", "displayName": "Event Types", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Event types to return", "optional": true }, "iCalUID": { "index": 3, "kind": "parameter", "displayName": "ICal UID", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Specifies an event ID in the iCalendar format to be provided in the response", "optional": true }, "maxAttendees": { "index": 4, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "maxResults": { "index": 5, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of events returned on one result page", "optional": true }, "orderBy": { "index": 6, "kind": "parameter", "displayName": "Order By", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The order of the events returned in the result", "optional": true }, "pageToken": { "index": 7, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "privateExtendedProperty": { "index": 8, "kind": "parameter", "displayName": "Private Extended Property", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Extended properties constraint specified as propertyName=value", "optional": true }, "q": { "index": 9, "kind": "parameter", "displayName": "Q", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Free text search terms to find events that match these terms in the following fields: - summary - description - location - attendee's displayName - attendee's email - organizer's displayName - organizer's email - workingLocationProperties", "optional": true }, "sharedExtendedProperty": { "index": 10, "kind": "parameter", "displayName": "Shared Extended Property", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Extended properties constraint specified as propertyName=value", "optional": true }, "showDeleted": { "index": 11, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted events (with status equals cancelled) in the result", "optional": true }, "showHiddenInvitations": { "index": 12, "kind": "parameter", "displayName": "Show Hidden Invitations", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include hidden invitations in the result", "optional": true }, "singleEvents": { "index": 13, "kind": "parameter", "displayName": "Single Events", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves", "optional": true }, "syncToken": { "index": 14, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true }, "timeMax": { "index": 15, "kind": "parameter", "displayName": "Time Max", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Upper bound (exclusive) for an event's start time to filter by", "optional": true }, "timeMin": { "index": 16, "kind": "parameter", "displayName": "Time Min", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Lower bound (exclusive) for an event's end time to filter by", "optional": true }, "timeZone": { "index": 17, "kind": "parameter", "displayName": "Time Zone", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Time zone used in the response", "optional": true }, "updatedMin": { "index": 18, "kind": "parameter", "displayName": "Updated Min", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by", "optional": true } } }, "move": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier of the source calendar where the event currently is on", "optional": false }, "destination": { "index": 1, "kind": "parameter", "displayName": "Destination", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier of the target calendar where the event is to be moved to", "optional": false }, "eventId": { "index": 2, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Event identifier", "optional": false }, "sendNotifications": { "index": 3, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 4, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Guests who should receive notifications about the change of the event's organizer", "optional": true } } }, "patch": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "conferenceDataVersion": { "index": 2, "kind": "parameter", "displayName": "Conference Data Version", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Version number of conference data supported by the API client", "optional": true }, "content": { "index": 3, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Event", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Event", "optional": false }, "eventId": { "index": 4, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Event identifier", "optional": false }, "maxAttendees": { "index": 5, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "sendNotifications": { "index": 6, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 7, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Guests who should receive notifications about the event update (for example, title changes, etc", "optional": true }, "supportsAttachments": { "index": 8, "kind": "parameter", "displayName": "Supports Attachments", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether API client performing operation supports event attachments", "optional": true } } }, "quickAdd": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "sendNotifications": { "index": 1, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 2, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Guests who should receive notifications about the creation of the new event", "optional": true }, "text": { "index": 3, "kind": "parameter", "displayName": "Text", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The text describing the event to be created", "optional": false } } }, "update": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "conferenceDataVersion": { "index": 2, "kind": "parameter", "displayName": "Conference Data Version", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Version number of conference data supported by the API client", "optional": true }, "content": { "index": 3, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Event", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Event", "optional": false }, "eventId": { "index": 4, "kind": "parameter", "displayName": "Event Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Event identifier", "optional": false }, "maxAttendees": { "index": 5, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "sendNotifications": { "index": 6, "kind": "parameter", "displayName": "Send Notifications", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated", "optional": true }, "sendUpdates": { "index": 7, "kind": "parameter", "displayName": "Send Updates", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Guests who should receive notifications about the event update (for example, title changes, etc", "optional": true }, "supportsAttachments": { "index": 8, "kind": "parameter", "displayName": "Supports Attachments", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether API client performing operation supports event attachments", "optional": true } } }, "watch": { "properties": { "alwaysIncludeEmail": { "index": 0, "kind": "parameter", "displayName": "Always Include Email", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Deprecated and ignored", "optional": true }, "calendarId": { "index": 1, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "contentChannel": { "index": 2, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Channel", "optional": false }, "eventTypes": { "index": 3, "kind": "parameter", "displayName": "Event Types", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Event types to return", "optional": true }, "iCalUID": { "index": 4, "kind": "parameter", "displayName": "ICal UID", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Specifies an event ID in the iCalendar format to be provided in the response", "optional": true }, "maxAttendees": { "index": 5, "kind": "parameter", "displayName": "Max Attendees", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of attendees to include in the response", "optional": true }, "maxResults": { "index": 6, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of events returned on one result page", "optional": true }, "orderBy": { "index": 7, "kind": "parameter", "displayName": "Order By", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The order of the events returned in the result", "optional": true }, "pageToken": { "index": 8, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "privateExtendedProperty": { "index": 9, "kind": "parameter", "displayName": "Private Extended Property", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Extended properties constraint specified as propertyName=value", "optional": true }, "q": { "index": 10, "kind": "parameter", "displayName": "Q", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Free text search terms to find events that match these terms in the following fields: - summary - description - location - attendee's displayName - attendee's email - organizer's displayName - organizer's email - workingLocationProperties", "optional": true }, "sharedExtendedProperty": { "index": 11, "kind": "parameter", "displayName": "Shared Extended Property", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List", "deprecated": false, "autowired": false, "secret": false, "description": "Extended properties constraint specified as propertyName=value", "optional": true }, "showDeleted": { "index": 12, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted events (with status equals cancelled) in the result", "optional": true }, "showHiddenInvitations": { "index": 13, "kind": "parameter", "displayName": "Show Hidden Invitations", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include hidden invitations in the result", "optional": true }, "singleEvents": { "index": 14, "kind": "parameter", "displayName": "Single Events", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves", "optional": true }, "syncToken": { "index": 15, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true }, "timeMax": { "index": 16, "kind": "parameter", "displayName": "Time Max", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Upper bound (exclusive) for an event's start time to filter by", "optional": true }, "timeMin": { "index": 17, "kind": "parameter", "displayName": "Time Min", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Lower bound (exclusive) for an event's end time to filter by", "optional": true }, "timeZone": { "index": 18, "kind": "parameter", "displayName": "Time Zone", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Time zone used in the response", "optional": true }, "updatedMin": { "index": 19, "kind": "parameter", "displayName": "Updated Min", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.util.DateTime", "deprecated": false, "autowired": false, "secret": false, "description": "Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by", "optional": true } } } } },
    "freebusy": { "methods": { "query": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.FreeBusyRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.FreeBusyRequest", "optional": false } } } } },
    "list": { "methods": { "delete": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false } } }, "get": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false } } }, "insert": { "properties": { "colorRgbFormat": { "index": 0, "kind": "parameter", "displayName": "Color Rgb Format", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB)", "optional": true }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.CalendarListEntry", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.CalendarListEntry", "optional": false } } }, "list": { "properties": { "maxResults": { "index": 0, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "minAccessRole": { "index": 1, "kind": "parameter", "displayName": "Min Access Role", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The minimum access role for the user in the returned entries", "optional": true }, "pageToken": { "index": 2, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "showDeleted": { "index": 3, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted calendar list entries in the result", "optional": true }, "showHidden": { "index": 4, "kind": "parameter", "displayName": "Show Hidden", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to show hidden entries", "optional": true }, "syncToken": { "index": 5, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } }, "patch": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "colorRgbFormat": { "index": 1, "kind": "parameter", "displayName": "Color Rgb Format", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB)", "optional": true }, "content": { "index": 2, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.CalendarListEntry", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.CalendarListEntry", "optional": false } } }, "update": { "properties": { "calendarId": { "index": 0, "kind": "parameter", "displayName": "Calendar Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the primary keyword.", "optional": false }, "colorRgbFormat": { "index": 1, "kind": "parameter", "displayName": "Color Rgb Format", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB)", "optional": true }, "content": { "index": 2, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.CalendarListEntry", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.CalendarListEntry", "optional": false } } }, "watch": { "properties": { "contentChannel": { "index": 0, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Channel", "optional": false }, "maxResults": { "index": 1, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "minAccessRole": { "index": 2, "kind": "parameter", "displayName": "Min Access Role", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The minimum access role for the user in the returned entries", "optional": true }, "pageToken": { "index": 3, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "showDeleted": { "index": 4, "kind": "parameter", "displayName": "Show Deleted", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to include deleted calendar list entries in the result", "optional": true }, "showHidden": { "index": 5, "kind": "parameter", "displayName": "Show Hidden", "group": "common", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to show hidden entries", "optional": true }, "syncToken": { "index": 6, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } } } },
    "settings": { "methods": { "get": { "properties": { "setting": { "index": 0, "kind": "parameter", "displayName": "Setting", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the user setting", "optional": false } } }, "list": { "properties": { "maxResults": { "index": 0, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "pageToken": { "index": 1, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "syncToken": { "index": 2, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } }, "watch": { "properties": { "contentChannel": { "index": 0, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.calendar.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.calendar.model.Channel", "optional": false }, "maxResults": { "index": 1, "kind": "parameter", "displayName": "Max Results", "group": "common", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum number of entries returned on one result page", "optional": true }, "pageToken": { "index": 2, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token specifying which result page to return", "optional": true }, "syncToken": { "index": 3, "kind": "parameter", "displayName": "Sync Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request", "optional": true } } } } }
  }
}
