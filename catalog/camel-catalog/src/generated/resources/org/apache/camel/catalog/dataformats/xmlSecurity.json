{
  "dataformat": {
    "kind": "dataformat",
    "name": "xmlSecurity",
    "title": "XML Security",
    "description": "Encrypt and decrypt XML payloads using Apache Santuario.",
    "deprecated": false,
    "firstVersion": "2.0.0",
    "label": "dataformat,transformation,xml",
    "javaType": "org.apache.camel.dataformat.xmlsecurity.XMLSecurityDataFormat",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-xmlsecurity",
    "version": "4.4.0-SNAPSHOT",
    "modelName": "xmlSecurity",
    "modelJavaType": "org.apache.camel.model.dataformat.XMLSecurityDataFormat"
  },
  "properties": {
    "id": { "index": 0, "kind": "attribute", "displayName": "Id", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of this node" },
    "xmlCipherAlgorithm": { "index": 1, "kind": "attribute", "displayName": "Xml Cipher Algorithm", "required": false, "type": "enum", "javaType": "java.lang.String", "enum": [ "TRIPLEDES", "AES_128", "AES_128_GCM", "AES_192", "AES_192_GCM", "AES_256", "AES_256_GCM", "SEED_128", "CAMELLIA_128", "CAMELLIA_192", "CAMELLIA_256" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "AES-256-GCM", "description": "The cipher algorithm to be used for encryption\/decryption of the XML message content. The available choices are: XMLCipher.TRIPLEDES XMLCipher.AES_128 XMLCipher.AES_128_GCM XMLCipher.AES_192 XMLCipher.AES_192_GCM XMLCipher.AES_256 XMLCipher.AES_256_GCM XMLCipher.SEED_128 XMLCipher.CAMELLIA_128 XMLCipher.CAMELLIA_192 XMLCipher.CAMELLIA_256 The default value is XMLCipher.AES_256_GCM" },
    "passPhrase": { "index": 2, "kind": "attribute", "displayName": "Pass Phrase", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "A String used as passPhrase to encrypt\/decrypt content. The passPhrase has to be provided. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key" },
    "passPhraseByte": { "index": 3, "kind": "attribute", "displayName": "Pass Phrase Byte", "label": "advanced", "required": false, "type": "string", "javaType": "byte[]", "deprecated": false, "autowired": false, "secret": false, "description": "A byte used as passPhrase to encrypt\/decrypt content. The passPhrase has to be provided. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key" },
    "secureTag": { "index": 4, "kind": "attribute", "displayName": "Secure Tag", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The XPath reference to the XML Element selected for encryption\/decryption. If no tag is specified, the entire payload is encrypted\/decrypted." },
    "secureTagContents": { "index": 5, "kind": "attribute", "displayName": "Secure Tag Contents", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "A boolean value to specify whether the XML Element is to be encrypted or the contents of the XML Element. false = Element Level. true = Element Content Level." },
    "keyCipherAlgorithm": { "index": 6, "kind": "attribute", "displayName": "Key Cipher Algorithm", "required": false, "type": "enum", "javaType": "java.lang.String", "enum": [ "RSA_v1dot5", "RSA_OAEP", "RSA_OAEP_11" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "RSA_OAEP", "description": "The cipher algorithm to be used for encryption\/decryption of the asymmetric key. The available choices are: XMLCipher.RSA_v1dot5 XMLCipher.RSA_OAEP XMLCipher.RSA_OAEP_11 The default value is XMLCipher.RSA_OAEP" },
    "recipientKeyAlias": { "index": 7, "kind": "attribute", "displayName": "Recipient Key Alias", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The key alias to be used when retrieving the recipient's public or private key from a KeyStore when performing asymmetric key encryption or decryption." },
    "keyOrTrustStoreParametersRef": { "index": 8, "kind": "attribute", "displayName": "Key Or Trust Store Parameters Ref", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Refers to a KeyStore instance to lookup in the registry, which is used for configuration options for creating and loading a KeyStore instance that represents the sender's trustStore or recipient's keyStore." },
    "keyPassword": { "index": 9, "kind": "attribute", "displayName": "Key Password", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The password to be used for retrieving the private key from the KeyStore. This key is used for asymmetric decryption." },
    "digestAlgorithm": { "index": 10, "kind": "attribute", "displayName": "Digest Algorithm", "required": false, "type": "enum", "javaType": "java.lang.String", "enum": [ "SHA1", "SHA256", "SHA512" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "SHA1", "description": "The digest algorithm to use with the RSA OAEP algorithm. The available choices are: XMLCipher.SHA1 XMLCipher.SHA256 XMLCipher.SHA512 The default value is XMLCipher.SHA1" },
    "mgfAlgorithm": { "index": 11, "kind": "attribute", "displayName": "Mgf Algorithm", "required": false, "type": "enum", "javaType": "java.lang.String", "enum": [ "MGF1_SHA1", "MGF1_SHA256", "MGF1_SHA512" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "MGF1_SHA1", "description": "The MGF Algorithm to use with the RSA OAEP algorithm. The available choices are: EncryptionConstants.MGF1_SHA1 EncryptionConstants.MGF1_SHA256 EncryptionConstants.MGF1_SHA512 The default value is EncryptionConstants.MGF1_SHA1" },
    "addKeyValueForEncryptedKey": { "index": 12, "kind": "attribute", "displayName": "Add Key Value For Encrypted Key", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether to add the public key used to encrypt the session key as a KeyValue in the EncryptedKey structure or not." }
  }
}
