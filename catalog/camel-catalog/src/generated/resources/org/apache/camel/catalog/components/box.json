{
  "component": {
    "kind": "component",
    "name": "box",
    "title": "Box",
    "description": "Upload, download and manage files, folders, groups, collaborations, etc. on box.com.",
    "deprecated": false,
    "deprecationNote": "",
    "firstVersion": "2.14.0",
    "label": "cloud,file,api",
    "javaType": "org.apache.camel.component.box.BoxComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-box",
    "version": "3.7.0-SNAPSHOT",
    "scheme": "box",
    "extendsScheme": "",
    "syntax": "box:apiName\/methodName",
    "async": false,
    "api": true,
    "apiSyntax": "apiName\/methodName",
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": true
  },
  "componentProperties": {
    "clientId": { "kind": "property", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box application client ID" },
    "configuration": { "kind": "property", "displayName": "Configuration", "group": "common", "label": "", "required": false, "type": "object", "javaType": "org.apache.camel.component.box.BoxConfiguration", "deprecated": false, "autowired": false, "secret": false, "description": "To use the shared configuration" },
    "enterpriseId": { "kind": "property", "displayName": "Enterprise Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The enterprise ID to use for an App Enterprise." },
    "userId": { "kind": "property", "displayName": "User Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The user ID to use for an App User." },
    "bridgeErrorHandler": { "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "lazyStartProducer": { "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." },
    "httpParams": { "kind": "property", "displayName": "Http Params", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Custom HTTP params for settings like proxy host" },
    "authenticationType": { "kind": "property", "displayName": "Authentication Type", "group": "authentication", "label": "authentication", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "APP_USER_AUTHENTICATION", "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The type of authentication for connection. Types of Authentication: STANDARD_AUTHENTICATION - OAuth 2.0 (3-legged) SERVER_AUTHENTICATION - OAuth 2.0 with JSON Web Tokens" },
    "accessTokenCache": { "kind": "property", "displayName": "Access Token Cache", "group": "security", "label": "advanced,security", "required": false, "type": "object", "javaType": "com.box.sdk.IAccessTokenCache", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Custom Access Token Cache for storing and retrieving access tokens." },
    "clientSecret": { "kind": "property", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box application client secret" },
    "encryptionAlgorithm": { "kind": "property", "displayName": "Encryption Algorithm", "group": "security", "label": "advanced,security", "required": false, "type": "object", "javaType": "com.box.sdk.EncryptionAlgorithm", "enum": [ "RSA_SHA_256", "RSA_SHA_384", "RSA_SHA_512" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "RSA_SHA_256", "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The type of encryption algorithm for JWT. Supported Algorithms: RSA_SHA_256 RSA_SHA_384 RSA_SHA_512" },
    "maxCacheEntries": { "kind": "property", "displayName": "Max Cache Entries", "group": "security", "label": "advanced,security", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 100, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The maximum number of access tokens in cache." },
    "privateKeyFile": { "kind": "property", "displayName": "Private Key File", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The private key for generating the JWT signature." },
    "privateKeyPassword": { "kind": "property", "displayName": "Private Key Password", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The password for the private key." },
    "publicKeyId": { "kind": "property", "displayName": "Public Key Id", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The ID for public key for validating the JWT signature." },
    "sslContextParameters": { "kind": "property", "displayName": "Ssl Context Parameters", "group": "security", "label": "security", "required": false, "type": "object", "javaType": "org.apache.camel.support.jsse.SSLContextParameters", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "To configure security using SSLContextParameters." },
    "userName": { "kind": "property", "displayName": "User Name", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box user name, MUST be provided" },
    "userPassword": { "kind": "property", "displayName": "User Password", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box user password, MUST be provided if authSecureStorage is not set, or returns null on first call" }
  },
  "properties": {
    "apiName": { "kind": "path", "displayName": "Api Name", "group": "common", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.box.internal.BoxApiName", "enum": [ "COLLABORATIONS", "COMMENTS", "EVENT_LOGS", "FILES", "FOLDERS", "GROUPS", "EVENTS", "SEARCH", "TASKS", "USERS" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "What kind of operation to perform" },
    "methodName": { "kind": "path", "displayName": "Method Name", "group": "common", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "What sub operation to use for the selected operation" },
    "clientId": { "kind": "parameter", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box application client ID" },
    "enterpriseId": { "kind": "parameter", "displayName": "Enterprise Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The enterprise ID to use for an App Enterprise." },
    "inBody": { "kind": "parameter", "displayName": "In Body", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "userId": { "kind": "parameter", "displayName": "User Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The user ID to use for an App User." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "autowired": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut", "InOptionalOut" ], "deprecated": false, "autowired": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "httpParams": { "kind": "parameter", "displayName": "Http Params", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Custom HTTP params for settings like proxy host" },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." },
    "authenticationType": { "kind": "parameter", "displayName": "Authentication Type", "group": "authentication", "label": "authentication", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "APP_USER_AUTHENTICATION", "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The type of authentication for connection. Types of Authentication: STANDARD_AUTHENTICATION - OAuth 2.0 (3-legged) SERVER_AUTHENTICATION - OAuth 2.0 with JSON Web Tokens" },
    "accessTokenCache": { "kind": "parameter", "displayName": "Access Token Cache", "group": "security", "label": "advanced,security", "required": false, "type": "object", "javaType": "com.box.sdk.IAccessTokenCache", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Custom Access Token Cache for storing and retrieving access tokens." },
    "clientSecret": { "kind": "parameter", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box application client secret" },
    "encryptionAlgorithm": { "kind": "parameter", "displayName": "Encryption Algorithm", "group": "security", "label": "advanced,security", "required": false, "type": "object", "javaType": "com.box.sdk.EncryptionAlgorithm", "enum": [ "RSA_SHA_256", "RSA_SHA_384", "RSA_SHA_512" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "RSA_SHA_256", "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The type of encryption algorithm for JWT. Supported Algorithms: RSA_SHA_256 RSA_SHA_384 RSA_SHA_512" },
    "maxCacheEntries": { "kind": "parameter", "displayName": "Max Cache Entries", "group": "security", "label": "advanced,security", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 100, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The maximum number of access tokens in cache." },
    "privateKeyFile": { "kind": "parameter", "displayName": "Private Key File", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The private key for generating the JWT signature." },
    "privateKeyPassword": { "kind": "parameter", "displayName": "Private Key Password", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The password for the private key." },
    "publicKeyId": { "kind": "parameter", "displayName": "Public Key Id", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "The ID for public key for validating the JWT signature." },
    "sslContextParameters": { "kind": "parameter", "displayName": "Ssl Context Parameters", "group": "security", "label": "security", "required": false, "type": "object", "javaType": "org.apache.camel.support.jsse.SSLContextParameters", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "To configure security using SSLContextParameters." },
    "userName": { "kind": "parameter", "displayName": "User Name", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box user name, MUST be provided" },
    "userPassword": { "kind": "parameter", "displayName": "User Password", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.box.BoxConfiguration", "configurationField": "configuration", "description": "Box user password, MUST be provided if authSecureStorage is not set, or returns null on first call" }
  },
  "apis": {
    "collaborations": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box collaborations", "aliases": [ "addFolderCollaboration=add", "addFolderCollaborationByEmail=addByEmail", "deleteCollaboration=delete", "getFolderCollaborations=collaborations", "getPendingCollaborations=pendingCollaborations", "getCollaborationInfo=info", "updateCollaborationInfo=updateInfo" ], "methods": { "addFolderCollaboration": { "description": "Add a collaboration to this folder", "signatures": [ "com.box.sdk.BoxCollaboration addFolderCollaboration(String folderId, com.box.sdk.BoxCollaborator collaborator, com.box.sdk.BoxCollaboration$Role role)" ] }, "addFolderCollaborationByEmail": { "description": "Add a collaboration to this folder", "signatures": [ "com.box.sdk.BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, com.box.sdk.BoxCollaboration$Role role)" ] }, "deleteCollaboration": { "description": "Delete collaboration", "signatures": [ "void deleteCollaboration(String collaborationId)" ] }, "getCollaborationInfo": { "description": "Get collaboration information", "signatures": [ "com.box.sdk.BoxCollaboration$Info getCollaborationInfo(String collaborationId)" ] }, "getFolderCollaborations": { "description": "Get information about all of the collaborations for folder", "signatures": [ "java.util.Collection<com.box.sdk.BoxCollaboration$Info> getFolderCollaborations(String folderId)" ] }, "updateCollaborationInfo": { "description": "Update collaboration information", "signatures": [ "com.box.sdk.BoxCollaboration updateCollaborationInfo(String collaborationId, com.box.sdk.BoxCollaboration$Info info)" ] } } },
    "comments": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box comments", "aliases": [ "addFileComment=add", "changeCommentMessage=updateMessage", "deleteComment=delete", "getCommentInfo=info", "getFileComments=comments", "replyToComment=reply" ], "methods": { "addFileComment": { "description": "Add comment to file", "signatures": [ "com.box.sdk.BoxFile addFileComment(String fileId, String message)" ] }, "changeCommentMessage": { "description": "Change comment message", "signatures": [ "com.box.sdk.BoxComment changeCommentMessage(String commentId, String message)" ] }, "deleteComment": { "description": "Delete comment", "signatures": [ "void deleteComment(String commentId)" ] }, "getCommentInfo": { "description": "Get comment information", "signatures": [ "com.box.sdk.BoxComment$Info getCommentInfo(String commentId)" ] }, "getFileComments": { "description": "Get a list of any comments on this file", "signatures": [ "java.util.List<com.box.sdk.BoxComment$Info> getFileComments(String fileId)" ] }, "replyToComment": { "description": "Reply to a comment", "signatures": [ "com.box.sdk.BoxComment replyToComment(String commentId, String message)" ] } } },
    "event-logs": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to read Box enterprise (admin) event logs", "aliases": [ "getEnterpriseEvents=events" ], "methods": { "getEnterpriseEvents": { "description": "Create an event stream with optional starting initial position and add listener that will be notified when an event is received", "signatures": [ "java.util.List<com.box.sdk.BoxEvent> getEnterpriseEvents(String position, java.util.Date after, java.util.Date before, com.box.sdk.BoxEvent$Type[] types)" ] } } },
    "events": { "consumerOnly": true, "producerOnly": false, "description": "Provides operations to manage Box events", "methods": { "listen": { "description": "Create an event stream with optional starting initial position and add listener that will be notified when an event is received", "signatures": [ "void listen(com.box.sdk.EventListener listener, Long startingPosition)" ] } } },
    "files": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box files", "aliases": [ "uploadFile=upload", "downloadFile=download", "copyFile=copy", "moveFile=move", "renameFile=rename", "createFileSharedLink=link", "deleteFile=delete", "uploadNewFileVersion=uploadVersion", "promoteFileVersion=promoteVersion", "getFileVersions=versions", "downloadPreviousFileVersion=downloadVersion", "deleteFileVersion=deleteVersion", "getFileInfo=info", "updateFileInfo=updateInfo", "createFileMetadata=createMetadata", "getFileMetadata=metadata", "updateFileMetadata=updateMetadata", "deleteFileMetadata=deleteMetadata", "getDownloadUrl=url", "getPreviewLink=preview", "getFileThumbnail=thumbnail", "checkUpload=canUpload" ], "methods": { "checkUpload": { "description": "Does a pre-verification before upload, to check if the filename already exists or if there is permission to upload", "signatures": [ "void checkUpload(String fileName, String parentFolderId, Long size)" ] }, "copyFile": { "description": "Copy file to destination folder while optionally giving it a new name", "signatures": [ "com.box.sdk.BoxFile copyFile(String fileId, String destinationFolderId, String newName)" ] }, "createFileMetadata": { "description": "Create metadata for file in either the global properties template or the specified template type", "signatures": [ "com.box.sdk.Metadata createFileMetadata(String fileId, com.box.sdk.Metadata metadata, String typeName)" ] }, "createFileSharedLink": { "description": "Create a shared link to file", "signatures": [ "com.box.sdk.BoxSharedLink createFileSharedLink(String fileId, com.box.sdk.BoxSharedLink$Access access, java.util.Date unshareDate, com.box.sdk.BoxSharedLink$Permissions permissions)" ] }, "deleteFile": { "description": "Delete the file", "signatures": [ "void deleteFile(String fileId)" ] }, "deleteFileMetadata": { "description": "Delete the file properties metadata", "signatures": [ "void deleteFileMetadata(String fileId)" ] }, "deleteFileVersion": { "description": "Delete a file version", "signatures": [ "void deleteFileVersion(String fileId, Integer version)" ] }, "downloadFile": { "description": "Download a file", "signatures": [ "java.io.OutputStream downloadFile(String fileId, java.io.OutputStream output, Long rangeStart, Long rangeEnd, com.box.sdk.ProgressListener listener)" ] }, "downloadPreviousFileVersion": { "description": "Download a previous version of file", "signatures": [ "java.io.OutputStream downloadPreviousFileVersion(String fileId, Integer version, java.io.OutputStream output, com.box.sdk.ProgressListener listener)" ] }, "getDownloadURL": { "description": "Get an expiring URL for downloading a file directly from Box", "signatures": [ "java.net.URL getDownloadURL(String fileId)" ] }, "getFileInfo": { "description": "Get file information", "signatures": [ "com.box.sdk.BoxFile$Info getFileInfo(String fileId, String[] fields)" ] }, "getFileMetadata": { "description": "Gets the file properties metadata", "signatures": [ "com.box.sdk.Metadata getFileMetadata(String fileId, String typeName)" ] }, "getFilePreviewLink": { "description": "Get an expiring URL for creating an embedded preview session", "signatures": [ "java.net.URL getFilePreviewLink(String fileId)" ] }, "getFileThumbnail": { "description": "Retrieves a thumbnail, or smaller image representation, of this file", "signatures": [ "byte[] getFileThumbnail(String fileId, com.box.sdk.BoxFile$ThumbnailFileType fileType, Integer minWidth, Integer minHeight, Integer maxWidth, Integer maxHeight)" ] }, "getFileVersions": { "description": "Get any previous versions of file", "signatures": [ "java.util.Collection<com.box.sdk.BoxFileVersion> getFileVersions(String fileId)" ] }, "moveFile": { "description": "Move file to destination folder while optionally giving it a new name", "signatures": [ "com.box.sdk.BoxFile moveFile(String fileId, String destinationFolderId, String newName)" ] }, "promoteFileVersion": { "description": "Promote a previous version of file", "signatures": [ "com.box.sdk.BoxFileVersion promoteFileVersion(String fileId, Integer version)" ] }, "renameFile": { "description": "Rename file giving it the name newName", "signatures": [ "com.box.sdk.BoxFile renameFile(String fileId, String newFileName)" ] }, "updateFileInfo": { "description": "Update file information", "signatures": [ "com.box.sdk.BoxFile updateFileInfo(String fileId, com.box.sdk.BoxFile$Info info)" ] }, "updateFileMetadata": { "description": "Update the file properties metadata", "signatures": [ "com.box.sdk.Metadata updateFileMetadata(String fileId, com.box.sdk.Metadata metadata)" ] }, "uploadFile": { "description": "Upload a new file to parent folder", "signatures": [ "com.box.sdk.BoxFile uploadFile(String parentFolderId, java.io.InputStream content, String fileName, java.util.Date created, java.util.Date modified, Long size, Boolean check, com.box.sdk.ProgressListener listener)" ] }, "uploadNewFileVersion": { "description": "Upload a new version of file", "signatures": [ "com.box.sdk.BoxFile uploadNewFileVersion(String fileId, java.io.InputStream fileContent, java.util.Date modified, Long fileSize, com.box.sdk.ProgressListener listener)" ] } } },
    "folders": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box folders", "aliases": [ "getRootFolder=root", "createFolder=create", "copyFolder=copy", "moveFolder=move", "renameFolder=rename", "createFolderSharedLink=link", "deleteFolder=delete", "getFolder=folder", "getFolderInfo=info", "getFolderItems=items", "updateFolderInfo=updateInfo" ], "methods": { "copyFolder": { "description": "Copy folder to destination folder while optionally giving it a new name", "signatures": [ "com.box.sdk.BoxFolder copyFolder(String folderId, String destinationFolderId, String newName)" ] }, "createFolder": { "description": "Create a folder specified by path from parent folder with given parentFolderId, creating intermediate directories as required", "signatures": [ "com.box.sdk.BoxFolder createFolder(String parentFolderId, String folderName)", "com.box.sdk.BoxFolder createFolder(String parentFolderId, String[] path)" ] }, "createFolderSharedLink": { "description": "Create a shared link to folder", "signatures": [ "com.box.sdk.BoxSharedLink createFolderSharedLink(String folderId, com.box.sdk.BoxSharedLink$Access access, java.util.Date unshareDate, com.box.sdk.BoxSharedLink$Permissions permissions)" ] }, "deleteFolder": { "description": "Delete folder", "signatures": [ "void deleteFolder(String folderId)" ] }, "getFolder": { "description": "Return the Box folder referenced by path", "signatures": [ "com.box.sdk.BoxFolder getFolder(String[] path)" ] }, "getFolderInfo": { "description": "Get folder information", "signatures": [ "com.box.sdk.BoxFolder$Info getFolderInfo(String folderId, String[] fields)" ] }, "getFolderItems": { "description": "Returns a specific range of child items in folder and specifies which fields of each item to retrieve", "signatures": [ "java.util.Collection<com.box.sdk.BoxItem$Info> getFolderItems(String folderId, Long offset, Long limit, String[] fields)" ] }, "moveFolder": { "description": "Move folder to destination folder while optionally giving it a new name", "signatures": [ "com.box.sdk.BoxFolder moveFolder(String folderId, String destinationFolderId, String newName)" ] }, "renameFolder": { "description": "Rename folder giving it the name newName", "signatures": [ "com.box.sdk.BoxFolder renameFolder(String folderId, String newFolderName)" ] }, "updateFolderInfo": { "description": "Update folder information", "signatures": [ "com.box.sdk.BoxFolder updateFolderInfo(String folderId, com.box.sdk.BoxFolder$Info info)" ] } } },
    "groups": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box groups", "aliases": [ "createGroup=create", "deleteGroup=delete", "getAllGroups=groups", "getGroupInfo=info", "addGroupMembership=addMembership", "deleteGroupMembership=deleteMembership", "getGroupMemberships=memberships", "getGroupMembershipInfo=membershipInfo", "updateGroupMembershipInfo=updateMembershipInfo" ], "methods": { "addGroupMembership": { "description": "Add a member to group with the specified role", "signatures": [ "com.box.sdk.BoxGroupMembership addGroupMembership(String groupId, String userId, com.box.sdk.BoxGroupMembership$Role role)" ] }, "createGroup": { "description": "Create a new group with a specified name and optional additional parameters", "signatures": [ "com.box.sdk.BoxGroup createGroup(String name, String provenance, String externalSyncIdentifier, String description, String invitabilityLevel, String memberViewabilityLevel)" ] }, "deleteGroup": { "description": "Delete group", "signatures": [ "void deleteGroup(String groupId)" ] }, "deleteGroupMembership": { "description": "Delete group membership", "signatures": [ "void deleteGroupMembership(String groupMembershipId)" ] }, "getGroupInfo": { "description": "Get group information", "signatures": [ "com.box.sdk.BoxGroup$Info getGroupInfo(String groupId)" ] }, "getGroupMembershipInfo": { "description": "Get group membership information", "signatures": [ "com.box.sdk.BoxGroupMembership$Info getGroupMembershipInfo(String groupMembershipId)" ] }, "getGroupMemberships": { "description": "Get information about all of the group memberships for this group", "signatures": [ "java.util.Collection<com.box.sdk.BoxGroupMembership$Info> getGroupMemberships(String groupId)" ] }, "updateGroupInfo": { "description": "Update group information", "signatures": [ "com.box.sdk.BoxGroup updateGroupInfo(String groupId, com.box.sdk.BoxGroup$Info groupInfo)" ] }, "updateGroupMembershipInfo": { "description": "Update group membership information", "signatures": [ "com.box.sdk.BoxGroupMembership updateGroupMembershipInfo(String groupMembershipId, com.box.sdk.BoxGroupMembership$Info info)" ] } } },
    "search": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box searches", "aliases": [ "searchFolder=search" ], "methods": { "searchFolder": { "description": "Search folder and all descendant folders using the given query", "signatures": [ "java.util.Collection<com.box.sdk.BoxItem> searchFolder(String folderId, String query)" ] } } },
    "tasks": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box tasks", "aliases": [ "addFileTask=add", "deleteTask=delete", "getFileTasks=tasks", "getTaskInfo=info", "updateTaskInfo=updateInfo", "addAssignmentToTask=addAssignment", "deleteTaskAssignment=deleteAssignment", "getTaskAssignments=assignments", "getTaskAssignmentInfo=assignmentInfo" ], "methods": { "addAssignmentToTask": { "description": "Add assignment for task", "signatures": [ "com.box.sdk.BoxTask addAssignmentToTask(String taskId, com.box.sdk.BoxUser assignTo)" ] }, "addFileTask": { "description": "Add task to file", "signatures": [ "com.box.sdk.BoxTask addFileTask(String fileId, com.box.sdk.BoxTask$Action action, java.util.Date dueAt, String message)" ] }, "deleteTask": { "description": "Delete task", "signatures": [ "void deleteTask(String taskId)" ] }, "deleteTaskAssignment": { "description": "Delete task assignment", "signatures": [ "void deleteTaskAssignment(String taskAssignmentId)" ] }, "getFileTasks": { "description": "Get a list of any tasks on file", "signatures": [ "java.util.List<com.box.sdk.BoxTask$Info> getFileTasks(String fileId)" ] }, "getTaskAssignmentInfo": { "description": "Get task assignment information", "signatures": [ "com.box.sdk.BoxTaskAssignment$Info getTaskAssignmentInfo(String taskAssignmentId)" ] }, "getTaskAssignments": { "description": "Get a list of any assignments for task", "signatures": [ "java.util.List<com.box.sdk.BoxTaskAssignment$Info> getTaskAssignments(String taskId)" ] }, "getTaskInfo": { "description": "Get task information", "signatures": [ "com.box.sdk.BoxTask$Info getTaskInfo(String taskId)" ] }, "updateTaskInfo": { "description": "Update task information", "signatures": [ "com.box.sdk.BoxTask updateTaskInfo(String taskId, com.box.sdk.BoxTask$Info info)" ] } } },
    "users": { "consumerOnly": false, "producerOnly": true, "description": "Provides operations to manage Box users", "aliases": [ "getCurrentUser=currentUser", "getAllEnterpriseOrExternalUsers=users", "createAppUser=create", "createEnterpriseUser=create", "deleteUser=delete", "addUserEmailAlias=addEmailAlias", "getUserEmailAlias=emailAlias", "deleteUserEmailAlias=deleteEmailAlias", "getUserInfo=info", "updateUserInfo=updateInfo" ], "methods": { "addUserEmailAlias": { "description": "Add a new email alias to user's account", "signatures": [ "com.box.sdk.EmailAlias addUserEmailAlias(String userId, String email)" ] }, "createAppUser": { "description": "Provision a new app user in an enterprise with additional user information using Box Developer Edition", "signatures": [ "com.box.sdk.BoxUser createAppUser(String name, com.box.sdk.CreateUserParams params)" ] }, "createEnterpriseUser": { "description": "Provision a new user in an enterprise with additional user information", "signatures": [ "com.box.sdk.BoxUser createEnterpriseUser(String login, String name, com.box.sdk.CreateUserParams params)" ] }, "deleteUser": { "description": "Delete user from an enterprise account", "signatures": [ "void deleteUser(String userId, boolean notifyUser, boolean force)" ] }, "deleteUserEmailAlias": { "description": "Delete an email alias from user's account", "signatures": [ "void deleteUserEmailAlias(String userId, String emailAliasId)" ] }, "getAllEnterpriseOrExternalUsers": { "description": "Get any managed users that match the filter term as well as any external users that match the filter term", "signatures": [ "java.util.List<com.box.sdk.BoxUser$Info> getAllEnterpriseOrExternalUsers(String filterTerm, String[] fields)" ] }, "getUserEmailAlias": { "description": "Get a collection of all the email aliases for user", "signatures": [ "java.util.Collection<com.box.sdk.EmailAlias> getUserEmailAlias(String userId)" ] }, "getUserInfo": { "description": "Get user information", "signatures": [ "com.box.sdk.BoxUser$Info getUserInfo(String userId)" ] }, "moveFolderToUser": { "description": "Move root folder for specified user to current user", "signatures": [ "com.box.sdk.BoxFolder$Info moveFolderToUser(String userId, String sourceUserId)" ] }, "updateUserInfo": { "description": "Update user information", "signatures": [ "com.box.sdk.BoxUser updateUserInfo(String userId, com.box.sdk.BoxUser$Info info)" ] } } }
  },
  "apiProperties": {
    "collaborations": { "methods": { "addFolderCollaboration": { "properties": { "collaborator": { "kind": "parameter", "displayName": "Collaborator", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxCollaborator", "deprecated": false, "autowired": false, "secret": false, "description": "The collaborator to add", "optional": false }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to add collaboration to", "optional": false }, "role": { "kind": "parameter", "displayName": "Role", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxCollaboration.Role", "enum": [ "EDITOR", "VIEWER", "PREVIEWER", "UPLOADER", "PREVIEWER_UPLOADER", "VIEWER_UPLOADER", "CO_OWNER", "OWNER" ], "deprecated": false, "autowired": false, "secret": false, "description": "The role of the collaborator", "optional": false } } }, "addFolderCollaborationByEmail": { "properties": { "email": { "kind": "parameter", "displayName": "Email", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The email address of the collaborator to add", "optional": false }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to add collaboration to", "optional": false }, "role": { "kind": "parameter", "displayName": "Role", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxCollaboration.Role", "enum": [ "EDITOR", "VIEWER", "PREVIEWER", "UPLOADER", "PREVIEWER_UPLOADER", "VIEWER_UPLOADER", "CO_OWNER", "OWNER" ], "deprecated": false, "autowired": false, "secret": false, "description": "The role of the collaborator", "optional": false } } }, "deleteCollaboration": { "properties": { "collaborationId": { "kind": "parameter", "displayName": "Collaboration Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of comment to change", "optional": false } } }, "getCollaborationInfo": { "properties": { "collaborationId": { "kind": "parameter", "displayName": "Collaboration Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of collaboration", "optional": false } } }, "getFolderCollaborations": { "properties": { "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to get collaborations information on", "optional": false } } }, "updateCollaborationInfo": { "properties": { "collaborationId": { "kind": "parameter", "displayName": "Collaboration Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of collaboration", "optional": false }, "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxCollaboration.Info", "deprecated": false, "autowired": false, "secret": false, "description": "Collaboration information to update", "optional": false } } } } },
    "comments": { "methods": { "addFileComment": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false }, "message": { "kind": "parameter", "displayName": "Message", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The comment's message", "optional": false } } }, "changeCommentMessage": { "properties": { "commentId": { "kind": "parameter", "displayName": "Comment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of comment to change", "optional": false }, "message": { "kind": "parameter", "displayName": "Message", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new message for the comment", "optional": false } } }, "deleteComment": { "properties": { "commentId": { "kind": "parameter", "displayName": "Comment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of comment to delete", "optional": false } } }, "getCommentInfo": { "properties": { "commentId": { "kind": "parameter", "displayName": "Comment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of comment", "optional": false } } }, "getFileComments": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false } } }, "replyToComment": { "properties": { "commentId": { "kind": "parameter", "displayName": "Comment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of comment to reply to", "optional": false }, "message": { "kind": "parameter", "displayName": "Message", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The message for the reply", "optional": false } } } } },
    "event-logs": { "methods": { "getEnterpriseEvents": { "properties": { "after": { "kind": "parameter", "displayName": "After", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The lower bound on the timestamp of the events returned", "optional": false }, "before": { "kind": "parameter", "displayName": "Before", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The upper bound on the timestamp of the events returned", "optional": false }, "position": { "kind": "parameter", "displayName": "Position", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The starting position of the event stream. May be null in which case all events within bounds returned.", "optional": true }, "types": { "kind": "parameter", "displayName": "Types", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxEvent.Type[]", "deprecated": false, "autowired": false, "secret": false, "description": "An optional list of event types to filter by", "optional": true } } } } },
    "events": { "methods": { "listen": { "properties": { "startingPosition": { "kind": "parameter", "displayName": "Starting Position", "group": "consumer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The starting position of the event stream", "optional": true } } } } },
    "files": { "methods": { "checkUpload": { "properties": { "fileName": { "kind": "parameter", "displayName": "File Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name to give the uploaded file", "optional": false }, "parentFolderId": { "kind": "parameter", "displayName": "Parent Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of parent folder", "optional": false }, "size": { "kind": "parameter", "displayName": "Size", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The size of the file's content used for monitoring the upload's progress", "optional": true } } }, "copyFile": { "properties": { "destinationFolderId": { "kind": "parameter", "displayName": "Destination Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the destination folder", "optional": false }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to copy", "optional": false }, "newName": { "kind": "parameter", "displayName": "New Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name for copied file; if newName is null, the copied file has same name as the original.", "optional": true } } }, "createFileMetadata": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the file to create metadata for", "optional": false }, "metadata": { "kind": "parameter", "displayName": "Metadata", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.Metadata", "deprecated": false, "autowired": false, "secret": false, "description": "The new metadata values", "optional": false }, "typeName": { "kind": "parameter", "displayName": "Type Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The metadata template type name; if null the global properties template type is used.", "optional": true } } }, "createFileSharedLink": { "properties": { "access": { "kind": "parameter", "displayName": "Access", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxSharedLink.Access", "enum": [ "DEFAULT", "OPEN", "COMPANY", "COLLABORATORS" ], "deprecated": false, "autowired": false, "secret": false, "description": "The access level of the shared link", "optional": false }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the file to create shared link on", "optional": false }, "permissions": { "kind": "parameter", "displayName": "Permissions", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxSharedLink.Permissions", "deprecated": false, "autowired": false, "secret": false, "description": "The permissions of the created link; if permissions is null then the created shared link is create with default permissions.", "optional": true }, "unshareDate": { "kind": "parameter", "displayName": "Unshare Date", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The date and time at which time the created shared link will expire; if unsharedDate is null then a non-expiring link is created.", "optional": true } } }, "deleteFile": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to delete", "optional": false } } }, "deleteFileMetadata": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to delete", "optional": false } } }, "deleteFileVersion": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file with version to delete", "optional": false }, "version": { "kind": "parameter", "displayName": "Version", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The version of file to delete; initial version of file has value of 0, second version of file is 1 and so on.", "optional": false } } }, "downloadFile": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false }, "listener": { "kind": "parameter", "displayName": "Listener", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.ProgressListener", "deprecated": false, "autowired": false, "secret": false, "description": "A listener for monitoring the download's progress; if null the download's progress will not be monitored.", "optional": true }, "output": { "kind": "parameter", "displayName": "Output", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.io.OutputStream", "deprecated": false, "autowired": false, "secret": false, "description": "The stream to which the file contents will be written", "optional": false }, "rangeEnd": { "kind": "parameter", "displayName": "Range End", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The byte offset in file at which to stop the download; if null the entire contents of file will be downloaded.", "optional": true }, "rangeStart": { "kind": "parameter", "displayName": "Range Start", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The byte offset in file at which to start the download; if null the entire contents of file will be downloaded.", "optional": true } } }, "downloadPreviousFileVersion": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false }, "listener": { "kind": "parameter", "displayName": "Listener", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.ProgressListener", "deprecated": false, "autowired": false, "secret": false, "description": "A listener for monitoring the download's progress; if null the download's progress will not be monitored.", "optional": true }, "output": { "kind": "parameter", "displayName": "Output", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.io.OutputStream", "deprecated": false, "autowired": false, "secret": false, "description": "The stream to which the version contents will be written", "optional": false }, "version": { "kind": "parameter", "displayName": "Version", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The version of file to download; initial version of file has value of 0, second version of file is 1 and so on.", "optional": false } } }, "getDownloadURL": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false } } }, "getFileInfo": { "properties": { "fields": { "kind": "parameter", "displayName": "Fields", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "The information fields to retrieve; if null all information fields are retrieved.", "optional": true }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false } } }, "getFileMetadata": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the file to retrieve metadata for", "optional": false }, "typeName": { "kind": "parameter", "displayName": "Type Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The metadata template type name; if null the global properties template type is used.", "optional": true } } }, "getFilePreviewLink": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the file to get preview link on", "optional": false } } }, "getFileThumbnail": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the file to get thumbnail", "optional": false }, "fileType": { "kind": "parameter", "displayName": "File Type", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxFile.ThumbnailFileType", "enum": [ "PNG", "JPG" ], "deprecated": false, "autowired": false, "secret": false, "description": "Either PNG of JPG", "optional": false }, "maxHeight": { "kind": "parameter", "displayName": "Max Height", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum height", "optional": false }, "maxWidth": { "kind": "parameter", "displayName": "Max Width", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Maximum width", "optional": false }, "minHeight": { "kind": "parameter", "displayName": "Min Height", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Minimum height", "optional": false }, "minWidth": { "kind": "parameter", "displayName": "Min Width", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Minimum width", "optional": false } } }, "getFileVersions": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false } } }, "moveFile": { "properties": { "destinationFolderId": { "kind": "parameter", "displayName": "Destination Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the destination folder", "optional": false }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to move", "optional": false }, "newName": { "kind": "parameter", "displayName": "New Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name of moved file; if newName is null, the moved file has same name as the original.", "optional": true } } }, "promoteFileVersion": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false }, "version": { "kind": "parameter", "displayName": "Version", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "The version of file to promote; initial version of file has value of 0, second version of file is 1 and so on.", "optional": false } } }, "renameFile": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to rename", "optional": false }, "newFileName": { "kind": "parameter", "displayName": "New File Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name of file", "optional": false } } }, "updateFileInfo": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to update", "optional": false }, "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxFile.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false } } }, "updateFileMetadata": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to delete", "optional": false }, "metadata": { "kind": "parameter", "displayName": "Metadata", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.Metadata", "deprecated": false, "autowired": false, "secret": false, "description": "The new metadata values", "optional": false } } }, "uploadFile": { "properties": { "check": { "kind": "parameter", "displayName": "Check", "group": "producer", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "If the file name is already used, call the uploadNewVersion instead.", "optional": true }, "content": { "kind": "parameter", "displayName": "Content", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.io.InputStream", "deprecated": false, "autowired": false, "secret": false, "description": "A stream containing contents of the file to upload", "optional": false }, "created": { "kind": "parameter", "displayName": "Created", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The content created date that will be given to the uploaded file", "optional": true }, "fileName": { "kind": "parameter", "displayName": "File Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name to give the uploaded file", "optional": false }, "listener": { "kind": "parameter", "displayName": "Listener", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.ProgressListener", "deprecated": false, "autowired": false, "secret": false, "description": "A listener for monitoring the upload's progress", "optional": true }, "modified": { "kind": "parameter", "displayName": "Modified", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The content modified date that will be given to the uploaded file", "optional": true }, "parentFolderId": { "kind": "parameter", "displayName": "Parent Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of parent folder", "optional": false }, "size": { "kind": "parameter", "displayName": "Size", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The size of the file's content used for monitoring the upload's progress", "optional": true } } }, "uploadNewFileVersion": { "properties": { "fileContent": { "kind": "parameter", "displayName": "File Content", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.io.InputStream", "deprecated": false, "autowired": false, "secret": false, "description": "A stream containing contents of the file to upload", "optional": false }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false }, "fileSize": { "kind": "parameter", "displayName": "File Size", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The size of the file's content used for monitoring the upload's progress", "optional": true }, "listener": { "kind": "parameter", "displayName": "Listener", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.ProgressListener", "deprecated": false, "autowired": false, "secret": false, "description": "A listener for monitoring the upload's progress", "optional": true }, "modified": { "kind": "parameter", "displayName": "Modified", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The content modified date that will be given to the uploaded file", "optional": true } } } } },
    "folders": { "methods": { "copyFolder": { "properties": { "destinationFolderId": { "kind": "parameter", "displayName": "Destination Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the destination folder", "optional": false }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to copy", "optional": false }, "newName": { "kind": "parameter", "displayName": "New Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name for copied folder; if newName is null, the copied folder has same name as the original.", "optional": true } } }, "createFolder": { "properties": { "folderName": { "kind": "parameter", "displayName": "Folder Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name of created folder", "optional": false }, "parentFolderId": { "kind": "parameter", "displayName": "Parent Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of parent folder", "optional": false }, "path": { "kind": "parameter", "displayName": "Path", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "Sequence of Box folder names from parent folder to returned folder", "optional": false } } }, "createFolderSharedLink": { "properties": { "access": { "kind": "parameter", "displayName": "Access", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxSharedLink.Access", "enum": [ "DEFAULT", "OPEN", "COMPANY", "COLLABORATORS" ], "deprecated": false, "autowired": false, "secret": false, "description": "The access level of the shared link", "optional": false }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to create shared link on", "optional": false }, "permissions": { "kind": "parameter", "displayName": "Permissions", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxSharedLink.Permissions", "deprecated": false, "autowired": false, "secret": false, "description": "The permissions of the created link; if permissions is null then the created shared link is create with default permissions.", "optional": false }, "unshareDate": { "kind": "parameter", "displayName": "Unshare Date", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The date and time at which time the created shared link will expire; if unsharedDate is null then a non-expiring link is created.", "optional": false } } }, "deleteFolder": { "properties": { "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to delete", "optional": false } } }, "getFolder": { "properties": { "path": { "kind": "parameter", "displayName": "Path", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "Sequence of Box folder names from root folder to returned folder", "optional": false } } }, "getFolderInfo": { "properties": { "fields": { "kind": "parameter", "displayName": "Fields", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "The information fields to retrieve; if null all information fields are retrieved.", "optional": true }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder", "optional": false } } }, "getFolderItems": { "properties": { "fields": { "kind": "parameter", "displayName": "Fields", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "The item fields to retrieve for each child item; if null all item fields are retrieved.", "optional": true }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder", "optional": false }, "limit": { "kind": "parameter", "displayName": "Limit", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The maximum number of children to retrieve after the offset; if null all child items are retrieved.", "optional": true }, "offset": { "kind": "parameter", "displayName": "Offset", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "autowired": false, "secret": false, "description": "The index of first child item to retrieve; if null all child items are retrieved.", "optional": true } } }, "moveFolder": { "properties": { "destinationFolderId": { "kind": "parameter", "displayName": "Destination Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the destination folder", "optional": false }, "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to move", "optional": false }, "newName": { "kind": "parameter", "displayName": "New Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name of moved folder; if newName is null, the moved folder has same name as the original.", "optional": true } } }, "renameFolder": { "properties": { "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to rename", "optional": false }, "newFolderName": { "kind": "parameter", "displayName": "New Folder Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The new name of folder", "optional": false } } }, "updateFolderInfo": { "properties": { "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder to update", "optional": false }, "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxFolder.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false } } } } },
    "groups": { "methods": { "addGroupMembership": { "properties": { "groupId": { "kind": "parameter", "displayName": "Group Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group", "optional": false }, "role": { "kind": "parameter", "displayName": "Role", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxGroupMembership.Role", "enum": [ "ADMIN", "SUBMASTER", "MEMBER" ], "deprecated": false, "autowired": false, "secret": false, "description": "The role of the user in this group. Can be null to assign the default role.", "optional": true }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user to be added to group", "optional": false } } }, "createGroup": { "properties": { "description": { "kind": "parameter", "displayName": "Description", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The description of the new group", "optional": true }, "externalSyncIdentifier": { "kind": "parameter", "displayName": "External Sync Identifier", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The external_sync_identifier of the new group", "optional": true }, "invitabilityLevel": { "kind": "parameter", "displayName": "Invitability Level", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The invitibility_level of the new group", "optional": true }, "memberViewabilityLevel": { "kind": "parameter", "displayName": "Member Viewability Level", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The member_viewability_level of the new group", "optional": true }, "name": { "kind": "parameter", "displayName": "Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name of the new group", "optional": false }, "provenance": { "kind": "parameter", "displayName": "Provenance", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The provenance of the new group", "optional": true } } }, "deleteGroup": { "properties": { "groupId": { "kind": "parameter", "displayName": "Group Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group to delete", "optional": false } } }, "deleteGroupMembership": { "properties": { "groupMembershipId": { "kind": "parameter", "displayName": "Group Membership Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group membership to delete", "optional": false } } }, "getGroupInfo": { "properties": { "groupId": { "kind": "parameter", "displayName": "Group Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group", "optional": false } } }, "getGroupMembershipInfo": { "properties": { "groupMembershipId": { "kind": "parameter", "displayName": "Group Membership Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group membership", "optional": false } } }, "getGroupMemberships": { "properties": { "groupId": { "kind": "parameter", "displayName": "Group Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group", "optional": false } } }, "updateGroupInfo": { "properties": { "groupId": { "kind": "parameter", "displayName": "Group Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group to update", "optional": false }, "groupInfo": { "kind": "parameter", "displayName": "Group Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxGroup.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false } } }, "updateGroupMembershipInfo": { "properties": { "groupMembershipId": { "kind": "parameter", "displayName": "Group Membership Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of group membership to update", "optional": false }, "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxGroupMembership.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false } } } } },
    "search": { "methods": { "searchFolder": { "properties": { "folderId": { "kind": "parameter", "displayName": "Folder Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of folder searched", "optional": false }, "query": { "kind": "parameter", "displayName": "Query", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The search query", "optional": false } } } } },
    "tasks": { "methods": { "addAssignmentToTask": { "properties": { "assignTo": { "kind": "parameter", "displayName": "Assign To", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxUser", "deprecated": false, "autowired": false, "secret": false, "description": "The user to assign to task", "optional": false }, "taskId": { "kind": "parameter", "displayName": "Task Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task to add assignment for", "optional": false } } }, "addFileTask": { "properties": { "action": { "kind": "parameter", "displayName": "Action", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxTask.Action", "enum": [ "REVIEW", "COMPLETE" ], "deprecated": false, "autowired": false, "secret": false, "description": "The action the task assignee will be prompted to do", "optional": false }, "dueAt": { "kind": "parameter", "displayName": "Due At", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.util.Date", "deprecated": false, "autowired": false, "secret": false, "description": "The day at which this task is due", "optional": false }, "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file to add task to", "optional": false }, "message": { "kind": "parameter", "displayName": "Message", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "An optional message to include with the task", "optional": true } } }, "deleteTask": { "properties": { "taskId": { "kind": "parameter", "displayName": "Task Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task to delete", "optional": false } } }, "deleteTaskAssignment": { "properties": { "taskAssignmentId": { "kind": "parameter", "displayName": "Task Assignment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task assignment to delete", "optional": false } } }, "getFileTasks": { "properties": { "fileId": { "kind": "parameter", "displayName": "File Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of file", "optional": false } } }, "getTaskAssignmentInfo": { "properties": { "taskAssignmentId": { "kind": "parameter", "displayName": "Task Assignment Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task assignment", "optional": false } } }, "getTaskAssignments": { "properties": { "taskId": { "kind": "parameter", "displayName": "Task Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task", "optional": false } } }, "getTaskInfo": { "properties": { "taskId": { "kind": "parameter", "displayName": "Task Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task", "optional": false } } }, "updateTaskInfo": { "properties": { "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxTask.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false }, "taskId": { "kind": "parameter", "displayName": "Task Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of task", "optional": false } } } } },
    "users": { "methods": { "addUserEmailAlias": { "properties": { "email": { "kind": "parameter", "displayName": "Email", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The email address to add as an alias", "optional": false }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user", "optional": false } } }, "createAppUser": { "properties": { "name": { "kind": "parameter", "displayName": "Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name of the user", "optional": false }, "params": { "kind": "parameter", "displayName": "Params", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.CreateUserParams", "deprecated": false, "autowired": false, "secret": false, "description": "Additional user information", "optional": true } } }, "createEnterpriseUser": { "properties": { "login": { "kind": "parameter", "displayName": "Login", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The email address the user will use to login", "optional": false }, "name": { "kind": "parameter", "displayName": "Name", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The name of the user", "optional": false }, "params": { "kind": "parameter", "displayName": "Params", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.CreateUserParams", "deprecated": false, "autowired": false, "secret": false, "description": "Additional user information", "optional": true } } }, "deleteUser": { "properties": { "force": { "kind": "parameter", "displayName": "Force", "group": "producer", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether or not this user should be deleted even if they still own files", "optional": false }, "notifyUser": { "kind": "parameter", "displayName": "Notify User", "group": "producer", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether or not to send an email notification to the user that their account has been deleted", "optional": false }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user to delete", "optional": false } } }, "deleteUserEmailAlias": { "properties": { "emailAliasId": { "kind": "parameter", "displayName": "Email Alias Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the email alias to delete", "optional": false }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user", "optional": false } } }, "getAllEnterpriseOrExternalUsers": { "properties": { "fields": { "kind": "parameter", "displayName": "Fields", "group": "producer", "label": "", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "The fields to retrieve. Leave this out for the standard fields.", "optional": true }, "filterTerm": { "kind": "parameter", "displayName": "Filter Term", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The filter term to lookup users by (login for external, login or name for managed); if null all managed users are returned.", "optional": true } } }, "getUserEmailAlias": { "properties": { "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user", "optional": false } } }, "getUserInfo": { "properties": { "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user", "optional": false } } }, "moveFolderToUser": { "properties": { "sourceUserId": { "kind": "parameter", "displayName": "Source User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The user id of the user whose files will be the source for this operation", "optional": false }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user", "optional": false } } }, "updateUserInfo": { "properties": { "info": { "kind": "parameter", "displayName": "Info", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.box.sdk.BoxUser.Info", "deprecated": false, "autowired": false, "secret": false, "description": "The updated information", "optional": false }, "userId": { "kind": "parameter", "displayName": "User Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of user to update", "optional": false } } } } }
  }
}
