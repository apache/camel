{
  "component": {
    "kind": "component",
    "name": "openstack-neutron",
    "title": "OpenStack Neutron",
    "description": "Access OpenStack Neutron for network services.",
    "deprecated": false,
    "firstVersion": "2.19.0",
    "label": "cloud,paas",
    "javaType": "org.apache.camel.component.openstack.neutron.NeutronComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-openstack",
    "version": "3.20.0-SNAPSHOT",
    "scheme": "openstack-neutron",
    "extendsScheme": "",
    "syntax": "openstack-neutron:host",
    "async": false,
    "api": false,
    "consumerOnly": false,
    "producerOnly": true,
    "lenientProperties": false
  },
  "componentProperties": {
    "lazyStartProducer": { "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." }
  },
  "headers": {
    "tenantId": { "kind": "header", "displayName": "", "group": "network port router", "label": "network port router", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Tenant ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#TENANT_ID" },
    "networkId": { "kind": "header", "displayName": "", "group": "subnet port", "label": "subnet port", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Network ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#NETWORK_ID" },
    "adminStateUp": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "Boolean", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "AdminStateUp header.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#ADMIN_STATE_UP" },
    "networkType": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "org.openstack4j.model.network.NetworkType", "enum": [ "LOCAL", "FLAT", "VLAN", "VXLAN", "GRE" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Network type.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#NETWORK_TYPE" },
    "physicalNetwork": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Physical network.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#PHYSICAL_NETWORK" },
    "segmentId": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Segment ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#SEGMENT_ID" },
    "isShared": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "Boolean", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Is shared.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#IS_SHARED" },
    "isRouterExternal": { "kind": "header", "displayName": "", "group": "network", "label": "network", "required": false, "javaType": "Boolean", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Is router external.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#IS_ROUTER_EXTERNAL" },
    "enableDHCP": { "kind": "header", "displayName": "", "group": "subnet", "label": "subnet", "required": false, "javaType": "Boolean", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Enable DHCP.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#ENABLE_DHCP" },
    "gateway": { "kind": "header", "displayName": "", "group": "subnet", "label": "subnet", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Gateway.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#GATEWAY" },
    "ipVersion": { "kind": "header", "displayName": "", "group": "subnet", "label": "subnet", "required": false, "javaType": "org.openstack4j.model.network.IPVersionType", "enum": [ "V4", "V6" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "IP version.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#IP_VERSION" },
    "cidr": { "kind": "header", "displayName": "", "group": "subnet", "label": "subnet", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The cidr representing the IP range for this subnet, based on IP version.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#CIDR" },
    "subnetPools": { "kind": "header", "displayName": "", "group": "subnet", "label": "subnet", "required": false, "javaType": "org.openstack4j.openstack.networking.domain.NeutronPool", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The allocation pool.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#SUBNET_POOL" },
    "deviceId": { "kind": "header", "displayName": "", "group": "port", "label": "port", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Device ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#DEVICE_ID" },
    "macAddress": { "kind": "header", "displayName": "", "group": "port", "label": "port", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "MAC address.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#MAC_ADDRESS" },
    "routerId": { "kind": "header", "displayName": "", "group": "router", "label": "router", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Router ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#ROUTER_ID" },
    "subnetId": { "kind": "header", "displayName": "", "group": "router subnet", "label": "router subnet", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Subnet ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#SUBNET_ID" },
    "portId": { "kind": "header", "displayName": "", "group": "port router", "label": "port router", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Port ID.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#PORT_ID" },
    "interfaceType": { "kind": "header", "displayName": "", "group": "router", "label": "router", "required": false, "javaType": "org.openstack4j.model.network.AttachInterfaceType", "enum": [ "PORT", "SUBNET" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "Interface type.", "constantName": "org.apache.camel.component.openstack.neutron.NeutronConstants#ITERFACE_TYPE" },
    "operation": { "kind": "header", "displayName": "", "group": "producer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The operation to perform.", "constantName": "org.apache.camel.component.openstack.common.OpenstackConstants#OPERATION" },
    "ID": { "kind": "header", "displayName": "", "group": "producer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The ID.", "constantName": "org.apache.camel.component.openstack.common.OpenstackConstants#ID" },
    "name": { "kind": "header", "displayName": "", "group": "producer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The name.", "constantName": "org.apache.camel.component.openstack.common.OpenstackConstants#NAME" }
  },
  "properties": {
    "host": { "kind": "path", "displayName": "Host", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "OpenStack host url" },
    "apiVersion": { "kind": "parameter", "displayName": "Api Version", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "enum": [ "V2", "V3" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "V3", "description": "OpenStack API version" },
    "config": { "kind": "parameter", "displayName": "Config", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "org.openstack4j.core.transport.Config", "deprecated": false, "autowired": false, "secret": false, "description": "OpenStack configuration" },
    "domain": { "kind": "parameter", "displayName": "Domain", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "default", "description": "Authentication domain" },
    "operation": { "kind": "parameter", "displayName": "Operation", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The operation to do" },
    "password": { "kind": "parameter", "displayName": "Password", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": true, "description": "OpenStack password" },
    "project": { "kind": "parameter", "displayName": "Project", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The project ID" },
    "subsystem": { "kind": "parameter", "displayName": "Subsystem", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "enum": [ "networks", "subnets", "ports", "routers" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "OpenStack Neutron subsystem" },
    "username": { "kind": "parameter", "displayName": "Username", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": true, "description": "OpenStack username" },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer (advanced)", "label": "producer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." }
  }
}
