{
  "model": {
    "kind": "model",
    "name": "camelContext",
    "title": "Camel Context",
    "description": "CamelContext using XML configuration.",
    "deprecated": false,
    "label": "spring,configuration",
    "javaType": "org.apache.camel.spring.CamelContextFactoryBean",
    "input": false,
    "output": false
  },
  "properties": {
    "depends-on": { "kind": "attribute", "displayName": "Depends On", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "List of other bean id's this CamelContext depends up. Multiple bean id's can be separated by comma." },
    "trace": { "kind": "attribute", "displayName": "Trace", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether tracing is enabled or not. To use tracing then this must be enabled on startup to be installed in the CamelContext." },
    "backlogTrace": { "kind": "attribute", "displayName": "Backlog Trace", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether backlog tracing is enabled or not. To use backlog tracing then this must be enabled on startup to be installed in the CamelContext." },
    "tracePattern": { "kind": "attribute", "displayName": "Trace Pattern", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Tracing pattern to match which node EIPs to trace. For example to match all To EIP nodes, use to. The pattern matches by node and route id's Multiple patterns can be separated by comma." },
    "debug": { "kind": "attribute", "displayName": "Debug", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether debugging is enabled or not. To use debugging then this must be enabled on startup to be installed in the CamelContext." },
    "messageHistory": { "kind": "attribute", "displayName": "Message History", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "false", "description": "Sets whether message history is enabled or not." },
    "logMask": { "kind": "attribute", "displayName": "Log Mask", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "false", "description": "Sets whether security mask for Logging is enabled or not." },
    "logExhaustedMessageBody": { "kind": "attribute", "displayName": "Log Exhausted Message Body", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether to log exhausted message body with message history." },
    "streamCache": { "kind": "attribute", "displayName": "Stream Cache", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether stream caching is enabled or not." },
    "delayer": { "kind": "attribute", "displayName": "Delayer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets a delay value in millis that a message is delayed at every step it takes in the route path, slowing the process down to better observe what is occurring" },
    "errorHandlerRef": { "kind": "attribute", "displayName": "Error Handler Ref", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of the error handler object used to default the error handling strategy" },
    "autoStartup": { "kind": "attribute", "displayName": "Auto Startup", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Sets whether the object should automatically start when Camel starts. Important: Currently only routes can be disabled, as CamelContext s are always started. Note: When setting auto startup false on CamelContext then that takes precedence and no routes is started. You would need to start CamelContext explicit using the org.apache.camel.CamelContext#start() method, to start the context, and then you would need to start the routes manually using org.apache.camel.spi.RouteController#startRoute(String) ." },
    "shutdownEager": { "kind": "attribute", "displayName": "Shutdown Eager", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Whether to shutdown CamelContext eager when Spring is shutting down. This ensure a cleaner shutdown of Camel, as dependent bean's are not shutdown at this moment. The bean's will then be shutdown after camelContext." },
    "useMDCLogging": { "kind": "attribute", "displayName": "Use MDC Logging", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set whether MDC is enabled." },
    "mdcLoggingKeysPattern": { "kind": "attribute", "displayName": "MDC Logging Keys Pattern", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the pattern used for determine which custom MDC keys to propagate during message routing when the routing engine continues routing asynchronously for the given message. Setting this pattern to will propagate all custom keys. Or setting the pattern to foo,bar will propagate any keys starting with either foo or bar. Notice that a set of standard Camel MDC keys are always propagated which starts with camel. as key name. The match rules are applied in this order (case insensitive): 1. exact match, returns true 2. wildcard match (pattern ends with a and the name starts with the pattern), returns true 3. regular expression match, returns true 4. otherwise returns false" },
    "useDataType": { "kind": "attribute", "displayName": "Use Data Type", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to enable using data type on Camel messages. Data type are automatic turned on if: one ore more routes has been explicit configured with input and output types when using rest-dsl with binding turned on Otherwise data type is default off." },
    "useBreadcrumb": { "kind": "attribute", "displayName": "Use Breadcrumb", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set whether breadcrumb is enabled." },
    "beanPostProcessorEnabled": { "kind": "attribute", "displayName": "Bean Post Processor Enabled", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Can be used to turn off bean post processing. Be careful to turn this off, as this means that beans that use Camel annotations such as org.apache.camel.EndpointInject , org.apache.camel.ProducerTemplate , org.apache.camel.Produce , org.apache.camel.Consume etc will not be injected and in use. Turning this off should only be done if you are sure you do not use any of these Camel features. Not all runtimes allow turning this off (such as camel-blueprint or camel-cdi with XML). The default value is true (enabled)." },
    "allowUseOriginalMessage": { "kind": "attribute", "displayName": "Allow Use Original Message", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether to allow access to the original message from Camel's error handler, or from org.apache.camel.spi.UnitOfWork#getOriginalInMessage() . Turning this off can optimize performance, as defensive copy of the original message is not needed." },
    "caseInsensitiveHeaders": { "kind": "attribute", "displayName": "Case Insensitive Headers", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether to use case sensitive or insensitive headers. Important: When using case sensitive (this is set to false). Then the map is case sensitive which means headers such as content-type and Content-Type are two different keys which can be a problem for some protocols such as HTTP based, which rely on case insensitive headers. However case sensitive implementations can yield faster performance. Therefore use case sensitive implementation with care. Default is true." },
    "autowiredEnabled": { "kind": "attribute", "displayName": "Autowired Enabled", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc. Default is true." },
    "runtimeEndpointRegistryEnabled": { "kind": "attribute", "displayName": "Runtime Endpoint Registry Enabled", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether org.apache.camel.spi.RuntimeEndpointRegistry is enabled." },
    "managementNamePattern": { "kind": "attribute", "displayName": "Management Name Pattern", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "#name#", "description": "The naming pattern for creating the CamelContext management name." },
    "threadNamePattern": { "kind": "attribute", "displayName": "Thread Name Pattern", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "Camel (#camelId#) thread ##counter# - #name#", "description": "Sets the thread name pattern used for creating the full thread name. The default pattern is: Camel (#camelId#) thread ##counter# - #name# Where #camelId# is the name of the org.apache.camel.CamelContext and #counter# is a unique incrementing counter. and #name# is the regular thread name. You can also use #longName# is the long thread name which can includes endpoint parameters etc." },
    "shutdownRoute": { "kind": "attribute", "displayName": "Shutdown Route", "required": false, "type": "enum", "javaType": "org.apache.camel.ShutdownRoute", "enum": [ "default", "defer" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "Default", "description": "Sets the ShutdownRoute option for routes." },
    "shutdownRunningTask": { "kind": "attribute", "displayName": "Shutdown Running Task", "required": false, "type": "enum", "javaType": "org.apache.camel.ShutdownRunningTask", "enum": [ "complete-all-tasks", "complete-current-task-only" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "CompleteCurrentTaskOnly", "description": "Sets the ShutdownRunningTask option to use when shutting down a route." },
    "loadTypeConverters": { "kind": "attribute", "displayName": "Load Type Converters", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Sets whether to load custom type converters by scanning classpath. This can be turned off if you are only using Camel components that does not provide type converters which is needed at runtime. In such situations setting this option to false, can speedup starting Camel." },
    "typeConverterStatisticsEnabled": { "kind": "attribute", "displayName": "Type Converter Statistics Enabled", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether or not type converter statistics is enabled. By default the type converter utilization statistics is disabled. Notice: If enabled then there is a slight performance impact under very heavy load. You can enable\/disable the statistics at runtime using the org.apache.camel.spi.TypeConverterRegistry#getStatistics()#setTypeConverterStatisticsEnabled(Boolean) method, or from JMX on the org.apache.camel.api.management.mbean.ManagedTypeConverterRegistryMBean mbean." },
    "inflightRepositoryBrowseEnabled": { "kind": "attribute", "displayName": "Inflight Repository Browse Enabled", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets whether the inflight repository should allow browsing each inflight exchange. This is by default disabled as there is a very slight performance overhead when enabled." },
    "typeConverterExists": { "kind": "attribute", "displayName": "Type Converter Exists", "required": false, "type": "enum", "javaType": "org.apache.camel.TypeConverterExists", "enum": [ "fail", "ignore", "override" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "Override", "description": "What should happen when attempting to add a duplicate type converter. The default behavior is to override the existing." },
    "typeConverterExistsLoggingLevel": { "kind": "attribute", "displayName": "Type Converter Exists Logging Level", "required": false, "type": "enum", "javaType": "org.apache.camel.LoggingLevel", "enum": [ "debug", "error", "info", "off", "trace", "warn" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "WARN", "description": "The logging level to use when logging that a type converter already exists when attempting to add a duplicate type converter. The default logging level is WARN" },
    "globalOptions": { "kind": "element", "displayName": "Global Options", "required": false, "type": "object", "javaType": "org.apache.camel.model.GlobalOptionsDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of CamelContext properties such as limit of debug logging and other general options." },
    "propertyPlaceholder": { "kind": "element", "displayName": "Property Placeholder", "required": false, "type": "object", "javaType": "org.apache.camel.core.xml.CamelPropertyPlaceholderDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of property placeholder" },
    "package": { "kind": "element", "displayName": "Package", "required": false, "type": "array", "javaType": "java.lang.String[]", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the package names to be recursively searched for Java classes which extend org.apache.camel.builder.RouteBuilder to be auto-wired up to the CamelContext as a route. Note that classes are excluded if they are specifically configured in the spring.xml A more advanced configuration can be done using setPackageScan(org.apache.camel.model.PackageScanDefinition)" },
    "packageScan": { "kind": "element", "displayName": "Package Scan", "required": false, "type": "object", "javaType": "org.apache.camel.model.PackageScanDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the package scanning information. Package scanning allows for the automatic discovery of certain camel classes at runtime for inclusion e.g. org.apache.camel.builder.RouteBuilder implementations" },
    "contextScan": { "kind": "element", "displayName": "Context Scan", "required": false, "type": "object", "javaType": "org.apache.camel.model.ContextScanDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the context scanning (eg Spring's ApplicationContext) information. Context scanning allows for the automatic discovery of Camel routes runtime for inclusion e.g. org.apache.camel.builder.RouteBuilder implementations" },
    "streamCaching": { "kind": "element", "displayName": "Stream Caching", "required": false, "type": "object", "javaType": "org.apache.camel.core.xml.CamelStreamCachingStrategyDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of stream caching." },
    "jmxAgent": { "kind": "element", "displayName": "JMX Agent", "required": false, "type": "object", "javaType": "org.apache.camel.core.xml.CamelJMXAgentDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of JMX Agent." },
    "routeController": { "kind": "element", "displayName": "Route Controller", "required": false, "type": "object", "javaType": "org.apache.camel.core.xml.CamelRouteControllerDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of route controller." },
    "beansFactory": { "kind": "element", "displayName": "Beans Factory", "required": true, "type": "array", "javaType": "java.util.List<org.apache.camel.core.xml.AbstractCamelFactoryBean<java.lang.Object>>", "oneOf": [ "consumerTemplate", "fluentTemplate", "template" ], "deprecated": false, "autowired": false, "secret": false, "description": "Miscellaneous configurations" },
    "beans": { "kind": "element", "displayName": "Beans", "required": true, "type": "array", "javaType": "java.util.List<java.lang.Object>", "oneOf": [ "errorHandler", "export", "proxy" ], "deprecated": false, "autowired": false, "secret": false, "description": "Miscellaneous configurations" },
    "defaultServiceCallConfiguration": { "kind": "element", "displayName": "Default Service Call Configuration", "required": false, "type": "object", "javaType": "org.apache.camel.model.cloud.ServiceCallConfigurationDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "ServiceCall EIP default configuration" },
    "serviceCallConfiguration": { "kind": "element", "displayName": "Service Call Configuration", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.cloud.ServiceCallConfigurationDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "ServiceCall EIP configurations" },
    "defaultHystrixConfiguration": { "kind": "element", "displayName": "Default Hystrix Configuration", "required": false, "type": "object", "javaType": "org.apache.camel.model.HystrixConfigurationDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Hystrix EIP default configuration" },
    "hystrixConfiguration": { "kind": "element", "displayName": "Hystrix Configuration", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.HystrixConfigurationDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Hystrix Circuit Breaker EIP configurations" },
    "defaultResilience4jConfiguration": { "kind": "element", "displayName": "Default Resilience4j Configuration", "required": false, "type": "object", "javaType": "org.apache.camel.model.Resilience4jConfigurationDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Resilience4j EIP default configuration" },
    "resilience4jConfiguration": { "kind": "element", "displayName": "Resilience4j Configuration", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.Resilience4jConfigurationDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Resilience4j Circuit Breaker EIP configurations" },
    "defaultFaultToleranceConfiguration": { "kind": "element", "displayName": "Default Fault Tolerance Configuration", "required": false, "type": "object", "javaType": "org.apache.camel.model.FaultToleranceConfigurationDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "MicroProfile Fault Tolerance EIP default configuration" },
    "faultToleranceConfiguration": { "kind": "element", "displayName": "Fault Tolerance Configuration", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.FaultToleranceConfigurationDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "MicroProfile Circuit Breaker EIP configurations" },
    "routeTemplateContextRef": { "kind": "element", "displayName": "Route Template Context Ref", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RouteTemplateContextRefDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Refers to XML route templates to include as route templates in this CamelContext." },
    "routeBuilder": { "kind": "element", "displayName": "Route Builder", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RouteBuilderDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Refers to Java RouteBuilder instances to include as routes in this CamelContext." },
    "routeContextRef": { "kind": "element", "displayName": "Route Context Ref", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RouteContextRefDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Refers to XML routes to include as routes in this CamelContext." },
    "restContextRef": { "kind": "element", "displayName": "Rest Context Ref", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RestContextRefDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Refers to XML rest-dsl to include as REST services in this CamelContext." },
    "threadPoolProfile": { "kind": "element", "displayName": "Thread Pool Profile", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.ThreadPoolProfileDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of thread pool profiles." },
    "threadPool": { "kind": "element", "displayName": "Thread Pool", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.spring.CamelThreadPoolFactoryBean>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of thread pool" },
    "endpoint": { "kind": "element", "displayName": "Endpoint", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.spring.CamelEndpointFactoryBean>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of endpoints" },
    "dataFormats": { "kind": "element", "displayName": "Data Formats", "required": false, "type": "object", "javaType": "org.apache.camel.model.dataformat.DataFormatsDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of data formats." },
    "transformers": { "kind": "element", "displayName": "Transformers", "required": false, "type": "object", "javaType": "org.apache.camel.model.transformer.TransformersDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of transformers." },
    "validators": { "kind": "element", "displayName": "Validators", "required": false, "type": "object", "javaType": "org.apache.camel.model.validator.ValidatorsDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of validators." },
    "redeliveryPolicyProfile": { "kind": "element", "displayName": "Redelivery Policy Profile", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.spring.CamelRedeliveryPolicyFactoryBean>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of redelivery settings." },
    "onException": { "kind": "element", "displayName": "On Exception", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.OnExceptionDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of error handlers that triggers on exceptions thrown." },
    "onCompletion": { "kind": "element", "displayName": "On Completion", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.OnCompletionDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of sub routes to run at the completion of routing." },
    "intercept": { "kind": "element", "displayName": "Intercept", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.InterceptDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of interceptors." },
    "interceptFrom": { "kind": "element", "displayName": "Intercept From", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.InterceptFromDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of interceptors that triggers from the beginning of routes." },
    "interceptSendToEndpoint": { "kind": "element", "displayName": "Intercept Send To Endpoint", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.InterceptSendToEndpointDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration of interceptors that triggers sending messages to endpoints." },
    "restConfiguration": { "kind": "element", "displayName": "Rest Configuration", "required": false, "type": "object", "javaType": "org.apache.camel.model.rest.RestConfigurationDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Configuration for rest-dsl" },
    "rest": { "kind": "element", "displayName": "Rest", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.rest.RestDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Contains the rest services defined using the rest-dsl" },
    "routeTemplate": { "kind": "element", "displayName": "Route Template", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RouteTemplateDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Contains the Camel route templates" },
    "route": { "kind": "element", "displayName": "Route", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.model.RouteDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "Contains the Camel routes" },
    "id": { "kind": "attribute", "displayName": "Id", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of this node" }
  }
}
