{
  "component": {
    "kind": "component",
    "name": "debezium-oracle",
    "title": "Debezium Oracle Connector",
    "description": "Capture changes from a Oracle database.",
    "deprecated": false,
    "firstVersion": "3.17.0",
    "label": "database",
    "javaType": "org.apache.camel.component.debezium.DebeziumOracleComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-debezium-oracle",
    "version": "4.0.0-SNAPSHOT",
    "scheme": "debezium-oracle",
    "extendsScheme": "",
    "syntax": "debezium-oracle:name",
    "async": false,
    "api": false,
    "consumerOnly": true,
    "producerOnly": false,
    "lenientProperties": false
  },
  "componentProperties": {
    "additionalProperties": { "index": 0, "kind": "property", "displayName": "Additional Properties", "group": "common", "label": "common", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "prefix": "additionalProperties.", "multiValue": true, "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http:\/\/localhost:8811\/avro" },
    "bridgeErrorHandler": { "index": 1, "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "configuration": { "index": 2, "kind": "property", "displayName": "Configuration", "group": "consumer", "label": "", "required": false, "type": "object", "javaType": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "deprecated": false, "autowired": false, "secret": false, "description": "Allow pre-configured Configurations to be set." },
    "internalKeyConverter": { "index": 3, "kind": "property", "displayName": "Internal Key Converter", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.json.JsonConverter", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter." },
    "internalValueConverter": { "index": 4, "kind": "property", "displayName": "Internal Value Converter", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.json.JsonConverter", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter." },
    "offsetCommitPolicy": { "index": 5, "kind": "property", "displayName": "Offset Commit Policy", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals." },
    "offsetCommitTimeoutMs": { "index": 6, "kind": "property", "displayName": "Offset Commit Timeout Ms", "group": "consumer", "label": "consumer", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "5000", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds." },
    "offsetFlushIntervalMs": { "index": 7, "kind": "property", "displayName": "Offset Flush Interval Ms", "group": "consumer", "label": "consumer", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "60000", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Interval at which to try committing offsets. The default is 1 minute." },
    "offsetStorage": { "index": 8, "kind": "property", "displayName": "Offset Storage", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.storage.FileOffsetBackingStore", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Java class that is responsible for persistence of connector offsets." },
    "offsetStorageFileName": { "index": 9, "kind": "property", "displayName": "Offset Storage File Name", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore." },
    "offsetStoragePartitions": { "index": 10, "kind": "property", "displayName": "Offset Storage Partitions", "group": "consumer", "label": "consumer", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'." },
    "offsetStorageReplicationFactor": { "index": 11, "kind": "property", "displayName": "Offset Storage Replication Factor", "group": "consumer", "label": "consumer", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore" },
    "offsetStorageTopic": { "index": 12, "kind": "property", "displayName": "Offset Storage Topic", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore." },
    "autowiredEnabled": { "index": 13, "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." },
    "binaryHandlingMode": { "index": 14, "kind": "property", "displayName": "Binary Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "bytes", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string" },
    "columnExcludeList": { "index": 15, "kind": "property", "displayName": "Column Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Regular expressions matching columns to exclude from change events" },
    "columnIncludeList": { "index": 16, "kind": "property", "displayName": "Column Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Regular expressions matching columns to include in change events" },
    "columnPropagateSourceType": { "index": 17, "kind": "property", "displayName": "Column Propagate Source Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records." },
    "converters": { "index": 18, "kind": "property", "displayName": "Converters", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'" },
    "databaseConnectionAdapter": { "index": 19, "kind": "property", "displayName": "Database Connection Adapter", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "LogMiner", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The adapter to use when capturing changes from the database. Options include: 'logminer': (the default) to capture changes using native Oracle LogMiner; 'xstream' to capture changes using Oracle XStreams" },
    "databaseDbname": { "index": 20, "kind": "property", "displayName": "Database Dbname", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the database from which the connector should capture changes" },
    "databaseHostname": { "index": 21, "kind": "property", "displayName": "Database Hostname", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Resolvable hostname or IP address of the database server." },
    "databaseOutServerName": { "index": 22, "kind": "property", "displayName": "Database Out Server Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the XStream Out server to connect to." },
    "databasePassword": { "index": 23, "kind": "property", "displayName": "Database Password", "group": "oracle", "label": "consumer,oracle", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Password of the database user to be used when connecting to the database." },
    "databasePdbName": { "index": 24, "kind": "property", "displayName": "Database Pdb Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the pluggable database when working with a multi-tenant set-up. The CDB name must be given via database.dbname in this case." },
    "databasePort": { "index": 25, "kind": "property", "displayName": "Database Port", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1528, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Port of the database server." },
    "databaseUrl": { "index": 26, "kind": "property", "displayName": "Database Url", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Complete JDBC URL as an alternative to specifying hostname, port and database provided as a way to support alternative connection scenarios." },
    "databaseUser": { "index": 27, "kind": "property", "displayName": "Database User", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the database user to be used when connecting to the database." },
    "datatypePropagateSourceType": { "index": 28, "kind": "property", "displayName": "Datatype Propagate Source Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records." },
    "decimalHandlingMode": { "index": 29, "kind": "property", "displayName": "Decimal Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "precise", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers." },
    "eventProcessingFailureHandlingMode": { "index": 30, "kind": "property", "displayName": "Event Processing Failure Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "fail", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped." },
    "heartbeatActionQuery": { "index": 31, "kind": "property", "displayName": "Heartbeat Action Query", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The query executed with every heartbeat." },
    "heartbeatIntervalMs": { "index": 32, "kind": "property", "displayName": "Heartbeat Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default." },
    "heartbeatTopicsPrefix": { "index": 33, "kind": "property", "displayName": "Heartbeat Topics Prefix", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "__debezium-heartbeat", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat." },
    "includeSchemaChanges": { "index": 34, "kind": "property", "displayName": "Include Schema Changes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history." },
    "includeSchemaComments": { "index": 35, "kind": "property", "displayName": "Include Schema Comments", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'." },
    "intervalHandlingMode": { "index": 36, "kind": "property", "displayName": "Interval Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "numeric", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how INTERVAL columns should be represented in change events, including: 'string' represents values as an exact ISO formatted string; 'numeric' (default) represents values using the inexact conversion into microseconds" },
    "lobEnabled": { "index": 37, "kind": "property", "displayName": "Lob Enabled", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to 'false', the default, LOB fields will not be captured nor emitted. When set to 'true', the connector will capture LOB fields and emit changes for those fields like any other column type." },
    "logMiningArchiveDestinationName": { "index": 38, "kind": "property", "displayName": "Log Mining Archive Destination Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Sets the specific archive log destination as the source for reading archive logs.When not set, the connector will automatically select the first LOCAL and VALID destination." },
    "logMiningArchiveLogHours": { "index": 39, "kind": "property", "displayName": "Log Mining Archive Log Hours", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of hours in the past from SYSDATE to mine archive logs. Using 0 mines all available archive logs" },
    "logMiningArchiveLogOnlyMode": { "index": 40, "kind": "property", "displayName": "Log Mining Archive Log Only Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to 'false', the default, the connector will mine both archive log and redo logs to emit change events. When set to 'true', the connector will only mine archive logs. There are circumstances where its advantageous to only mine archive logs and accept latency in event emission due to frequent revolving redo logs." },
    "logMiningArchiveLogOnlyScnPollIntervalMs": { "index": 41, "kind": "property", "displayName": "Log Mining Archive Log Only Scn Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The interval in milliseconds to wait between polls checking to see if the SCN is in the archive logs." },
    "logMiningBatchSizeDefault": { "index": 42, "kind": "property", "displayName": "Log Mining Batch Size Default", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 20000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The starting SCN interval size that the connector will use for reading data from redo\/archive logs." },
    "logMiningBatchSizeMax": { "index": 43, "kind": "property", "displayName": "Log Mining Batch Size Max", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 100000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum SCN interval size that this connector will use when reading from redo\/archive logs." },
    "logMiningBatchSizeMin": { "index": 44, "kind": "property", "displayName": "Log Mining Batch Size Min", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The minimum SCN interval size that this connector will try to read from redo\/archive logs. Active batch size will be also increased\/decreased by this amount for tuning connector throughput when needed." },
    "logMiningBufferDropOnStop": { "index": 45, "kind": "property", "displayName": "Log Mining Buffer Drop On Stop", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to true the underlying buffer cache is not retained when the connector is stopped. When set to false (the default), the buffer cache is retained across restarts." },
    "logMiningBufferInfinispanCacheEvents": { "index": 46, "kind": "property", "displayName": "Log Mining Buffer Infinispan Cache Events", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'events' cache" },
    "logMiningBufferInfinispanCacheProcessedTransactions": { "index": 47, "kind": "property", "displayName": "Log Mining Buffer Infinispan Cache Processed Transactions", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'processed-transactions' cache" },
    "logMiningBufferInfinispanCacheSchemaChanges": { "index": 48, "kind": "property", "displayName": "Log Mining Buffer Infinispan Cache Schema Changes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'schema-changes' cache" },
    "logMiningBufferInfinispanCacheTransactions": { "index": 49, "kind": "property", "displayName": "Log Mining Buffer Infinispan Cache Transactions", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'transactions' cache" },
    "logMiningBufferTransactionEventsThreshold": { "index": 50, "kind": "property", "displayName": "Log Mining Buffer Transaction Events Threshold", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of events a transaction can include before the transaction is discarded. This is useful for managing buffer memory and\/or space when dealing with very large transactions. Defaults to 0, meaning that no threshold is applied and transactions can have unlimited events." },
    "logMiningBufferType": { "index": 51, "kind": "property", "displayName": "Log Mining Buffer Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "memory", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The buffer type controls how the connector manages buffering transaction data. memory - Uses the JVM process' heap to buffer all transaction data. infinispan_embedded - This option uses an embedded Infinispan cache to buffer transaction data and persist it to disk. infinispan_remote - This option uses a remote Infinispan cluster to buffer transaction data and persist it to disk." },
    "logMiningFlushTableName": { "index": 52, "kind": "property", "displayName": "Log Mining Flush Table Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "LOG_MINING_FLUSH", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the flush table used by the connector, defaults to LOG_MINING_FLUSH." },
    "logMiningQueryFilterMode": { "index": 53, "kind": "property", "displayName": "Log Mining Query Filter Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies how the filter configuration is applied to the LogMiner database query. none - The query does not apply any schema or table filters, all filtering is at runtime by the connector. in - The query uses SQL in-clause expressions to specify the schema or table filters. regex - The query uses Oracle REGEXP_LIKE expressions to specify the schema or table filters." },
    "logMiningRestartConnection": { "index": 54, "kind": "property", "displayName": "Log Mining Restart Connection", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Debezium opens a database connection and keeps that connection open throughout the entire streaming phase. In some situations, this can lead to excessive SGA memory usage. By setting this option to 'true' (the default is 'false'), the connector will close and re-open a database connection after every detected log switch or if the log.mining.session.max.ms has been reached." },
    "logMiningScnGapDetectionGapSizeMin": { "index": 55, "kind": "property", "displayName": "Log Mining Scn Gap Detection Gap Size Min", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than this value, and the time difference of current SCN and previous end SCN is smaller than log.mining.scn.gap.detection.time.interval.max.ms, consider it a SCN gap." },
    "logMiningScnGapDetectionTimeIntervalMaxMs": { "index": 56, "kind": "property", "displayName": "Log Mining Scn Gap Detection Time Interval Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "20s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than log.mining.scn.gap.detection.gap.size.min, and the time difference of current SCN and previous end SCN is smaller than this value, consider it a SCN gap." },
    "logMiningSessionMaxMs": { "index": 57, "kind": "property", "displayName": "Log Mining Session Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of milliseconds that a LogMiner session lives for before being restarted. Defaults to 0 (indefinite until a log switch occurs)" },
    "logMiningSleepTimeDefaultMs": { "index": 58, "kind": "property", "displayName": "Log Mining Sleep Time Default Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "1s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningSleepTimeIncrementMs": { "index": 59, "kind": "property", "displayName": "Log Mining Sleep Time Increment Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "200ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum amount of time that the connector will use to tune the optimal sleep time when reading data from LogMiner. Value is in milliseconds." },
    "logMiningSleepTimeMaxMs": { "index": 60, "kind": "property", "displayName": "Log Mining Sleep Time Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "3s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningSleepTimeMinMs": { "index": 61, "kind": "property", "displayName": "Log Mining Sleep Time Min Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The minimum amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningStrategy": { "index": 62, "kind": "property", "displayName": "Log Mining Strategy", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "redo_log_catalog", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "There are strategies: Online catalog with faster mining but no captured DDL. Another - with data dictionary loaded into REDO LOG files" },
    "logMiningTransactionRetentionMs": { "index": 63, "kind": "property", "displayName": "Log Mining Transaction Retention Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Duration in milliseconds to keep long running transactions in transaction buffer between log mining sessions. By default, all transactions are retained." },
    "logMiningUsernameExcludeList": { "index": 64, "kind": "property", "displayName": "Log Mining Username Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Comma separated list of usernames to exclude from LogMiner query." },
    "logMiningUsernameIncludeList": { "index": 65, "kind": "property", "displayName": "Log Mining Username Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Comma separated list of usernames to include from LogMiner query." },
    "maxBatchSize": { "index": 66, "kind": "property", "displayName": "Max Batch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 2048, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of each batch of source records. Defaults to 2048." },
    "maxQueueSize": { "index": 67, "kind": "property", "displayName": "Max Queue Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 8192, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size." },
    "maxQueueSizeInBytes": { "index": 68, "kind": "property", "displayName": "Max Queue Size In Bytes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled" },
    "messageKeyColumns": { "index": 69, "kind": "property", "displayName": "Message Key Columns", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id" },
    "notificationEnabledChannels": { "index": 70, "kind": "property", "displayName": "Notification Enabled Channels", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "List of notification channels names that are enabled." },
    "notificationSinkTopicName": { "index": 71, "kind": "property", "displayName": "Notification Sink Topic Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels" },
    "pollIntervalMs": { "index": 72, "kind": "property", "displayName": "Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "500ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms." },
    "provideTransactionMetadata": { "index": 73, "kind": "property", "displayName": "Provide Transaction Metadata", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Enables transaction metadata extraction together with event counting" },
    "queryFetchSize": { "index": 74, "kind": "property", "displayName": "Query Fetch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 2000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size, defaults to '2000'." },
    "racNodes": { "index": 75, "kind": "property", "displayName": "Rac Nodes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of RAC node hostnames or ip addresses" },
    "retriableRestartConnectorWaitMs": { "index": 76, "kind": "property", "displayName": "Retriable Restart Connector Wait Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms." },
    "schemaHistoryInternal": { "index": 77, "kind": "property", "displayName": "Schema History Internal", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.storage.kafka.history.KafkaSchemaHistory", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string." },
    "schemaHistoryInternalFileFilename": { "index": 78, "kind": "property", "displayName": "Schema History Internal File Filename", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The path to the file that will be used to record the database schema history" },
    "schemaHistoryInternalSkipUnparseableDdl": { "index": 79, "kind": "property", "displayName": "Schema History Internal Skip Unparseable Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes." },
    "schemaHistoryInternalStoreOnlyCapturedDatabasesDdl": { "index": 80, "kind": "property", "displayName": "Schema History Internal Store Only Captured Databases Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema\/database will be stored. If set to false, then Debezium will store all incoming DDL statements." },
    "schemaHistoryInternalStoreOnlyCapturedTablesDdl": { "index": 81, "kind": "property", "displayName": "Schema History Internal Store Only Captured Tables Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored." },
    "schemaNameAdjustmentMode": { "index": 82, "kind": "property", "displayName": "Schema Name Adjustment Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)" },
    "signalDataCollection": { "index": 83, "kind": "property", "displayName": "Signal Data Collection", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the data collection that is used to send signals\/commands to Debezium. Signaling is disabled when not set." },
    "signalEnabledChannels": { "index": 84, "kind": "property", "displayName": "Signal Enabled Channels", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "source", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "List of channels names that are enabled. Source channel is enabled by default" },
    "signalPollIntervalMs": { "index": 85, "kind": "property", "displayName": "Signal Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "5s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds." },
    "skippedOperations": { "index": 86, "kind": "property", "displayName": "Skipped Operations", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "t", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts\/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped." },
    "snapshotDelayMs": { "index": 87, "kind": "property", "displayName": "Snapshot Delay Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms." },
    "snapshotEnhancePredicateScn": { "index": 88, "kind": "property", "displayName": "Snapshot Enhance Predicate Scn", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A token to replace on snapshot predicate template" },
    "snapshotFetchSize": { "index": 89, "kind": "property", "displayName": "Snapshot Fetch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of records that should be loaded into memory while performing a snapshot." },
    "snapshotIncludeCollectionList": { "index": 90, "kind": "property", "displayName": "Snapshot Include Collection List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "This setting must be set to specify a list of tables\/collections whose snapshot must be taken on creating or restarting the connector." },
    "snapshotLockingMode": { "index": 91, "kind": "property", "displayName": "Snapshot Locking Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "shared", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls how the connector holds locks on tables while performing the schema snapshot. The default is 'shared', which means the connector will hold a table lock that prevents exclusive table access for just the initial portion of the snapshot while the database schemas and other metadata are being read. The remaining work in a snapshot involves selecting all rows from each table, and this is done using a flashback query that requires no locks. However, in some cases it may be desirable to avoid locks entirely which can be done by specifying 'none'. This mode is only safe to use if no schema changes are happening while the snapshot is taken." },
    "snapshotLockTimeoutMs": { "index": 92, "kind": "property", "displayName": "Snapshot Lock Timeout Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds" },
    "snapshotMaxThreads": { "index": 93, "kind": "property", "displayName": "Snapshot Max Threads", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of threads used to perform the snapshot. Defaults to 1." },
    "snapshotMode": { "index": 94, "kind": "property", "displayName": "Snapshot Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "initial", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'always': The connector runs a snapshot every time that it starts. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the redo logs. 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the redo logs.; 'schema_only': If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures only the schema (table structures), but not any table data. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'schema_only_recovery': The connector performs a snapshot that captures only the database schema history. The connector then transitions to streaming from the redo logs. Use this setting to restore a corrupted or lost database schema history topic. Do not use if the database schema was modified after the connector stopped." },
    "snapshotSelectStatementOverrides": { "index": 95, "kind": "property", "displayName": "Snapshot Select Statement Overrides", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted." },
    "snapshotTablesOrderByRowCount": { "index": 96, "kind": "property", "displayName": "Snapshot Tables Order By Row Count", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "disabled", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count." },
    "sourceinfoStructMaker": { "index": 97, "kind": "property", "displayName": "Sourceinfo Struct Maker", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.connector.oracle.OracleSourceInfoStructMaker", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct." },
    "tableExcludeList": { "index": 98, "kind": "property", "displayName": "Table Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring" },
    "tableIncludeList": { "index": 99, "kind": "property", "displayName": "Table Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The tables for which changes are to be captured" },
    "timePrecisionMode": { "index": 100, "kind": "property", "displayName": "Time Precision Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "adaptive", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision." },
    "tombstonesOnDelete": { "index": 101, "kind": "property", "displayName": "Tombstones On Delete", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted." },
    "topicNamingStrategy": { "index": 102, "kind": "property", "displayName": "Topic Naming Strategy", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.schema.SchemaTopicNamingStrategy", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc." },
    "topicPrefix": { "index": 103, "kind": "property", "displayName": "Topic Prefix", "group": "oracle", "label": "consumer,oracle", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Topic prefix that identifies and provides a namespace for the particular database server\/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted." },
    "unavailableValuePlaceholder": { "index": 104, "kind": "property", "displayName": "Unavailable Value Placeholder", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "__debezium_unavailable_value", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify the constant that will be provided by Debezium to indicate that the original value is unavailable and not provided by the database." }
  },
  "headers": {
    "CamelDebeziumSourceMetadata": { "index": 0, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "Map<String, Object>", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The metadata about the source event, for example table name, database name, log position, etc, please refer to the Debezium documentation for more info.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_SOURCE_METADATA" },
    "CamelDebeziumIdentifier": { "index": 1, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The identifier of the connector, normally is this format {server-name}.{database-name}.{table-name}.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_IDENTIFIER" },
    "CamelDebeziumKey": { "index": 2, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "Struct", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The key of the event, normally is the table Primary Key.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_KEY" },
    "CamelDebeziumOperation": { "index": 3, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "If presents, the type of event operation. Values for the connector are c for create (or insert), u for update, d for delete or r for read (in the case of a initial sync) or in case of a snapshot event.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_OPERATION" },
    "CamelDebeziumTimestamp": { "index": 4, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "Long", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "If presents, the time (using the system clock in the JVM) at which the connector processed the event.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_TIMESTAMP" },
    "CamelDebeziumBefore": { "index": 5, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "Struct", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "If presents, contains the state of the row before the event occurred.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_BEFORE" },
    "CamelDebeziumDdlSQL": { "index": 6, "kind": "header", "displayName": "", "group": "consumer", "label": "", "required": false, "javaType": "String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "If presents, the ddl sql text of the event.", "constantName": "org.apache.camel.component.debezium.DebeziumConstants#HEADER_DDL_SQL" }
  },
  "properties": {
    "name": { "index": 0, "kind": "path", "displayName": "Name", "group": "consumer", "label": "consumer", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Unique name for the connector. Attempting to register again with the same name will fail." },
    "additionalProperties": { "index": 1, "kind": "parameter", "displayName": "Additional Properties", "group": "common", "label": "common", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "prefix": "additionalProperties.", "multiValue": true, "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http:\/\/localhost:8811\/avro" },
    "internalKeyConverter": { "index": 2, "kind": "parameter", "displayName": "Internal Key Converter", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.json.JsonConverter", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter." },
    "internalValueConverter": { "index": 3, "kind": "parameter", "displayName": "Internal Value Converter", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.json.JsonConverter", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter." },
    "offsetCommitPolicy": { "index": 4, "kind": "parameter", "displayName": "Offset Commit Policy", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals." },
    "offsetCommitTimeoutMs": { "index": 5, "kind": "parameter", "displayName": "Offset Commit Timeout Ms", "group": "consumer", "label": "consumer", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "5000", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds." },
    "offsetFlushIntervalMs": { "index": 6, "kind": "parameter", "displayName": "Offset Flush Interval Ms", "group": "consumer", "label": "consumer", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "60000", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Interval at which to try committing offsets. The default is 1 minute." },
    "offsetStorage": { "index": 7, "kind": "parameter", "displayName": "Offset Storage", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "org.apache.kafka.connect.storage.FileOffsetBackingStore", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Java class that is responsible for persistence of connector offsets." },
    "offsetStorageFileName": { "index": 8, "kind": "parameter", "displayName": "Offset Storage File Name", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore." },
    "offsetStoragePartitions": { "index": 9, "kind": "parameter", "displayName": "Offset Storage Partitions", "group": "consumer", "label": "consumer", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'." },
    "offsetStorageReplicationFactor": { "index": 10, "kind": "parameter", "displayName": "Offset Storage Replication Factor", "group": "consumer", "label": "consumer", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore" },
    "offsetStorageTopic": { "index": 11, "kind": "parameter", "displayName": "Offset Storage Topic", "group": "consumer", "label": "consumer", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore." },
    "bridgeErrorHandler": { "index": 12, "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "index": 13, "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "autowired": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "index": 14, "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut" ], "deprecated": false, "autowired": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "binaryHandlingMode": { "index": 15, "kind": "parameter", "displayName": "Binary Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "bytes", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how binary (blob, binary, etc.) columns should be represented in change events, including: 'bytes' represents binary data as byte array (default); 'base64' represents binary data as base64-encoded string; 'base64-url-safe' represents binary data as base64-url-safe-encoded string; 'hex' represents binary data as hex-encoded (base16) string" },
    "columnExcludeList": { "index": 16, "kind": "parameter", "displayName": "Column Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Regular expressions matching columns to exclude from change events" },
    "columnIncludeList": { "index": 17, "kind": "parameter", "displayName": "Column Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Regular expressions matching columns to include in change events" },
    "columnPropagateSourceType": { "index": 18, "kind": "parameter", "displayName": "Column Propagate Source Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions matching fully-qualified names of columns that adds the columns original type and original length as parameters to the corresponding field schemas in the emitted change records." },
    "converters": { "index": 19, "kind": "parameter", "displayName": "Converters", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'" },
    "databaseConnectionAdapter": { "index": 20, "kind": "parameter", "displayName": "Database Connection Adapter", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "LogMiner", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The adapter to use when capturing changes from the database. Options include: 'logminer': (the default) to capture changes using native Oracle LogMiner; 'xstream' to capture changes using Oracle XStreams" },
    "databaseDbname": { "index": 21, "kind": "parameter", "displayName": "Database Dbname", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the database from which the connector should capture changes" },
    "databaseHostname": { "index": 22, "kind": "parameter", "displayName": "Database Hostname", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Resolvable hostname or IP address of the database server." },
    "databaseOutServerName": { "index": 23, "kind": "parameter", "displayName": "Database Out Server Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the XStream Out server to connect to." },
    "databasePassword": { "index": 24, "kind": "parameter", "displayName": "Database Password", "group": "oracle", "label": "consumer,oracle", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Password of the database user to be used when connecting to the database." },
    "databasePdbName": { "index": 25, "kind": "parameter", "displayName": "Database Pdb Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the pluggable database when working with a multi-tenant set-up. The CDB name must be given via database.dbname in this case." },
    "databasePort": { "index": 26, "kind": "parameter", "displayName": "Database Port", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1528, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Port of the database server." },
    "databaseUrl": { "index": 27, "kind": "parameter", "displayName": "Database Url", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Complete JDBC URL as an alternative to specifying hostname, port and database provided as a way to support alternative connection scenarios." },
    "databaseUser": { "index": 28, "kind": "parameter", "displayName": "Database User", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Name of the database user to be used when connecting to the database." },
    "datatypePropagateSourceType": { "index": 29, "kind": "parameter", "displayName": "Datatype Propagate Source Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions matching the database-specific data type names that adds the data type's original type and original length as parameters to the corresponding field schemas in the emitted change records." },
    "decimalHandlingMode": { "index": 30, "kind": "parameter", "displayName": "Decimal Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "precise", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how DECIMAL and NUMERIC columns should be represented in change events, including: 'precise' (the default) uses java.math.BigDecimal to represent values, which are encoded in the change events using a binary representation and Kafka Connect's 'org.apache.kafka.connect.data.Decimal' type; 'string' uses string to represent values; 'double' represents values using Java's 'double', which may not offer the precision but will be far easier to use in consumers." },
    "eventProcessingFailureHandlingMode": { "index": 31, "kind": "parameter", "displayName": "Event Processing Failure Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "fail", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including: 'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped; 'ignore' the problematic event will be skipped." },
    "heartbeatActionQuery": { "index": 32, "kind": "parameter", "displayName": "Heartbeat Action Query", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The query executed with every heartbeat." },
    "heartbeatIntervalMs": { "index": 33, "kind": "parameter", "displayName": "Heartbeat Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default." },
    "heartbeatTopicsPrefix": { "index": 34, "kind": "parameter", "displayName": "Heartbeat Topics Prefix", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "__debezium-heartbeat", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat." },
    "includeSchemaChanges": { "index": 35, "kind": "parameter", "displayName": "Include Schema Changes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether the connector should publish changes in the database schema to a Kafka topic with the same name as the database server ID. Each schema change will be recorded using a key that contains the database name and whose value include logical description of the new schema and optionally the DDL statement(s). The default is 'true'. This is independent of how the connector internally records database schema history." },
    "includeSchemaComments": { "index": 36, "kind": "parameter", "displayName": "Include Schema Comments", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether the connector parse table and column's comment to metadata object. Note: Enable this option will bring the implications on memory usage. The number and size of ColumnImpl objects is what largely impacts how much memory is consumed by the Debezium connectors, and adding a String to each of them can potentially be quite heavy. The default is 'false'." },
    "intervalHandlingMode": { "index": 37, "kind": "parameter", "displayName": "Interval Handling Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "numeric", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how INTERVAL columns should be represented in change events, including: 'string' represents values as an exact ISO formatted string; 'numeric' (default) represents values using the inexact conversion into microseconds" },
    "lobEnabled": { "index": 38, "kind": "parameter", "displayName": "Lob Enabled", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to 'false', the default, LOB fields will not be captured nor emitted. When set to 'true', the connector will capture LOB fields and emit changes for those fields like any other column type." },
    "logMiningArchiveDestinationName": { "index": 39, "kind": "parameter", "displayName": "Log Mining Archive Destination Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Sets the specific archive log destination as the source for reading archive logs.When not set, the connector will automatically select the first LOCAL and VALID destination." },
    "logMiningArchiveLogHours": { "index": 40, "kind": "parameter", "displayName": "Log Mining Archive Log Hours", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of hours in the past from SYSDATE to mine archive logs. Using 0 mines all available archive logs" },
    "logMiningArchiveLogOnlyMode": { "index": 41, "kind": "parameter", "displayName": "Log Mining Archive Log Only Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to 'false', the default, the connector will mine both archive log and redo logs to emit change events. When set to 'true', the connector will only mine archive logs. There are circumstances where its advantageous to only mine archive logs and accept latency in event emission due to frequent revolving redo logs." },
    "logMiningArchiveLogOnlyScnPollIntervalMs": { "index": 42, "kind": "parameter", "displayName": "Log Mining Archive Log Only Scn Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The interval in milliseconds to wait between polls checking to see if the SCN is in the archive logs." },
    "logMiningBatchSizeDefault": { "index": 43, "kind": "parameter", "displayName": "Log Mining Batch Size Default", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 20000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The starting SCN interval size that the connector will use for reading data from redo\/archive logs." },
    "logMiningBatchSizeMax": { "index": 44, "kind": "parameter", "displayName": "Log Mining Batch Size Max", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 100000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum SCN interval size that this connector will use when reading from redo\/archive logs." },
    "logMiningBatchSizeMin": { "index": 45, "kind": "parameter", "displayName": "Log Mining Batch Size Min", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The minimum SCN interval size that this connector will try to read from redo\/archive logs. Active batch size will be also increased\/decreased by this amount for tuning connector throughput when needed." },
    "logMiningBufferDropOnStop": { "index": 46, "kind": "parameter", "displayName": "Log Mining Buffer Drop On Stop", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "When set to true the underlying buffer cache is not retained when the connector is stopped. When set to false (the default), the buffer cache is retained across restarts." },
    "logMiningBufferInfinispanCacheEvents": { "index": 47, "kind": "parameter", "displayName": "Log Mining Buffer Infinispan Cache Events", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'events' cache" },
    "logMiningBufferInfinispanCacheProcessedTransactions": { "index": 48, "kind": "parameter", "displayName": "Log Mining Buffer Infinispan Cache Processed Transactions", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'processed-transactions' cache" },
    "logMiningBufferInfinispanCacheSchemaChanges": { "index": 49, "kind": "parameter", "displayName": "Log Mining Buffer Infinispan Cache Schema Changes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'schema-changes' cache" },
    "logMiningBufferInfinispanCacheTransactions": { "index": 50, "kind": "parameter", "displayName": "Log Mining Buffer Infinispan Cache Transactions", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies the XML configuration for the Infinispan 'transactions' cache" },
    "logMiningBufferTransactionEventsThreshold": { "index": 51, "kind": "parameter", "displayName": "Log Mining Buffer Transaction Events Threshold", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The number of events a transaction can include before the transaction is discarded. This is useful for managing buffer memory and\/or space when dealing with very large transactions. Defaults to 0, meaning that no threshold is applied and transactions can have unlimited events." },
    "logMiningBufferType": { "index": 52, "kind": "parameter", "displayName": "Log Mining Buffer Type", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "memory", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The buffer type controls how the connector manages buffering transaction data. memory - Uses the JVM process' heap to buffer all transaction data. infinispan_embedded - This option uses an embedded Infinispan cache to buffer transaction data and persist it to disk. infinispan_remote - This option uses a remote Infinispan cluster to buffer transaction data and persist it to disk." },
    "logMiningFlushTableName": { "index": 53, "kind": "parameter", "displayName": "Log Mining Flush Table Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "LOG_MINING_FLUSH", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the flush table used by the connector, defaults to LOG_MINING_FLUSH." },
    "logMiningQueryFilterMode": { "index": 54, "kind": "parameter", "displayName": "Log Mining Query Filter Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specifies how the filter configuration is applied to the LogMiner database query. none - The query does not apply any schema or table filters, all filtering is at runtime by the connector. in - The query uses SQL in-clause expressions to specify the schema or table filters. regex - The query uses Oracle REGEXP_LIKE expressions to specify the schema or table filters." },
    "logMiningRestartConnection": { "index": 55, "kind": "parameter", "displayName": "Log Mining Restart Connection", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Debezium opens a database connection and keeps that connection open throughout the entire streaming phase. In some situations, this can lead to excessive SGA memory usage. By setting this option to 'true' (the default is 'false'), the connector will close and re-open a database connection after every detected log switch or if the log.mining.session.max.ms has been reached." },
    "logMiningScnGapDetectionGapSizeMin": { "index": 56, "kind": "parameter", "displayName": "Log Mining Scn Gap Detection Gap Size Min", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than this value, and the time difference of current SCN and previous end SCN is smaller than log.mining.scn.gap.detection.time.interval.max.ms, consider it a SCN gap." },
    "logMiningScnGapDetectionTimeIntervalMaxMs": { "index": 57, "kind": "parameter", "displayName": "Log Mining Scn Gap Detection Time Interval Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "20s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Used for SCN gap detection, if the difference between current SCN and previous end SCN is bigger than log.mining.scn.gap.detection.gap.size.min, and the time difference of current SCN and previous end SCN is smaller than this value, consider it a SCN gap." },
    "logMiningSessionMaxMs": { "index": 58, "kind": "parameter", "displayName": "Log Mining Session Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of milliseconds that a LogMiner session lives for before being restarted. Defaults to 0 (indefinite until a log switch occurs)" },
    "logMiningSleepTimeDefaultMs": { "index": 59, "kind": "parameter", "displayName": "Log Mining Sleep Time Default Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "1s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningSleepTimeIncrementMs": { "index": 60, "kind": "parameter", "displayName": "Log Mining Sleep Time Increment Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "200ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum amount of time that the connector will use to tune the optimal sleep time when reading data from LogMiner. Value is in milliseconds." },
    "logMiningSleepTimeMaxMs": { "index": 61, "kind": "parameter", "displayName": "Log Mining Sleep Time Max Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "3s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningSleepTimeMinMs": { "index": 62, "kind": "parameter", "displayName": "Log Mining Sleep Time Min Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The minimum amount of time that the connector will sleep after reading data from redo\/archive logs and before starting reading data again. Value is in milliseconds." },
    "logMiningStrategy": { "index": 63, "kind": "parameter", "displayName": "Log Mining Strategy", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "redo_log_catalog", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "There are strategies: Online catalog with faster mining but no captured DDL. Another - with data dictionary loaded into REDO LOG files" },
    "logMiningTransactionRetentionMs": { "index": 64, "kind": "parameter", "displayName": "Log Mining Transaction Retention Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Duration in milliseconds to keep long running transactions in transaction buffer between log mining sessions. By default, all transactions are retained." },
    "logMiningUsernameExcludeList": { "index": 65, "kind": "parameter", "displayName": "Log Mining Username Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Comma separated list of usernames to exclude from LogMiner query." },
    "logMiningUsernameIncludeList": { "index": 66, "kind": "parameter", "displayName": "Log Mining Username Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Comma separated list of usernames to include from LogMiner query." },
    "maxBatchSize": { "index": 67, "kind": "parameter", "displayName": "Max Batch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 2048, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of each batch of source records. Defaults to 2048." },
    "maxQueueSize": { "index": 68, "kind": "parameter", "displayName": "Max Queue Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 8192, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size." },
    "maxQueueSizeInBytes": { "index": 69, "kind": "parameter", "displayName": "Max Queue Size In Bytes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled" },
    "messageKeyColumns": { "index": 70, "kind": "parameter", "displayName": "Message Key Columns", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A semicolon-separated list of expressions that match fully-qualified tables and column(s) to be used as message key. Each expression must match the pattern ':', where the table names could be defined as (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connector, and the key columns are a comma-separated list of columns representing the custom key. For any table without an explicit key configuration the table's primary key column(s) will be used as message key. Example: dbserver1.inventory.orderlines:orderId,orderLineId;dbserver1.inventory.orders:id" },
    "notificationEnabledChannels": { "index": 71, "kind": "parameter", "displayName": "Notification Enabled Channels", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "List of notification channels names that are enabled." },
    "notificationSinkTopicName": { "index": 72, "kind": "parameter", "displayName": "Notification Sink Topic Name", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the topic for the notifications. This is required in case 'sink' is in the list of enabled channels" },
    "pollIntervalMs": { "index": 73, "kind": "parameter", "displayName": "Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "500ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms." },
    "provideTransactionMetadata": { "index": 74, "kind": "parameter", "displayName": "Provide Transaction Metadata", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Enables transaction metadata extraction together with event counting" },
    "queryFetchSize": { "index": 75, "kind": "parameter", "displayName": "Query Fetch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 2000, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of records that should be loaded into memory while streaming. A value of '0' uses the default JDBC fetch size, defaults to '2000'." },
    "racNodes": { "index": 76, "kind": "parameter", "displayName": "Rac Nodes", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of RAC node hostnames or ip addresses" },
    "retriableRestartConnectorWaitMs": { "index": 77, "kind": "parameter", "displayName": "Retriable Restart Connector Wait Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms." },
    "schemaHistoryInternal": { "index": 78, "kind": "parameter", "displayName": "Schema History Internal", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.storage.kafka.history.KafkaSchemaHistory", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the SchemaHistory class that should be used to store and recover database schema changes. The configuration properties for the history are prefixed with the 'schema.history.internal.' string." },
    "schemaHistoryInternalFileFilename": { "index": 79, "kind": "parameter", "displayName": "Schema History Internal File Filename", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The path to the file that will be used to record the database schema history" },
    "schemaHistoryInternalSkipUnparseableDdl": { "index": 80, "kind": "parameter", "displayName": "Schema History Internal Skip Unparseable Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls the action Debezium will take when it meets a DDL statement in binlog, that it cannot parse.By default the connector will stop operating but by changing the setting it can ignore the statements which it cannot parse. If skipping is enabled then Debezium can miss metadata changes." },
    "schemaHistoryInternalStoreOnlyCapturedDatabasesDdl": { "index": 81, "kind": "parameter", "displayName": "Schema History Internal Store Only Captured Databases Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls what DDL will Debezium store in database schema history. By default (true) only DDL that manipulates a table from captured schema\/database will be stored. If set to false, then Debezium will store all incoming DDL statements." },
    "schemaHistoryInternalStoreOnlyCapturedTablesDdl": { "index": 82, "kind": "parameter", "displayName": "Schema History Internal Store Only Captured Tables Ddl", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls what DDL will Debezium store in database schema history. By default (false) Debezium will store all incoming DDL statements. If set to true, then only DDL that manipulates a captured table will be stored." },
    "schemaNameAdjustmentMode": { "index": 83, "kind": "parameter", "displayName": "Schema Name Adjustment Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify how schema names should be adjusted for compatibility with the message converter used by the connector, including: 'avro' replaces the characters that cannot be used in the Avro type name with underscore; 'avro_unicode' replaces the underscore or characters that cannot be used in the Avro type name with corresponding unicode like _uxxxx. Note: _ is an escape sequence like backslash in Java;'none' does not apply any adjustment (default)" },
    "signalDataCollection": { "index": 84, "kind": "parameter", "displayName": "Signal Data Collection", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the data collection that is used to send signals\/commands to Debezium. Signaling is disabled when not set." },
    "signalEnabledChannels": { "index": 85, "kind": "parameter", "displayName": "Signal Enabled Channels", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "source", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "List of channels names that are enabled. Source channel is enabled by default" },
    "signalPollIntervalMs": { "index": 86, "kind": "parameter", "displayName": "Signal Poll Interval Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "5s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Interval for looking for new signals in registered channels, given in milliseconds. Defaults to 5 seconds." },
    "skippedOperations": { "index": 87, "kind": "parameter", "displayName": "Skipped Operations", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "t", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts\/create; 'u' for updates; 'd' for deletes, 't' for truncates, and 'none' to indicate nothing skipped. By default, only truncate operations will be skipped." },
    "snapshotDelayMs": { "index": 88, "kind": "parameter", "displayName": "Snapshot Delay Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "0ms", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms." },
    "snapshotEnhancePredicateScn": { "index": 89, "kind": "parameter", "displayName": "Snapshot Enhance Predicate Scn", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A token to replace on snapshot predicate template" },
    "snapshotFetchSize": { "index": 90, "kind": "parameter", "displayName": "Snapshot Fetch Size", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of records that should be loaded into memory while performing a snapshot." },
    "snapshotIncludeCollectionList": { "index": 91, "kind": "parameter", "displayName": "Snapshot Include Collection List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "This setting must be set to specify a list of tables\/collections whose snapshot must be taken on creating or restarting the connector." },
    "snapshotLockingMode": { "index": 92, "kind": "parameter", "displayName": "Snapshot Locking Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "shared", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls how the connector holds locks on tables while performing the schema snapshot. The default is 'shared', which means the connector will hold a table lock that prevents exclusive table access for just the initial portion of the snapshot while the database schemas and other metadata are being read. The remaining work in a snapshot involves selecting all rows from each table, and this is done using a flashback query that requires no locks. However, in some cases it may be desirable to avoid locks entirely which can be done by specifying 'none'. This mode is only safe to use if no schema changes are happening while the snapshot is taken." },
    "snapshotLockTimeoutMs": { "index": 93, "kind": "parameter", "displayName": "Snapshot Lock Timeout Ms", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "duration", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "10s", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of millis to wait for table locks at the beginning of a snapshot. If locks cannot be acquired in this time frame, the snapshot will be aborted. Defaults to 10 seconds" },
    "snapshotMaxThreads": { "index": 94, "kind": "parameter", "displayName": "Snapshot Max Threads", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The maximum number of threads used to perform the snapshot. Defaults to 1." },
    "snapshotMode": { "index": 95, "kind": "parameter", "displayName": "Snapshot Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "initial", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The criteria for running a snapshot upon startup of the connector. Select one of the following snapshot options: 'always': The connector runs a snapshot every time that it starts. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'initial' (default): If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures the current full state of the configured tables. After the snapshot completes, the connector begins to stream changes from the redo logs. 'initial_only': The connector performs a snapshot as it does for the 'initial' option, but after the connector completes the snapshot, it stops, and does not stream changes from the redo logs.; 'schema_only': If the connector does not detect any offsets for the logical server name, it runs a snapshot that captures only the schema (table structures), but not any table data. After the snapshot completes, the connector begins to stream changes from the redo logs.; 'schema_only_recovery': The connector performs a snapshot that captures only the database schema history. The connector then transitions to streaming from the redo logs. Use this setting to restore a corrupted or lost database schema history topic. Do not use if the database schema was modified after the connector stopped." },
    "snapshotSelectStatementOverrides": { "index": 96, "kind": "parameter", "displayName": "Snapshot Select Statement Overrides", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "This property contains a comma-separated list of fully-qualified tables (DB_NAME.TABLE_NAME) or (SCHEMA_NAME.TABLE_NAME), depending on the specific connectors. Select statements for the individual tables are specified in further configuration properties, one for each table, identified by the id 'snapshot.select.statement.overrides.DB_NAME.TABLE_NAME' or 'snapshot.select.statement.overrides.SCHEMA_NAME.TABLE_NAME', respectively. The value of those properties is the select statement to use when retrieving data from the specific table during snapshotting. A possible use case for large append-only tables is setting a specific point where to start (resume) snapshotting, in case a previous snapshotting was interrupted." },
    "snapshotTablesOrderByRowCount": { "index": 97, "kind": "parameter", "displayName": "Snapshot Tables Order By Row Count", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "disabled", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Controls the order in which tables are processed in the initial snapshot. A descending value will order the tables by row count descending. A ascending value will order the tables by row count ascending. A value of disabled (the default) will disable ordering by row count." },
    "sourceinfoStructMaker": { "index": 98, "kind": "parameter", "displayName": "Sourceinfo Struct Maker", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.connector.oracle.OracleSourceInfoStructMaker", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the SourceInfoStructMaker class that returns SourceInfo schema and struct." },
    "tableExcludeList": { "index": 99, "kind": "parameter", "displayName": "Table Exclude List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring" },
    "tableIncludeList": { "index": 100, "kind": "parameter", "displayName": "Table Include List", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The tables for which changes are to be captured" },
    "timePrecisionMode": { "index": 101, "kind": "parameter", "displayName": "Time Precision Mode", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "adaptive", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Time, date, and timestamps can be represented with different kinds of precisions, including: 'adaptive' (the default) bases the precision of time, date, and timestamp values on the database column's precision; 'adaptive_time_microseconds' like 'adaptive' mode, but TIME fields always use microseconds precision; 'connect' always represents time, date, and timestamp values using Kafka Connect's built-in representations for Time, Date, and Timestamp, which uses millisecond precision regardless of the database columns' precision." },
    "tombstonesOnDelete": { "index": 102, "kind": "parameter", "displayName": "Tombstones On Delete", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Whether delete operations should be represented by a delete event and a subsequent tombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted." },
    "topicNamingStrategy": { "index": 103, "kind": "parameter", "displayName": "Topic Naming Strategy", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "io.debezium.schema.SchemaTopicNamingStrategy", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "The name of the TopicNamingStrategy class that should be used to determine the topic name for data change, schema change, transaction, heartbeat event etc." },
    "topicPrefix": { "index": 104, "kind": "parameter", "displayName": "Topic Prefix", "group": "oracle", "label": "consumer,oracle", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Topic prefix that identifies and provides a namespace for the particular database server\/cluster is capturing changes. The topic prefix should be unique across all other connectors, since it is used as a prefix for all Kafka topic names that receive events emitted by this connector. Only alphanumeric characters, hyphens, dots and underscores must be accepted." },
    "unavailableValuePlaceholder": { "index": 105, "kind": "parameter", "displayName": "Unavailable Value Placeholder", "group": "oracle", "label": "consumer,oracle", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "__debezium_unavailable_value", "configurationClass": "org.apache.camel.component.debezium.configuration.OracleConnectorEmbeddedDebeziumConfiguration", "configurationField": "configuration", "description": "Specify the constant that will be provided by Debezium to indicate that the original value is unavailable and not provided by the database." }
  }
}
