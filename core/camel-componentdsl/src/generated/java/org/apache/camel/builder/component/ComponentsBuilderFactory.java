/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.builder.component;

import javax.annotation.Generated;

/**
 * Component entry DSL builder. You can build a component like this:
 * ComponentBuilderFactory.kafka().setBrokers("{{host:port}}").build()
 * 
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.ComponentDslMojo")
public interface ComponentsBuilderFactory {

    /**
     * AHC (camel-ahc)
     * To call external HTTP services using Async Http Client.
     * 
     * Category: http
     * Since: 2.8
     * Maven coordinates: org.apache.camel:camel-ahc
     */
    static org.apache.camel.builder.component.dsl.AhcComponentBuilderFactory.AhcComponentBuilder ahc() {
        return org.apache.camel.builder.component.dsl.AhcComponentBuilderFactory.ahc();
    }
    /**
     * APNS (camel-apns)
     * For sending notifications to Apple iOS devices.
     * 
     * Category: eventbus,mobile
     * Since: 2.8
     * Maven coordinates: org.apache.camel:camel-apns
     */
    static org.apache.camel.builder.component.dsl.ApnsComponentBuilderFactory.ApnsComponentBuilder apns() {
        return org.apache.camel.builder.component.dsl.ApnsComponentBuilderFactory.apns();
    }
    /**
     * Asterisk (camel-asterisk)
     * The asterisk component is used to interact with Asterisk PBX Server.
     * 
     * Category: voip
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-asterisk
     */
    static org.apache.camel.builder.component.dsl.AsteriskComponentBuilderFactory.AsteriskComponentBuilder asterisk() {
        return org.apache.camel.builder.component.dsl.AsteriskComponentBuilderFactory.asterisk();
    }
    /**
     * Atmos (camel-atmos)
     * The atmos component is used for integrating with EMC's Atomos Storage.
     * 
     * Category: file,cloud
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-atmos
     */
    static org.apache.camel.builder.component.dsl.AtmosComponentBuilderFactory.AtmosComponentBuilder atmos() {
        return org.apache.camel.builder.component.dsl.AtmosComponentBuilderFactory.atmos();
    }
    /**
     * Atmosphere Websocket (camel-atmosphere-websocket)
     * To exchange data with external Websocket clients using Atmosphere.
     * 
     * Category: websocket
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-atmosphere-websocket
     */
    static org.apache.camel.builder.component.dsl.AtmosphereWebsocketComponentBuilderFactory.AtmosphereWebsocketComponentBuilder atmosphereWebsocket() {
        return org.apache.camel.builder.component.dsl.AtmosphereWebsocketComponentBuilderFactory.atmosphereWebsocket();
    }
    /**
     * Atom (camel-atom)
     * The atom component is used for consuming Atom RSS feeds.
     * 
     * Category: rss
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-atom
     */
    static org.apache.camel.builder.component.dsl.AtomComponentBuilderFactory.AtomComponentBuilder atom() {
        return org.apache.camel.builder.component.dsl.AtomComponentBuilderFactory.atom();
    }
    /**
     * Atomix Map (camel-atomix)
     * The atomix-map component is used to access Atomix's distributed map.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixMapComponentBuilderFactory.AtomixMapComponentBuilder atomixMap() {
        return org.apache.camel.builder.component.dsl.AtomixMapComponentBuilderFactory.atomixMap();
    }
    /**
     * Atomix Messaging (camel-atomix)
     * The atomix-messaging component is used to access Atomix's group
     * messaging.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixMessagingComponentBuilderFactory.AtomixMessagingComponentBuilder atomixMessaging() {
        return org.apache.camel.builder.component.dsl.AtomixMessagingComponentBuilderFactory.atomixMessaging();
    }
    /**
     * Atomix MultiMap (camel-atomix)
     * The atomix-multimap component is used to access Atomix's distributed
     * multi map.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixMultimapComponentBuilderFactory.AtomixMultimapComponentBuilder atomixMultimap() {
        return org.apache.camel.builder.component.dsl.AtomixMultimapComponentBuilderFactory.atomixMultimap();
    }
    /**
     * Atomix Queue (camel-atomix)
     * The atomix-queue component is used to access Atomix's distributed queue.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixQueueComponentBuilderFactory.AtomixQueueComponentBuilder atomixQueue() {
        return org.apache.camel.builder.component.dsl.AtomixQueueComponentBuilderFactory.atomixQueue();
    }
    /**
     * Atomix Set (camel-atomix)
     * The atomix-set component is used to access Atomix's distributed set.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixSetComponentBuilderFactory.AtomixSetComponentBuilder atomixSet() {
        return org.apache.camel.builder.component.dsl.AtomixSetComponentBuilderFactory.atomixSet();
    }
    /**
     * Atomix Value (camel-atomix)
     * The atomix-value component is used to access Atomix's distributed value.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-atomix
     */
    static org.apache.camel.builder.component.dsl.AtomixValueComponentBuilderFactory.AtomixValueComponentBuilder atomixValue() {
        return org.apache.camel.builder.component.dsl.AtomixValueComponentBuilderFactory.atomixValue();
    }
    /**
     * Avro (camel-avro)
     * Working with Apache Avro for data serialization.
     * 
     * Category: messaging,transformation
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-avro
     */
    static org.apache.camel.builder.component.dsl.AvroComponentBuilderFactory.AvroComponentBuilder avro() {
        return org.apache.camel.builder.component.dsl.AvroComponentBuilderFactory.avro();
    }
    /**
     * Bean (camel-bean)
     * The bean component is for invoking Java beans from Camel.
     * 
     * Category: core,java
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-bean
     */
    static org.apache.camel.builder.component.dsl.BeanComponentBuilderFactory.BeanComponentBuilder bean() {
        return org.apache.camel.builder.component.dsl.BeanComponentBuilderFactory.bean();
    }
    /**
     * Bean Validator (camel-bean-validator)
     * The Validator component performs bean validation of the message body
     * using the Java Bean Validation API.
     * 
     * Category: validation
     * Since: 2.3
     * Maven coordinates: org.apache.camel:camel-bean-validator
     */
    static org.apache.camel.builder.component.dsl.BeanValidatorComponentBuilderFactory.BeanValidatorComponentBuilder beanValidator() {
        return org.apache.camel.builder.component.dsl.BeanValidatorComponentBuilderFactory.beanValidator();
    }
    /**
     * Beanstalk (camel-beanstalk)
     * The beanstalk component is used for job retrieval and post-processing of
     * Beanstalk jobs.
     * 
     * Category: messaging
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-beanstalk
     */
    static org.apache.camel.builder.component.dsl.BeanstalkComponentBuilderFactory.BeanstalkComponentBuilder beanstalk() {
        return org.apache.camel.builder.component.dsl.BeanstalkComponentBuilderFactory.beanstalk();
    }
    /**
     * Bonita (camel-bonita)
     * Used for communicating with a remote Bonita BPM process engine.
     * 
     * Category: process
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-bonita
     */
    static org.apache.camel.builder.component.dsl.BonitaComponentBuilderFactory.BonitaComponentBuilder bonita() {
        return org.apache.camel.builder.component.dsl.BonitaComponentBuilderFactory.bonita();
    }
    /**
     * Box (camel-box)
     * For uploading downloading and managing files folders groups
     * collaborations etc on box DOT com.
     * 
     * Category: api,file,cloud
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-box
     */
    static org.apache.camel.builder.component.dsl.BoxComponentBuilderFactory.BoxComponentBuilder box() {
        return org.apache.camel.builder.component.dsl.BoxComponentBuilderFactory.box();
    }
    /**
     * Braintree (camel-braintree)
     * The braintree component is used for integrating with the Braintree
     * Payment System.
     * 
     * Category: api,cloud,payment
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-braintree
     */
    static org.apache.camel.builder.component.dsl.BraintreeComponentBuilderFactory.BraintreeComponentBuilder braintree() {
        return org.apache.camel.builder.component.dsl.BraintreeComponentBuilderFactory.braintree();
    }
    /**
     * Browse (camel-browse)
     * The browse component is used for viewing the messages received on
     * endpoints that supports BrowsableEndpoint.
     * 
     * Category: core,monitoring
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-browse
     */
    static org.apache.camel.builder.component.dsl.BrowseComponentBuilderFactory.BrowseComponentBuilder browse() {
        return org.apache.camel.builder.component.dsl.BrowseComponentBuilderFactory.browse();
    }
    /**
     * Caffeine Cache (camel-caffeine)
     * The caffeine-cache component is used for integration with Caffeine Cache.
     * 
     * Category: cache,datagrid,clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-caffeine
     */
    static org.apache.camel.builder.component.dsl.CaffeineCacheComponentBuilderFactory.CaffeineCacheComponentBuilder caffeineCache() {
        return org.apache.camel.builder.component.dsl.CaffeineCacheComponentBuilderFactory.caffeineCache();
    }
    /**
     * Caffeine LoadCache (camel-caffeine)
     * The caffeine-loadcache component is used for integration with Caffeine
     * Load Cache.
     * 
     * Category: cache,datagrid,clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-caffeine
     */
    static org.apache.camel.builder.component.dsl.CaffeineLoadcacheComponentBuilderFactory.CaffeineLoadcacheComponentBuilder caffeineLoadcache() {
        return org.apache.camel.builder.component.dsl.CaffeineLoadcacheComponentBuilderFactory.caffeineLoadcache();
    }
    /**
     * Chunk (camel-chunk)
     * Transforms the message using a Chunk template.
     * 
     * Category: transformation
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-chunk
     */
    static org.apache.camel.builder.component.dsl.ChunkComponentBuilderFactory.ChunkComponentBuilder chunk() {
        return org.apache.camel.builder.component.dsl.ChunkComponentBuilderFactory.chunk();
    }
    /**
     * Class (camel-bean)
     * The Class component is for invoking Java classes (Java beans) from Camel.
     * 
     * Category: core,java
     * Since: 2.4
     * Maven coordinates: org.apache.camel:camel-bean
     */
    static org.apache.camel.builder.component.dsl.ClasComponentBuilderFactory.ClasComponentBuilder clas() {
        return org.apache.camel.builder.component.dsl.ClasComponentBuilderFactory.clas();
    }
    /**
     * Consul (camel-consul)
     * The camel consul component allows you to work with Consul, a distributed,
     * highly available, datacenter-aware, service discovery and configuration
     * system.
     * 
     * Category: api,cloud
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-consul
     */
    static org.apache.camel.builder.component.dsl.ConsulComponentBuilderFactory.ConsulComponentBuilder consul() {
        return org.apache.camel.builder.component.dsl.ConsulComponentBuilderFactory.consul();
    }
    /**
     * Control Bus (camel-controlbus)
     * The controlbus component provides easy management of Camel applications
     * based on the Control Bus EIP pattern.
     * 
     * Category: core,monitoring
     * Since: 2.11
     * Maven coordinates: org.apache.camel:camel-controlbus
     */
    static org.apache.camel.builder.component.dsl.ControlbusComponentBuilderFactory.ControlbusComponentBuilder controlbus() {
        return org.apache.camel.builder.component.dsl.ControlbusComponentBuilderFactory.controlbus();
    }
    /**
     * Corda (camel-corda)
     * The corda component uses corda-rpc to interact with corda nodes.
     * 
     * Category: corda,blockchain
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-corda
     */
    static org.apache.camel.builder.component.dsl.CordaComponentBuilderFactory.CordaComponentBuilder corda() {
        return org.apache.camel.builder.component.dsl.CordaComponentBuilderFactory.corda();
    }
    /**
     * Couchbase (camel-couchbase)
     * Represents a Couchbase endpoint that can query Views with a Poll strategy
     * and/or produce various type of operations.
     * 
     * Category: database,nosql
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-couchbase
     */
    static org.apache.camel.builder.component.dsl.CouchbaseComponentBuilderFactory.CouchbaseComponentBuilder couchbase() {
        return org.apache.camel.builder.component.dsl.CouchbaseComponentBuilderFactory.couchbase();
    }
    /**
     * Cron (camel-cron)
     * Camel Cron Component
     * 
     * Category: scheduling
     * Since: 3.1
     * Maven coordinates: org.apache.camel:camel-cron
     */
    static org.apache.camel.builder.component.dsl.CronComponentBuilderFactory.CronComponentBuilder cron() {
        return org.apache.camel.builder.component.dsl.CronComponentBuilderFactory.cron();
    }
    /**
     * Crypto CMS (camel-crypto-cms)
     * The crypto cms component is used for encrypting data in CMS Enveloped
     * Data format, decrypting CMS Enveloped Data, signing data in CMS Signed
     * Data format, and verifying CMS Signed Data.
     * 
     * Category: security,transformation
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-crypto-cms
     */
    @Deprecated
    static org.apache.camel.builder.component.dsl.CryptoCmsComponentBuilderFactory.CryptoCmsComponentBuilder cryptoCms() {
        return org.apache.camel.builder.component.dsl.CryptoCmsComponentBuilderFactory.cryptoCms();
    }
    /**
     * CXF (camel-cxf)
     * The cxf component is used for SOAP WebServices using Apache CXF.
     * 
     * Category: soap,webservice
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-cxf
     */
    static org.apache.camel.builder.component.dsl.CxfComponentBuilderFactory.CxfComponentBuilder cxf() {
        return org.apache.camel.builder.component.dsl.CxfComponentBuilderFactory.cxf();
    }
    /**
     * Data Format (camel-dataformat)
     * The dataformat component is used for working with Data Formats as if it
     * was a regular Component supporting Endpoints and URIs.
     * 
     * Category: core,transformation
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-dataformat
     */
    static org.apache.camel.builder.component.dsl.DataformatComponentBuilderFactory.DataformatComponentBuilder dataformat() {
        return org.apache.camel.builder.component.dsl.DataformatComponentBuilderFactory.dataformat();
    }
    /**
     * Dataset (camel-dataset)
     * The dataset component provides a mechanism to easily perform load & soak
     * testing of your system.
     * 
     * Category: core,testing
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-dataset
     */
    static org.apache.camel.builder.component.dsl.DatasetComponentBuilderFactory.DatasetComponentBuilder dataset() {
        return org.apache.camel.builder.component.dsl.DatasetComponentBuilderFactory.dataset();
    }
    /**
     * DataSet Test (camel-dataset)
     * The dataset-test component extends the mock component by on startup to
     * pull messages from another endpoint to set the expected message bodies.
     * 
     * Category: core,testing
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-dataset
     */
    static org.apache.camel.builder.component.dsl.DatasetTestComponentBuilderFactory.DatasetTestComponentBuilder datasetTest() {
        return org.apache.camel.builder.component.dsl.DatasetTestComponentBuilderFactory.datasetTest();
    }
    /**
     * Debezium MongoDB Connector (camel-debezium-mongodb)
     * Represents a Debezium MongoDB endpoint which is used to capture changes
     * in MongoDB database so that that applications can see those changes and
     * respond to them.
     * 
     * Category: database,nosql,mongodb
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-debezium-mongodb
     */
    static org.apache.camel.builder.component.dsl.DebeziumMongodbComponentBuilderFactory.DebeziumMongodbComponentBuilder debeziumMongodb() {
        return org.apache.camel.builder.component.dsl.DebeziumMongodbComponentBuilderFactory.debeziumMongodb();
    }
    /**
     * Debezium PostgresSQL Connector (camel-debezium-postgres)
     * Represents a Debezium PostgresSQL endpoint which is used to capture
     * changes in PostgresSQL database so that that applications can see those
     * changes and respond to them.
     * 
     * Category: database,sql,postgres
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-debezium-postgres
     */
    static org.apache.camel.builder.component.dsl.DebeziumPostgresComponentBuilderFactory.DebeziumPostgresComponentBuilder debeziumPostgres() {
        return org.apache.camel.builder.component.dsl.DebeziumPostgresComponentBuilderFactory.debeziumPostgres();
    }
    /**
     * Debezium SQL Server Connector (camel-debezium-sqlserver)
     * Represents a Debezium SQL Server endpoint which is used to capture
     * changes in SQL Server database so that that applications can see those
     * changes and respond to them.
     * 
     * Category: database,sql,sqlserver
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-debezium-sqlserver
     */
    static org.apache.camel.builder.component.dsl.DebeziumSqlserverComponentBuilderFactory.DebeziumSqlserverComponentBuilder debeziumSqlserver() {
        return org.apache.camel.builder.component.dsl.DebeziumSqlserverComponentBuilderFactory.debeziumSqlserver();
    }
    /**
     * Direct (camel-direct)
     * The direct component provides direct, synchronous call to another
     * endpoint from the same CamelContext.
     * 
     * Category: core,endpoint
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-direct
     */
    static org.apache.camel.builder.component.dsl.DirectComponentBuilderFactory.DirectComponentBuilder direct() {
        return org.apache.camel.builder.component.dsl.DirectComponentBuilderFactory.direct();
    }
    /**
     * Direct VM (camel-directvm)
     * The direct-vm component provides direct, synchronous call to another
     * endpoint from any CamelContext in the same JVM.
     * 
     * Category: core,endpoint
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-directvm
     */
    static org.apache.camel.builder.component.dsl.DirectVmComponentBuilderFactory.DirectVmComponentBuilder directVm() {
        return org.apache.camel.builder.component.dsl.DirectVmComponentBuilderFactory.directVm();
    }
    /**
     * Disruptor (camel-disruptor)
     * The disruptor component provides asynchronous SEDA behavior using LMAX
     * Disruptor.
     * 
     * Category: endpoint
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-disruptor
     */
    static org.apache.camel.builder.component.dsl.DisruptorComponentBuilderFactory.DisruptorComponentBuilder disruptor() {
        return org.apache.camel.builder.component.dsl.DisruptorComponentBuilderFactory.disruptor();
    }
    /**
     * Disruptor VM (camel-disruptor)
     * The disruptor component provides asynchronous SEDA behavior using LMAX
     * Disruptor.
     * 
     * Category: endpoint
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-disruptor
     */
    static org.apache.camel.builder.component.dsl.DisruptorVmComponentBuilderFactory.DisruptorVmComponentBuilder disruptorVm() {
        return org.apache.camel.builder.component.dsl.DisruptorVmComponentBuilderFactory.disruptorVm();
    }
    /**
     * DNS (camel-dns)
     * To lookup domain information and run DNS queries using DNSJava.
     * 
     * Category: networking
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-dns
     */
    static org.apache.camel.builder.component.dsl.DnsComponentBuilderFactory.DnsComponentBuilder dns() {
        return org.apache.camel.builder.component.dsl.DnsComponentBuilderFactory.dns();
    }
    /**
     * Docker (camel-docker)
     * The docker component is used for managing Docker containers.
     * 
     * Category: container,cloud,paas
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-docker
     */
    static org.apache.camel.builder.component.dsl.DockerComponentBuilderFactory.DockerComponentBuilder docker() {
        return org.apache.camel.builder.component.dsl.DockerComponentBuilderFactory.docker();
    }
    /**
     * Dozer (camel-dozer)
     * The dozer component provides the ability to map between Java beans using
     * the Dozer mapping library.
     * 
     * Category: transformation
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-dozer
     */
    static org.apache.camel.builder.component.dsl.DozerComponentBuilderFactory.DozerComponentBuilder dozer() {
        return org.apache.camel.builder.component.dsl.DozerComponentBuilderFactory.dozer();
    }
    /**
     * Drill (camel-drill)
     * The drill component gives you the ability to quering into apache drill
     * cluster.
     * 
     * Category: database,sql
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-drill
     */
    static org.apache.camel.builder.component.dsl.DrillComponentBuilderFactory.DrillComponentBuilder drill() {
        return org.apache.camel.builder.component.dsl.DrillComponentBuilderFactory.drill();
    }
    /**
     * Dropbox (camel-dropbox)
     * For uploading, downloading and managing files, folders, groups,
     * collaborations, etc on dropbox DOT com.
     * 
     * Category: api,file
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-dropbox
     */
    static org.apache.camel.builder.component.dsl.DropboxComponentBuilderFactory.DropboxComponentBuilder dropbox() {
        return org.apache.camel.builder.component.dsl.DropboxComponentBuilderFactory.dropbox();
    }
    /**
     * Ehcache (camel-ehcache)
     * The ehcache component enables you to perform caching operations using
     * Ehcache as cache implementation.
     * 
     * Category: cache,datagrid,clustering
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-ehcache
     */
    static org.apache.camel.builder.component.dsl.EhcacheComponentBuilderFactory.EhcacheComponentBuilder ehcache() {
        return org.apache.camel.builder.component.dsl.EhcacheComponentBuilderFactory.ehcache();
    }
    /**
     * ElSQL (camel-elsql)
     * The elsql component is an extension to the existing SQL Component that
     * uses ElSql to define the SQL queries.
     * 
     * Category: database,sql
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-elsql
     */
    static org.apache.camel.builder.component.dsl.ElsqlComponentBuilderFactory.ElsqlComponentBuilder elsql() {
        return org.apache.camel.builder.component.dsl.ElsqlComponentBuilderFactory.elsql();
    }
    /**
     * Elytron (camel-elytron)
     * The elytron component is allows you to work with the Elytron Security
     * Framework
     * 
     * Category: http
     * Since: 3.1
     * Maven coordinates: org.apache.camel:camel-elytron
     */
    static org.apache.camel.builder.component.dsl.ElytronComponentBuilderFactory.ElytronComponentBuilder elytron() {
        return org.apache.camel.builder.component.dsl.ElytronComponentBuilderFactory.elytron();
    }
    /**
     * Etcd (camel-etcd)
     * The camel etcd component allows you to work with Etcd, a distributed
     * reliable key-value store.
     * 
     * Category: clustering,database
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-etcd
     */
    static org.apache.camel.builder.component.dsl.EtcdComponentBuilderFactory.EtcdComponentBuilder etcd() {
        return org.apache.camel.builder.component.dsl.EtcdComponentBuilderFactory.etcd();
    }
    /**
     * Exec (camel-exec)
     * The exec component can be used to execute OS system commands.
     * 
     * Category: system
     * Since: 2.3
     * Maven coordinates: org.apache.camel:camel-exec
     */
    static org.apache.camel.builder.component.dsl.ExecComponentBuilderFactory.ExecComponentBuilder exec() {
        return org.apache.camel.builder.component.dsl.ExecComponentBuilderFactory.exec();
    }
    /**
     * Facebook (camel-facebook)
     * The Facebook component provides access to all of the Facebook APIs
     * accessible using Facebook4J.
     * 
     * Category: social
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-facebook
     */
    static org.apache.camel.builder.component.dsl.FacebookComponentBuilderFactory.FacebookComponentBuilder facebook() {
        return org.apache.camel.builder.component.dsl.FacebookComponentBuilderFactory.facebook();
    }
    /**
     * FHIR (camel-fhir)
     * The fhir component is used for working with the FHIR protocol (health
     * care).
     * 
     * Category: hl7,api
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-fhir
     */
    static org.apache.camel.builder.component.dsl.FhirComponentBuilderFactory.FhirComponentBuilder fhir() {
        return org.apache.camel.builder.component.dsl.FhirComponentBuilderFactory.fhir();
    }
    /**
     * File (camel-file)
     * The file component is used for reading or writing files.
     * 
     * Category: core,file
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-file
     */
    static org.apache.camel.builder.component.dsl.FileComponentBuilderFactory.FileComponentBuilder file() {
        return org.apache.camel.builder.component.dsl.FileComponentBuilderFactory.file();
    }
    /**
     * File Watch (camel-file-watch)
     * The file-watch is used to monitor file events in directory using
     * java.nio.file.WatchService
     * 
     * Category: file
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-file-watch
     */
    static org.apache.camel.builder.component.dsl.FileWatchComponentBuilderFactory.FileWatchComponentBuilder fileWatch() {
        return org.apache.camel.builder.component.dsl.FileWatchComponentBuilderFactory.fileWatch();
    }
    /**
     * Flatpack (camel-flatpack)
     * The flatpack component supports fixed width and delimited file parsing
     * via the FlatPack library.
     * 
     * Category: transformation
     * Since: 1.4
     * Maven coordinates: org.apache.camel:camel-flatpack
     */
    static org.apache.camel.builder.component.dsl.FlatpackComponentBuilderFactory.FlatpackComponentBuilder flatpack() {
        return org.apache.camel.builder.component.dsl.FlatpackComponentBuilderFactory.flatpack();
    }
    /**
     * Flink (camel-flink)
     * The flink component can be used to send DataSet jobs to Apache Flink
     * cluster.
     * 
     * Category: hadoop
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-flink
     */
    static org.apache.camel.builder.component.dsl.FlinkComponentBuilderFactory.FlinkComponentBuilder flink() {
        return org.apache.camel.builder.component.dsl.FlinkComponentBuilderFactory.flink();
    }
    /**
     * FOP (camel-fop)
     * The fop component allows you to render a message into different output
     * formats using Apache FOP.
     * 
     * Category: transformation
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-fop
     */
    static org.apache.camel.builder.component.dsl.FopComponentBuilderFactory.FopComponentBuilder fop() {
        return org.apache.camel.builder.component.dsl.FopComponentBuilderFactory.fop();
    }
    /**
     * Freemarker (camel-freemarker)
     * Transforms the message using a FreeMarker template.
     * 
     * Category: transformation
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-freemarker
     */
    static org.apache.camel.builder.component.dsl.FreemarkerComponentBuilderFactory.FreemarkerComponentBuilder freemarker() {
        return org.apache.camel.builder.component.dsl.FreemarkerComponentBuilderFactory.freemarker();
    }
    /**
     * FTP (camel-ftp)
     * The ftp component is used for uploading or downloading files from FTP
     * servers.
     * 
     * Category: file
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-ftp
     */
    static org.apache.camel.builder.component.dsl.FtpComponentBuilderFactory.FtpComponentBuilder ftp() {
        return org.apache.camel.builder.component.dsl.FtpComponentBuilderFactory.ftp();
    }
    /**
     * FTPS (camel-ftp)
     * The ftps (FTP secure SSL/TLS) component is used for uploading or
     * downloading files from FTP servers.
     * 
     * Category: file
     * Since: 2.2
     * Maven coordinates: org.apache.camel:camel-ftp
     */
    static org.apache.camel.builder.component.dsl.FtpsComponentBuilderFactory.FtpsComponentBuilder ftps() {
        return org.apache.camel.builder.component.dsl.FtpsComponentBuilderFactory.ftps();
    }
    /**
     * Ganglia (camel-ganglia)
     * The ganglia component is used for sending metrics to the Ganglia
     * monitoring system.
     * 
     * Category: monitoring
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-ganglia
     */
    static org.apache.camel.builder.component.dsl.GangliaComponentBuilderFactory.GangliaComponentBuilder ganglia() {
        return org.apache.camel.builder.component.dsl.GangliaComponentBuilderFactory.ganglia();
    }
    /**
     * Git (camel-git)
     * The git component is used for working with git repositories.
     * 
     * Category: file
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-git
     */
    static org.apache.camel.builder.component.dsl.GitComponentBuilderFactory.GitComponentBuilder git() {
        return org.apache.camel.builder.component.dsl.GitComponentBuilderFactory.git();
    }
    /**
     * Google Calendar (camel-google-calendar)
     * The google-calendar component provides access to Google Calendar.
     * 
     * Category: api,cloud
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-google-calendar
     */
    static org.apache.camel.builder.component.dsl.GoogleCalendarComponentBuilderFactory.GoogleCalendarComponentBuilder googleCalendar() {
        return org.apache.camel.builder.component.dsl.GoogleCalendarComponentBuilderFactory.googleCalendar();
    }
    /**
     * Google Calendar Stream (camel-google-calendar)
     * The google-calendar-stream component provides access to Google Calendar
     * in a streaming mode.
     * 
     * Category: api,cloud
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-google-calendar
     */
    static org.apache.camel.builder.component.dsl.GoogleCalendarStreamComponentBuilderFactory.GoogleCalendarStreamComponentBuilder googleCalendarStream() {
        return org.apache.camel.builder.component.dsl.GoogleCalendarStreamComponentBuilderFactory.googleCalendarStream();
    }
    /**
     * Google Drive (camel-google-drive)
     * The google-drive component provides access to Google Drive file storage
     * service.
     * 
     * Category: api,cloud,file
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-google-drive
     */
    static org.apache.camel.builder.component.dsl.GoogleDriveComponentBuilderFactory.GoogleDriveComponentBuilder googleDrive() {
        return org.apache.camel.builder.component.dsl.GoogleDriveComponentBuilderFactory.googleDrive();
    }
    /**
     * Google Mail (camel-google-mail)
     * The google-mail component provides access to Google Mail.
     * 
     * Category: api,cloud,mail
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-google-mail
     */
    static org.apache.camel.builder.component.dsl.GoogleMailComponentBuilderFactory.GoogleMailComponentBuilder googleMail() {
        return org.apache.camel.builder.component.dsl.GoogleMailComponentBuilderFactory.googleMail();
    }
    /**
     * Google Mail Stream (camel-google-mail)
     * The google-mail component provides access to Google Mail.
     * 
     * Category: api,cloud,mail
     * Since: 2.22
     * Maven coordinates: org.apache.camel:camel-google-mail
     */
    static org.apache.camel.builder.component.dsl.GoogleMailStreamComponentBuilderFactory.GoogleMailStreamComponentBuilder googleMailStream() {
        return org.apache.camel.builder.component.dsl.GoogleMailStreamComponentBuilderFactory.googleMailStream();
    }
    /**
     * Google Pubsub (camel-google-pubsub)
     * Messaging client for Google Cloud Platform PubSub Service
     * 
     * Category: messaging
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-google-pubsub
     */
    static org.apache.camel.builder.component.dsl.GooglePubsubComponentBuilderFactory.GooglePubsubComponentBuilder googlePubsub() {
        return org.apache.camel.builder.component.dsl.GooglePubsubComponentBuilderFactory.googlePubsub();
    }
    /**
     * Google Sheets (camel-google-sheets)
     * The google-sheets component provides access to Google Sheets.
     * 
     * Category: api,cloud,sheets
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-google-sheets
     */
    static org.apache.camel.builder.component.dsl.GoogleSheetsComponentBuilderFactory.GoogleSheetsComponentBuilder googleSheets() {
        return org.apache.camel.builder.component.dsl.GoogleSheetsComponentBuilderFactory.googleSheets();
    }
    /**
     * Google Sheets Stream (camel-google-sheets)
     * The google-sheets-stream component provides access to Google Sheets.
     * 
     * Category: api,cloud,sheets
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-google-sheets
     */
    static org.apache.camel.builder.component.dsl.GoogleSheetsStreamComponentBuilderFactory.GoogleSheetsStreamComponentBuilder googleSheetsStream() {
        return org.apache.camel.builder.component.dsl.GoogleSheetsStreamComponentBuilderFactory.googleSheetsStream();
    }
    /**
     * Gora (camel-gora)
     * The gora component allows you to work with NoSQL databases using the
     * Apache Gora framework.
     * 
     * Category: database,hadoop,nosql
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-gora
     */
    static org.apache.camel.builder.component.dsl.GoraComponentBuilderFactory.GoraComponentBuilder gora() {
        return org.apache.camel.builder.component.dsl.GoraComponentBuilderFactory.gora();
    }
    /**
     * Grape (camel-grape)
     * The grape component allows you to fetch, load and manage additional jars
     * when CamelContext is running.
     * 
     * Category: management,deployment
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-grape
     */
    static org.apache.camel.builder.component.dsl.GrapeComponentBuilderFactory.GrapeComponentBuilder grape() {
        return org.apache.camel.builder.component.dsl.GrapeComponentBuilderFactory.grape();
    }
    /**
     * GraphQL (camel-graphql)
     * A Camel GraphQL Component
     * 
     * Category: api
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-graphql
     */
    static org.apache.camel.builder.component.dsl.GraphqlComponentBuilderFactory.GraphqlComponentBuilder graphql() {
        return org.apache.camel.builder.component.dsl.GraphqlComponentBuilderFactory.graphql();
    }
    /**
     * gRPC (camel-grpc)
     * The gRPC component allows to call and expose remote procedures via HTTP/2
     * with protobuf dataformat
     * 
     * Category: rpc
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-grpc
     */
    static org.apache.camel.builder.component.dsl.GrpcComponentBuilderFactory.GrpcComponentBuilder grpc() {
        return org.apache.camel.builder.component.dsl.GrpcComponentBuilderFactory.grpc();
    }
    /**
     * Hazelcast Instance (camel-hazelcast)
     * The hazelcast-instance component is used to consume join/leave events of
     * the cache instance in the cluster.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastInstanceComponentBuilderFactory.HazelcastInstanceComponentBuilder hazelcastInstance() {
        return org.apache.camel.builder.component.dsl.HazelcastInstanceComponentBuilderFactory.hazelcastInstance();
    }
    /**
     * Hazelcast List (camel-hazelcast)
     * The hazelcast-list component is used to access Hazelcast distributed
     * list.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastListComponentBuilderFactory.HazelcastListComponentBuilder hazelcastList() {
        return org.apache.camel.builder.component.dsl.HazelcastListComponentBuilderFactory.hazelcastList();
    }
    /**
     * Hazelcast Map (camel-hazelcast)
     * The hazelcast-map component is used to access Hazelcast distributed map.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastMapComponentBuilderFactory.HazelcastMapComponentBuilder hazelcastMap() {
        return org.apache.camel.builder.component.dsl.HazelcastMapComponentBuilderFactory.hazelcastMap();
    }
    /**
     * Hazelcast Multimap (camel-hazelcast)
     * The hazelcast-multimap component is used to to access Hazelcast
     * distributed multimap.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastMultimapComponentBuilderFactory.HazelcastMultimapComponentBuilder hazelcastMultimap() {
        return org.apache.camel.builder.component.dsl.HazelcastMultimapComponentBuilderFactory.hazelcastMultimap();
    }
    /**
     * Hazelcast Queue (camel-hazelcast)
     * The hazelcast-queue component is used to access Hazelcast distributed
     * queue.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastQueueComponentBuilderFactory.HazelcastQueueComponentBuilder hazelcastQueue() {
        return org.apache.camel.builder.component.dsl.HazelcastQueueComponentBuilderFactory.hazelcastQueue();
    }
    /**
     * Hazelcast Replicated Map (camel-hazelcast)
     * The hazelcast-replicatedmap component is used to access Hazelcast
     * replicated map.
     * 
     * Category: cache,datagrid
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastReplicatedmapComponentBuilderFactory.HazelcastReplicatedmapComponentBuilder hazelcastReplicatedmap() {
        return org.apache.camel.builder.component.dsl.HazelcastReplicatedmapComponentBuilderFactory.hazelcastReplicatedmap();
    }
    /**
     * Hazelcast Ringbuffer (camel-hazelcast)
     * The hazelcast-ringbuffer component is used to access Hazelcast
     * distributed ringbuffer.
     * 
     * Category: cache,datagrid
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastRingbufferComponentBuilderFactory.HazelcastRingbufferComponentBuilder hazelcastRingbuffer() {
        return org.apache.camel.builder.component.dsl.HazelcastRingbufferComponentBuilderFactory.hazelcastRingbuffer();
    }
    /**
     * Hazelcast SEDA (camel-hazelcast)
     * The hazelcast-seda component is used to access Hazelcast BlockingQueue.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastSedaComponentBuilderFactory.HazelcastSedaComponentBuilder hazelcastSeda() {
        return org.apache.camel.builder.component.dsl.HazelcastSedaComponentBuilderFactory.hazelcastSeda();
    }
    /**
     * Hazelcast Set (camel-hazelcast)
     * The hazelcast-set component is used to access Hazelcast distributed set.
     * 
     * Category: cache,datagrid
     * Since: 2.7
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastSetComponentBuilderFactory.HazelcastSetComponentBuilder hazelcastSet() {
        return org.apache.camel.builder.component.dsl.HazelcastSetComponentBuilderFactory.hazelcastSet();
    }
    /**
     * Hazelcast Topic (camel-hazelcast)
     * The hazelcast-topic component is used to access Hazelcast distributed
     * topic.
     * 
     * Category: cache,datagrid
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-hazelcast
     */
    static org.apache.camel.builder.component.dsl.HazelcastTopicComponentBuilderFactory.HazelcastTopicComponentBuilder hazelcastTopic() {
        return org.apache.camel.builder.component.dsl.HazelcastTopicComponentBuilderFactory.hazelcastTopic();
    }
    /**
     * HDFS (camel-hdfs)
     * For reading/writing from/to an HDFS filesystem using Hadoop 2.x.
     * 
     * Category: hadoop,file
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-hdfs
     */
    static org.apache.camel.builder.component.dsl.HdfsComponentBuilderFactory.HdfsComponentBuilder hdfs() {
        return org.apache.camel.builder.component.dsl.HdfsComponentBuilderFactory.hdfs();
    }
    /**
     * Hipchat (camel-hipchat)
     * The hipchat component supports producing and consuming messages from/to
     * Hipchat service.
     * 
     * Category: api,cloud
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-hipchat
     */
    static org.apache.camel.builder.component.dsl.HipchatComponentBuilderFactory.HipchatComponentBuilder hipchat() {
        return org.apache.camel.builder.component.dsl.HipchatComponentBuilderFactory.hipchat();
    }
    /**
     * HTTP (camel-http)
     * For calling out to external HTTP servers using Apache HTTP Client 4.x.
     * 
     * Category: http
     * Since: 2.3
     * Maven coordinates: org.apache.camel:camel-http
     */
    static org.apache.camel.builder.component.dsl.HttpComponentBuilderFactory.HttpComponentBuilder http() {
        return org.apache.camel.builder.component.dsl.HttpComponentBuilderFactory.http();
    }
    /**
     * HTTPS (Secure) (camel-http)
     * For calling out to external HTTP servers using Apache HTTP Client 4.x.
     * 
     * Category: http
     * Since: 2.3
     * Maven coordinates: org.apache.camel:camel-http
     */
    static org.apache.camel.builder.component.dsl.HttpsComponentBuilderFactory.HttpsComponentBuilder https() {
        return org.apache.camel.builder.component.dsl.HttpsComponentBuilderFactory.https();
    }
    /**
     * Ignite Cache (camel-ignite)
     * The Ignite Cache endpoint is one of camel-ignite endpoints which allows
     * you to interact with an Ignite Cache.
     * 
     * Category: nosql,cache,compute
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteCacheComponentBuilderFactory.IgniteCacheComponentBuilder igniteCache() {
        return org.apache.camel.builder.component.dsl.IgniteCacheComponentBuilderFactory.igniteCache();
    }
    /**
     * Ignite Compute (camel-ignite)
     * The Ignite Compute endpoint is one of camel-ignite endpoints which allows
     * you to run compute operations on the cluster by passing in an
     * IgniteCallable, an IgniteRunnable, an IgniteClosure, or collections of
     * them, along with their parameters if necessary.
     * 
     * Category: nosql,cache,compute
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteComputeComponentBuilderFactory.IgniteComputeComponentBuilder igniteCompute() {
        return org.apache.camel.builder.component.dsl.IgniteComputeComponentBuilderFactory.igniteCompute();
    }
    /**
     * Ignite Events (camel-ignite)
     * The Ignite Events endpoint is one of camel-ignite endpoints which allows
     * you to receive events from the Ignite cluster by creating a local event
     * listener.
     * 
     * Category: nosql,cache,compute,messaging,data
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteEventsComponentBuilderFactory.IgniteEventsComponentBuilder igniteEvents() {
        return org.apache.camel.builder.component.dsl.IgniteEventsComponentBuilderFactory.igniteEvents();
    }
    /**
     * Ignite Messaging (camel-ignite)
     * The Ignite Messaging endpoint is one of camel-ignite endpoints which
     * allows you to send and consume messages from an Ignite topic.
     * 
     * Category: nosql,cache,messaging
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteMessagingComponentBuilderFactory.IgniteMessagingComponentBuilder igniteMessaging() {
        return org.apache.camel.builder.component.dsl.IgniteMessagingComponentBuilderFactory.igniteMessaging();
    }
    /**
     * Ignite Queues (camel-ignite)
     * The Ignite Queue endpoint is one of camel-ignite endpoints which allows
     * you to interact with Ignite Queue data structures.
     * 
     * Category: nosql,cache
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteQueueComponentBuilderFactory.IgniteQueueComponentBuilder igniteQueue() {
        return org.apache.camel.builder.component.dsl.IgniteQueueComponentBuilderFactory.igniteQueue();
    }
    /**
     * Ignite Sets (camel-ignite)
     * The Ignite Sets endpoint is one of camel-ignite endpoints which allows
     * you to interact with Ignite Set data structures.
     * 
     * Category: nosql,cache
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-ignite
     */
    static org.apache.camel.builder.component.dsl.IgniteSetComponentBuilderFactory.IgniteSetComponentBuilder igniteSet() {
        return org.apache.camel.builder.component.dsl.IgniteSetComponentBuilderFactory.igniteSet();
    }
    /**
     * Infinispan (camel-infinispan)
     * For reading/writing from/to Infinispan distributed key/value store and
     * data grid.
     * 
     * Category: cache,datagrid,clustering
     * Since: 2.13
     * Maven coordinates: org.apache.camel:camel-infinispan
     */
    static org.apache.camel.builder.component.dsl.InfinispanComponentBuilderFactory.InfinispanComponentBuilder infinispan() {
        return org.apache.camel.builder.component.dsl.InfinispanComponentBuilderFactory.infinispan();
    }
    /**
     * IRC (camel-irc)
     * The irc component implements an IRC (Internet Relay Chat) transport.
     * 
     * Category: chat
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-irc
     */
    static org.apache.camel.builder.component.dsl.IrcComponentBuilderFactory.IrcComponentBuilder irc() {
        return org.apache.camel.builder.component.dsl.IrcComponentBuilderFactory.irc();
    }
    /**
     * JClouds (camel-jclouds)
     * For interacting with cloud compute & blobstore service via jclouds.
     * 
     * Category: api,cloud
     * Since: 2.9
     * Maven coordinates: org.apache.camel:camel-jclouds
     */
    static org.apache.camel.builder.component.dsl.JcloudsComponentBuilderFactory.JcloudsComponentBuilder jclouds() {
        return org.apache.camel.builder.component.dsl.JcloudsComponentBuilderFactory.jclouds();
    }
    /**
     * JCR (camel-jcr)
     * The jcr component allows you to add/read nodes to/from a JCR compliant
     * content repository.
     * 
     * Category: cms,database
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-jcr
     */
    static org.apache.camel.builder.component.dsl.JcrComponentBuilderFactory.JcrComponentBuilder jcr() {
        return org.apache.camel.builder.component.dsl.JcrComponentBuilderFactory.jcr();
    }
    /**
     * JDBC (camel-jdbc)
     * The jdbc component enables you to access databases through JDBC, where
     * SQL queries are sent in the message body.
     * 
     * Category: database,sql
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-jdbc
     */
    static org.apache.camel.builder.component.dsl.JdbcComponentBuilderFactory.JdbcComponentBuilder jdbc() {
        return org.apache.camel.builder.component.dsl.JdbcComponentBuilderFactory.jdbc();
    }
    /**
     * Jetty (camel-jetty)
     * To use Jetty as a HTTP server as consumer for Camel routes.
     * 
     * Category: http
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-jetty
     */
    static org.apache.camel.builder.component.dsl.JettyComponentBuilderFactory.JettyComponentBuilder jetty() {
        return org.apache.camel.builder.component.dsl.JettyComponentBuilderFactory.jetty();
    }
    /**
     * Jing (camel-jing)
     * Validates the payload of a message using RelaxNG Syntax using Jing
     * library.
     * 
     * Category: validation
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-jing
     */
    static org.apache.camel.builder.component.dsl.JingComponentBuilderFactory.JingComponentBuilder jing() {
        return org.apache.camel.builder.component.dsl.JingComponentBuilderFactory.jing();
    }
    /**
     * Jira (camel-jira)
     * The jira component interacts with the JIRA issue tracker.
     * 
     * Category: api,reporting
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-jira
     */
    static org.apache.camel.builder.component.dsl.JiraComponentBuilderFactory.JiraComponentBuilder jira() {
        return org.apache.camel.builder.component.dsl.JiraComponentBuilderFactory.jira();
    }
    /**
     * JMS (camel-jms)
     * The jms component allows messages to be sent to (or consumed from) a JMS
     * Queue or Topic.
     * 
     * Category: messaging
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-jms
     */
    static org.apache.camel.builder.component.dsl.JmsComponentBuilderFactory.JmsComponentBuilder jms() {
        return org.apache.camel.builder.component.dsl.JmsComponentBuilderFactory.jms();
    }
    /**
     * JOLT (camel-jolt)
     * The jolt component allows you to process a JSON messages using an JOLT
     * specification (such as JSON-JSON transformation).
     * 
     * Category: transformation
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-jolt
     */
    static org.apache.camel.builder.component.dsl.JoltComponentBuilderFactory.JoltComponentBuilder jolt() {
        return org.apache.camel.builder.component.dsl.JoltComponentBuilderFactory.jolt();
    }
    /**
     * JOOQ (camel-jooq)
     * The jooq component enables you to store and retrieve entities from
     * databases using JOOQ
     * 
     * Category: database
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-jooq
     */
    static org.apache.camel.builder.component.dsl.JooqComponentBuilderFactory.JooqComponentBuilder jooq() {
        return org.apache.camel.builder.component.dsl.JooqComponentBuilderFactory.jooq();
    }
    /**
     * JPA (camel-jpa)
     * The jpa component enables you to store and retrieve Java objects from
     * databases using JPA.
     * 
     * Category: database,sql
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-jpa
     */
    static org.apache.camel.builder.component.dsl.JpaComponentBuilderFactory.JpaComponentBuilder jpa() {
        return org.apache.camel.builder.component.dsl.JpaComponentBuilderFactory.jpa();
    }
    /**
     * JSLT (camel-jslt)
     * The jslt component allows you to process a JSON messages using an JSLT
     * transformations.
     * 
     * Category: transformation
     * Since: 3.1
     * Maven coordinates: org.apache.camel:camel-jslt
     */
    static org.apache.camel.builder.component.dsl.JsltComponentBuilderFactory.JsltComponentBuilder jslt() {
        return org.apache.camel.builder.component.dsl.JsltComponentBuilderFactory.jslt();
    }
    /**
     * JSON Schema Validator (camel-json-validator)
     * Validates the payload of a message using NetworkNT JSON Schema library.
     * 
     * Category: validation
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-json-validator
     */
    static org.apache.camel.builder.component.dsl.JsonValidatorComponentBuilderFactory.JsonValidatorComponentBuilder jsonValidator() {
        return org.apache.camel.builder.component.dsl.JsonValidatorComponentBuilderFactory.jsonValidator();
    }
    /**
     * JT400 (camel-jt400)
     * The jt400 component allows you to exchanges messages with an AS/400
     * system using data queues or program call.
     * 
     * Category: messaging
     * Since: 1.5
     * Maven coordinates: org.apache.camel:camel-jt400
     */
    static org.apache.camel.builder.component.dsl.Jt400ComponentBuilderFactory.Jt400ComponentBuilder jt400() {
        return org.apache.camel.builder.component.dsl.Jt400ComponentBuilderFactory.jt400();
    }
    /**
     * Kafka (camel-kafka)
     * The kafka component allows messages to be sent to (or consumed from)
     * Apache Kafka brokers.
     * 
     * Category: messaging
     * Since: 2.13
     * Maven coordinates: org.apache.camel:camel-kafka
     */
    static org.apache.camel.builder.component.dsl.KafkaComponentBuilderFactory.KafkaComponentBuilder kafka() {
        return org.apache.camel.builder.component.dsl.KafkaComponentBuilderFactory.kafka();
    }
    /**
     * Kubernetes ConfigMap (camel-kubernetes)
     * The Kubernetes Configmaps component provides a producer to execute
     * kubernetes configmap operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesConfigMapsComponentBuilderFactory.KubernetesConfigMapsComponentBuilder kubernetesConfigMaps() {
        return org.apache.camel.builder.component.dsl.KubernetesConfigMapsComponentBuilderFactory.kubernetesConfigMaps();
    }
    /**
     * Kubernetes Deployments (camel-kubernetes)
     * The Kubernetes Nodes component provides a producer to execute kubernetes
     * node operations and a consumer to consume node events.
     * 
     * Category: container,cloud,paas
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesDeploymentsComponentBuilderFactory.KubernetesDeploymentsComponentBuilder kubernetesDeployments() {
        return org.apache.camel.builder.component.dsl.KubernetesDeploymentsComponentBuilderFactory.kubernetesDeployments();
    }
    /**
     * Kubernetes HPA (camel-kubernetes)
     * The Kubernetes HPA component provides a producer to execute kubernetes
     * hpa operations and a consumer to consume HPA events.
     * 
     * Category: container,cloud,paas
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesHpaComponentBuilderFactory.KubernetesHpaComponentBuilder kubernetesHpa() {
        return org.apache.camel.builder.component.dsl.KubernetesHpaComponentBuilderFactory.kubernetesHpa();
    }
    /**
     * Kubernetes Job (camel-kubernetes)
     * The Kubernetes Jobs component provides a producer to execute kubernetes
     * job operations
     * 
     * Category: container,cloud,paas
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesJobComponentBuilderFactory.KubernetesJobComponentBuilder kubernetesJob() {
        return org.apache.camel.builder.component.dsl.KubernetesJobComponentBuilderFactory.kubernetesJob();
    }
    /**
     * Kubernetes Namespaces (camel-kubernetes)
     * The Kubernetes Namespaces component provides a producer to execute
     * kubernetes namespace operations and a consumer to consume namespace
     * events.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesNamespacesComponentBuilderFactory.KubernetesNamespacesComponentBuilder kubernetesNamespaces() {
        return org.apache.camel.builder.component.dsl.KubernetesNamespacesComponentBuilderFactory.kubernetesNamespaces();
    }
    /**
     * Kubernetes Nodes (camel-kubernetes)
     * The Kubernetes Nodes component provides a producer to execute kubernetes
     * node operations and a consumer to consume node events.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesNodesComponentBuilderFactory.KubernetesNodesComponentBuilder kubernetesNodes() {
        return org.apache.camel.builder.component.dsl.KubernetesNodesComponentBuilderFactory.kubernetesNodes();
    }
    /**
     * Kubernetes Persistent Volume (camel-kubernetes)
     * The Kubernetes Persistent Volumes component provides a producer to
     * execute kubernetes persistent volume operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesPersistentVolumesComponentBuilderFactory.KubernetesPersistentVolumesComponentBuilder kubernetesPersistentVolumes() {
        return org.apache.camel.builder.component.dsl.KubernetesPersistentVolumesComponentBuilderFactory.kubernetesPersistentVolumes();
    }
    /**
     * Kubernetes Persistent Volume Claim (camel-kubernetes)
     * The Kubernetes Persistent Volumes Claims component provides a producer to
     * execute kubernetes persistent volume claim operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesPersistentVolumesClaimsComponentBuilderFactory.KubernetesPersistentVolumesClaimsComponentBuilder kubernetesPersistentVolumesClaims() {
        return org.apache.camel.builder.component.dsl.KubernetesPersistentVolumesClaimsComponentBuilderFactory.kubernetesPersistentVolumesClaims();
    }
    /**
     * Kubernetes Pods (camel-kubernetes)
     * The Kubernetes Pods component provides a producer to execute kubernetes
     * pod operations and a consumer to consume pod events.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesPodsComponentBuilderFactory.KubernetesPodsComponentBuilder kubernetesPods() {
        return org.apache.camel.builder.component.dsl.KubernetesPodsComponentBuilderFactory.kubernetesPods();
    }
    /**
     * Kubernetes Replication Controller (camel-kubernetes)
     * The Kubernetes Replication Controllers component provides a producer to
     * execute kubernetes replication controller operations and a consumer to
     * consume replication controller events.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesReplicationControllersComponentBuilderFactory.KubernetesReplicationControllersComponentBuilder kubernetesReplicationControllers() {
        return org.apache.camel.builder.component.dsl.KubernetesReplicationControllersComponentBuilderFactory.kubernetesReplicationControllers();
    }
    /**
     * Kubernetes Resources Quota (camel-kubernetes)
     * The Kubernetes Resources Quota component provides a producer to execute
     * kubernetes resources quota operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesResourcesQuotaComponentBuilderFactory.KubernetesResourcesQuotaComponentBuilder kubernetesResourcesQuota() {
        return org.apache.camel.builder.component.dsl.KubernetesResourcesQuotaComponentBuilderFactory.kubernetesResourcesQuota();
    }
    /**
     * Kubernetes Secrets (camel-kubernetes)
     * The Kubernetes Secrets component provides a producer to execute
     * kubernetes secret operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesSecretsComponentBuilderFactory.KubernetesSecretsComponentBuilder kubernetesSecrets() {
        return org.apache.camel.builder.component.dsl.KubernetesSecretsComponentBuilderFactory.kubernetesSecrets();
    }
    /**
     * Kubernetes Service Account (camel-kubernetes)
     * The Kubernetes Service Accounts component provides a producer to execute
     * service account operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesServiceAccountsComponentBuilderFactory.KubernetesServiceAccountsComponentBuilder kubernetesServiceAccounts() {
        return org.apache.camel.builder.component.dsl.KubernetesServiceAccountsComponentBuilderFactory.kubernetesServiceAccounts();
    }
    /**
     * Kubernetes Services (camel-kubernetes)
     * The Kubernetes Services component provides a producer to execute service
     * operations and a consumer to consume service events.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.KubernetesServicesComponentBuilderFactory.KubernetesServicesComponentBuilder kubernetesServices() {
        return org.apache.camel.builder.component.dsl.KubernetesServicesComponentBuilderFactory.kubernetesServices();
    }
    /**
     * Kudu (camel-kudu)
     * Represents a Kudu endpoint. A kudu endpoint allows you to interact with
     * Apache Kudu, a free and open source column-oriented data store of the
     * Apache Hadoop ecosystem.
     * 
     * Category: cloud,database,iot
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-kudu
     */
    static org.apache.camel.builder.component.dsl.KuduComponentBuilderFactory.KuduComponentBuilder kudu() {
        return org.apache.camel.builder.component.dsl.KuduComponentBuilderFactory.kudu();
    }
    /**
     * Language (camel-language)
     * The language component allows you to send a message to an endpoint which
     * executes a script by any of the supported Languages in Camel.
     * 
     * Category: core,script
     * Since: 2.5
     * Maven coordinates: org.apache.camel:camel-language
     */
    static org.apache.camel.builder.component.dsl.LanguageComponentBuilderFactory.LanguageComponentBuilder language() {
        return org.apache.camel.builder.component.dsl.LanguageComponentBuilderFactory.language();
    }
    /**
     * LDAP (camel-ldap)
     * The ldap component allows you to perform searches in LDAP servers using
     * filters as the message payload.
     * 
     * Category: ldap
     * Since: 1.5
     * Maven coordinates: org.apache.camel:camel-ldap
     */
    static org.apache.camel.builder.component.dsl.LdapComponentBuilderFactory.LdapComponentBuilder ldap() {
        return org.apache.camel.builder.component.dsl.LdapComponentBuilderFactory.ldap();
    }
    /**
     * LDIF (camel-ldif)
     * The ldif component allows you to do updates on an LDAP server from a LDIF
     * body content.
     * 
     * Category: ldap
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-ldif
     */
    static org.apache.camel.builder.component.dsl.LdifComponentBuilderFactory.LdifComponentBuilder ldif() {
        return org.apache.camel.builder.component.dsl.LdifComponentBuilderFactory.ldif();
    }
    /**
     * Log (camel-log)
     * The log component logs message exchanges to the underlying logging
     * mechanism.
     * 
     * Category: core,monitoring
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-log
     */
    static org.apache.camel.builder.component.dsl.LogComponentBuilderFactory.LogComponentBuilder log() {
        return org.apache.camel.builder.component.dsl.LogComponentBuilderFactory.log();
    }
    /**
     * Lucene (camel-lucene)
     * To insert or query from Apache Lucene databases.
     * 
     * Category: database,search
     * Since: 2.2
     * Maven coordinates: org.apache.camel:camel-lucene
     */
    static org.apache.camel.builder.component.dsl.LuceneComponentBuilderFactory.LuceneComponentBuilder lucene() {
        return org.apache.camel.builder.component.dsl.LuceneComponentBuilderFactory.lucene();
    }
    /**
     * Lumberjack (camel-lumberjack)
     * The lumberjack retrieves logs sent over the network using the Lumberjack
     * protocol.
     * 
     * Category: log
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-lumberjack
     */
    static org.apache.camel.builder.component.dsl.LumberjackComponentBuilderFactory.LumberjackComponentBuilder lumberjack() {
        return org.apache.camel.builder.component.dsl.LumberjackComponentBuilderFactory.lumberjack();
    }
    /**
     * Master (camel-master)
     * Represents an endpoint which only becomes active when the
     * CamelClusterView has the leadership.
     * 
     * Category: clustering
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-master
     */
    static org.apache.camel.builder.component.dsl.MasterComponentBuilderFactory.MasterComponentBuilder master() {
        return org.apache.camel.builder.component.dsl.MasterComponentBuilderFactory.master();
    }
    /**
     * Metrics (camel-metrics)
     * To collect various metrics directly from Camel routes using the
     * DropWizard metrics library.
     * 
     * Category: monitoring
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-metrics
     */
    static org.apache.camel.builder.component.dsl.MetricsComponentBuilderFactory.MetricsComponentBuilder metrics() {
        return org.apache.camel.builder.component.dsl.MetricsComponentBuilderFactory.metrics();
    }
    /**
     * Micrometer (camel-micrometer)
     * To collect various metrics directly from Camel routes using the
     * Micrometer library.
     * 
     * Category: monitoring
     * Since: 2.22
     * Maven coordinates: org.apache.camel:camel-micrometer
     */
    static org.apache.camel.builder.component.dsl.MicrometerComponentBuilderFactory.MicrometerComponentBuilder micrometer() {
        return org.apache.camel.builder.component.dsl.MicrometerComponentBuilderFactory.micrometer();
    }
    /**
     * OPC UA Client (camel-milo)
     * Connect to OPC UA servers using the binary protocol for acquiring
     * telemetry data
     * 
     * Category: iot
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-milo
     */
    static org.apache.camel.builder.component.dsl.MiloClientComponentBuilderFactory.MiloClientComponentBuilder miloClient() {
        return org.apache.camel.builder.component.dsl.MiloClientComponentBuilderFactory.miloClient();
    }
    /**
     * OPC UA Server (camel-milo)
     * Make telemetry data available as an OPC UA server
     * 
     * Category: iot
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-milo
     */
    static org.apache.camel.builder.component.dsl.MiloServerComponentBuilderFactory.MiloServerComponentBuilder miloServer() {
        return org.apache.camel.builder.component.dsl.MiloServerComponentBuilderFactory.miloServer();
    }
    /**
     * Mina (camel-mina)
     * Socket level networking using TCP or UDP with the Apache Mina 2.x
     * library.
     * 
     * Category: networking,tcp,udp
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-mina
     */
    static org.apache.camel.builder.component.dsl.MinaComponentBuilderFactory.MinaComponentBuilder mina() {
        return org.apache.camel.builder.component.dsl.MinaComponentBuilderFactory.mina();
    }
    /**
     * MLLP (camel-mllp)
     * Provides functionality required by Healthcare providers to communicate
     * with other systems using the MLLP protocol.
     * 
     * Category: mllp
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-mllp
     */
    static org.apache.camel.builder.component.dsl.MllpComponentBuilderFactory.MllpComponentBuilder mllp() {
        return org.apache.camel.builder.component.dsl.MllpComponentBuilderFactory.mllp();
    }
    /**
     * Mock (camel-mock)
     * The mock component is used for testing routes and mediation rules using
     * mocks.
     * 
     * Category: core,testing
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-mock
     */
    static org.apache.camel.builder.component.dsl.MockComponentBuilderFactory.MockComponentBuilder mock() {
        return org.apache.camel.builder.component.dsl.MockComponentBuilderFactory.mock();
    }
    /**
     * MSV (camel-msv)
     * Validates the payload of a message using the MSV Library.
     * 
     * Category: validation
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-msv
     */
    static org.apache.camel.builder.component.dsl.MsvComponentBuilderFactory.MsvComponentBuilder msv() {
        return org.apache.camel.builder.component.dsl.MsvComponentBuilderFactory.msv();
    }
    /**
     * Mustache (camel-mustache)
     * Transforms the message using a Mustache template.
     * 
     * Category: transformation
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-mustache
     */
    static org.apache.camel.builder.component.dsl.MustacheComponentBuilderFactory.MustacheComponentBuilder mustache() {
        return org.apache.camel.builder.component.dsl.MustacheComponentBuilderFactory.mustache();
    }
    /**
     * MVEL (camel-mvel)
     * Transforms the message using a MVEL template.
     * 
     * Category: transformation,script
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-mvel
     */
    static org.apache.camel.builder.component.dsl.MvelComponentBuilderFactory.MvelComponentBuilder mvel() {
        return org.apache.camel.builder.component.dsl.MvelComponentBuilderFactory.mvel();
    }
    /**
     * Nagios (camel-nagios)
     * To send passive checks to Nagios using JSendNSCA.
     * 
     * Category: monitoring
     * Since: 2.3
     * Maven coordinates: org.apache.camel:camel-nagios
     */
    static org.apache.camel.builder.component.dsl.NagiosComponentBuilderFactory.NagiosComponentBuilder nagios() {
        return org.apache.camel.builder.component.dsl.NagiosComponentBuilderFactory.nagios();
    }
    /**
     * Nats (camel-nats)
     * The nats component allows you produce and consume messages from NATS.
     * 
     * Category: messaging
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-nats
     */
    static org.apache.camel.builder.component.dsl.NatsComponentBuilderFactory.NatsComponentBuilder nats() {
        return org.apache.camel.builder.component.dsl.NatsComponentBuilderFactory.nats();
    }
    /**
     * Netty (camel-netty)
     * Socket level networking using TCP or UDP with the Netty 4.x library.
     * 
     * Category: networking,tcp,udp
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-netty
     */
    static org.apache.camel.builder.component.dsl.NettyComponentBuilderFactory.NettyComponentBuilder netty() {
        return org.apache.camel.builder.component.dsl.NettyComponentBuilderFactory.netty();
    }
    /**
     * Netty HTTP (camel-netty-http)
     * Netty HTTP server and client using the Netty 4.x library.
     * 
     * Category: http
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-netty-http
     */
    static org.apache.camel.builder.component.dsl.NettyHttpComponentBuilderFactory.NettyHttpComponentBuilder nettyHttp() {
        return org.apache.camel.builder.component.dsl.NettyHttpComponentBuilderFactory.nettyHttp();
    }
    /**
     * Nitrite (camel-nitrite)
     * Used for integrating Camel with Nitrite databases.
     * 
     * Category: database,nosql
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-nitrite
     */
    static org.apache.camel.builder.component.dsl.NitriteComponentBuilderFactory.NitriteComponentBuilder nitrite() {
        return org.apache.camel.builder.component.dsl.NitriteComponentBuilderFactory.nitrite();
    }
    /**
     * NSQ (camel-nsq)
     * Represents a nsq endpoint.
     * 
     * Category: messaging
     * Since: 2.23
     * Maven coordinates: org.apache.camel:camel-nsq
     */
    static org.apache.camel.builder.component.dsl.NsqComponentBuilderFactory.NsqComponentBuilder nsq() {
        return org.apache.camel.builder.component.dsl.NsqComponentBuilderFactory.nsq();
    }
    /**
     * Olingo2 (camel-olingo2)
     * Communicates with OData 2.0 services using Apache Olingo.
     * 
     * Category: cloud
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-olingo2
     */
    static org.apache.camel.builder.component.dsl.Olingo2ComponentBuilderFactory.Olingo2ComponentBuilder olingo2() {
        return org.apache.camel.builder.component.dsl.Olingo2ComponentBuilderFactory.olingo2();
    }
    /**
     * Olingo4 (camel-olingo4)
     * Communicates with OData 4.0 services using Apache Olingo OData API.
     * 
     * Category: cloud
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-olingo4
     */
    static org.apache.camel.builder.component.dsl.Olingo4ComponentBuilderFactory.Olingo4ComponentBuilder olingo4() {
        return org.apache.camel.builder.component.dsl.Olingo4ComponentBuilderFactory.olingo4();
    }
    /**
     * Openshift Build Config (camel-kubernetes)
     * The Kubernetes Build Config component provides a producer to execute
     * kubernetes build config operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.OpenshiftBuildConfigsComponentBuilderFactory.OpenshiftBuildConfigsComponentBuilder openshiftBuildConfigs() {
        return org.apache.camel.builder.component.dsl.OpenshiftBuildConfigsComponentBuilderFactory.openshiftBuildConfigs();
    }
    /**
     * Openshift Builds (camel-kubernetes)
     * The Openshift Builds component provides a producer to execute openshift
     * build operations.
     * 
     * Category: container,cloud,paas
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-kubernetes
     */
    static org.apache.camel.builder.component.dsl.OpenshiftBuildsComponentBuilderFactory.OpenshiftBuildsComponentBuilder openshiftBuilds() {
        return org.apache.camel.builder.component.dsl.OpenshiftBuildsComponentBuilderFactory.openshiftBuilds();
    }
    /**
     * Paho (camel-paho)
     * Component for communicating with MQTT message brokers using Eclipse Paho
     * MQTT Client.
     * 
     * Category: messaging,iot
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-paho
     */
    static org.apache.camel.builder.component.dsl.PahoComponentBuilderFactory.PahoComponentBuilder paho() {
        return org.apache.camel.builder.component.dsl.PahoComponentBuilderFactory.paho();
    }
    /**
     * PDF (camel-pdf)
     * The pdf components provides the ability to create, modify or extract
     * content from PDF documents.
     * 
     * Category: document,transformation,printing
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-pdf
     */
    static org.apache.camel.builder.component.dsl.PdfComponentBuilderFactory.PdfComponentBuilder pdf() {
        return org.apache.camel.builder.component.dsl.PdfComponentBuilderFactory.pdf();
    }
    /**
     * PostgresSQL Replication Slot (camel-pg-replication-slot)
     * Consumer endpoint to receive from PostgreSQL Replication Slot.
     * 
     * Category: database,sql
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-pg-replication-slot
     */
    static org.apache.camel.builder.component.dsl.PgReplicationSlotComponentBuilderFactory.PgReplicationSlotComponentBuilder pgReplicationSlot() {
        return org.apache.camel.builder.component.dsl.PgReplicationSlotComponentBuilderFactory.pgReplicationSlot();
    }
    /**
     * Platform HTTP (camel-platform-http)
     * HTTP service leveraging existing runtime platform HTTP server
     * 
     * Category: http
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-platform-http
     */
    static org.apache.camel.builder.component.dsl.PlatformHttpComponentBuilderFactory.PlatformHttpComponentBuilder platformHttp() {
        return org.apache.camel.builder.component.dsl.PlatformHttpComponentBuilderFactory.platformHttp();
    }
    /**
     * Pulsar (camel-pulsar)
     * Camel Apache Pulsar Component
     * 
     * Category: messaging
     * Since: 2.24
     * Maven coordinates: org.apache.camel:camel-pulsar
     */
    static org.apache.camel.builder.component.dsl.PulsarComponentBuilderFactory.PulsarComponentBuilder pulsar() {
        return org.apache.camel.builder.component.dsl.PulsarComponentBuilderFactory.pulsar();
    }
    /**
     * Quartz (camel-quartz)
     * Provides a scheduled delivery of messages using the Quartz 2.x scheduler.
     * 
     * Category: scheduling
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-quartz
     */
    static org.apache.camel.builder.component.dsl.QuartzComponentBuilderFactory.QuartzComponentBuilder quartz() {
        return org.apache.camel.builder.component.dsl.QuartzComponentBuilderFactory.quartz();
    }
    /**
     * Reactive Streams (camel-reactive-streams)
     * Reactive Camel using reactive streams
     * 
     * Category: reactive,streams
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-reactive-streams
     */
    static org.apache.camel.builder.component.dsl.ReactiveStreamsComponentBuilderFactory.ReactiveStreamsComponentBuilder reactiveStreams() {
        return org.apache.camel.builder.component.dsl.ReactiveStreamsComponentBuilderFactory.reactiveStreams();
    }
    /**
     * Ref (camel-ref)
     * The ref component is used for lookup of existing endpoints bound in the
     * Registry.
     * 
     * Category: core,endpoint
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-ref
     */
    static org.apache.camel.builder.component.dsl.RefComponentBuilderFactory.RefComponentBuilder ref() {
        return org.apache.camel.builder.component.dsl.RefComponentBuilderFactory.ref();
    }
    /**
     * REST (camel-rest)
     * The rest component is used for either hosting REST services (consumer) or
     * calling external REST services (producer).
     * 
     * Category: core,rest
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-rest
     */
    static org.apache.camel.builder.component.dsl.RestEndpointComponentBuilderFactory.RestEndpointComponentBuilder restEndpoint() {
        return org.apache.camel.builder.component.dsl.RestEndpointComponentBuilderFactory.restEndpoint();
    }
    /**
     * REST API (camel-rest)
     * The rest-api component is used for providing Swagger API of the REST
     * services which has been defined using the rest-dsl in Camel.
     * 
     * Category: core,rest
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-rest
     */
    static org.apache.camel.builder.component.dsl.RestApiComponentBuilderFactory.RestApiComponentBuilder restApi() {
        return org.apache.camel.builder.component.dsl.RestApiComponentBuilderFactory.restApi();
    }
    /**
     * REST Swagger (camel-rest-swagger)
     * An awesome REST endpoint backed by Swagger specifications.
     * 
     * Category: rest,swagger,http
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-rest-swagger
     */
    static org.apache.camel.builder.component.dsl.RestSwaggerComponentBuilderFactory.RestSwaggerComponentBuilder restSwagger() {
        return org.apache.camel.builder.component.dsl.RestSwaggerComponentBuilderFactory.restSwagger();
    }
    /**
     * RSS (camel-rss)
     * The rss component is used for consuming RSS feeds.
     * 
     * Category: rss
     * Since: 2.0
     * Maven coordinates: org.apache.camel:camel-rss
     */
    static org.apache.camel.builder.component.dsl.RssComponentBuilderFactory.RssComponentBuilder rss() {
        return org.apache.camel.builder.component.dsl.RssComponentBuilderFactory.rss();
    }
    /**
     * Saga (camel-saga)
     * The saga component provides access to advanced options for managing the
     * flow in the Saga EIP.
     * 
     * Category: core,endpoint
     * Since: 2.21
     * Maven coordinates: org.apache.camel:camel-saga
     */
    static org.apache.camel.builder.component.dsl.SagaComponentBuilderFactory.SagaComponentBuilder saga() {
        return org.apache.camel.builder.component.dsl.SagaComponentBuilderFactory.saga();
    }
    /**
     * Salesforce (camel-salesforce)
     * The salesforce component is used for integrating Camel with the massive
     * Salesforce API.
     * 
     * Category: api,cloud,crm
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-salesforce
     */
    static org.apache.camel.builder.component.dsl.SalesforceComponentBuilderFactory.SalesforceComponentBuilder salesforce() {
        return org.apache.camel.builder.component.dsl.SalesforceComponentBuilderFactory.salesforce();
    }
    /**
     * Scheduler (camel-scheduler)
     * The scheduler component is used for generating message exchanges when a
     * scheduler fires.
     * 
     * Category: core,scheduling
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-scheduler
     */
    static org.apache.camel.builder.component.dsl.SchedulerComponentBuilderFactory.SchedulerComponentBuilder scheduler() {
        return org.apache.camel.builder.component.dsl.SchedulerComponentBuilderFactory.scheduler();
    }
    /**
     * Schematron (camel-schematron)
     * Validates the payload of a message using the Schematron Library.
     * 
     * Category: validation
     * Since: 2.15
     * Maven coordinates: org.apache.camel:camel-schematron
     */
    static org.apache.camel.builder.component.dsl.SchematronComponentBuilderFactory.SchematronComponentBuilder schematron() {
        return org.apache.camel.builder.component.dsl.SchematronComponentBuilderFactory.schematron();
    }
    /**
     * SCP (camel-jsch)
     * To copy files using the secure copy protocol (SCP).
     * 
     * Category: file
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-jsch
     */
    static org.apache.camel.builder.component.dsl.ScpComponentBuilderFactory.ScpComponentBuilder scp() {
        return org.apache.camel.builder.component.dsl.ScpComponentBuilderFactory.scp();
    }
    /**
     * SEDA (camel-seda)
     * The seda component provides asynchronous call to another endpoint from
     * any CamelContext in the same JVM.
     * 
     * Category: core,endpoint
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-seda
     */
    static org.apache.camel.builder.component.dsl.SedaComponentBuilderFactory.SedaComponentBuilder seda() {
        return org.apache.camel.builder.component.dsl.SedaComponentBuilderFactory.seda();
    }
    /**
     * Service (camel-service)
     * Represents an endpoint which is registered to a Service Registry such as
     * Consul, Etcd.
     * 
     * Category: cloud
     * Since: 2.22
     * Maven coordinates: org.apache.camel:camel-service
     */
    static org.apache.camel.builder.component.dsl.ServiceComponentBuilderFactory.ServiceComponentBuilder service() {
        return org.apache.camel.builder.component.dsl.ServiceComponentBuilderFactory.service();
    }
    /**
     * Servlet (camel-servlet)
     * To use a HTTP Servlet as entry for Camel routes when running in a servlet
     * container.
     * 
     * Category: http
     * Since: 2.0
     * Maven coordinates: org.apache.camel:camel-servlet
     */
    static org.apache.camel.builder.component.dsl.ServletComponentBuilderFactory.ServletComponentBuilder servlet() {
        return org.apache.camel.builder.component.dsl.ServletComponentBuilderFactory.servlet();
    }
    /**
     * SFTP (camel-ftp)
     * The sftp (FTP over SSH) component is used for uploading or downloading
     * files from SFTP servers.
     * 
     * Category: file
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-ftp
     */
    static org.apache.camel.builder.component.dsl.SftpComponentBuilderFactory.SftpComponentBuilder sftp() {
        return org.apache.camel.builder.component.dsl.SftpComponentBuilderFactory.sftp();
    }
    /**
     * Simple JMS (camel-sjms)
     * The sjms component (simple jms) allows messages to be sent to (or
     * consumed from) a JMS Queue or Topic (uses JMS 1.x API).
     * 
     * Category: messaging
     * Since: 2.11
     * Maven coordinates: org.apache.camel:camel-sjms
     */
    static org.apache.camel.builder.component.dsl.SjmsComponentBuilderFactory.SjmsComponentBuilder sjms() {
        return org.apache.camel.builder.component.dsl.SjmsComponentBuilderFactory.sjms();
    }
    /**
     * Simple JMS Batch (camel-sjms)
     * The sjms-batch component is a specialized for highly performant,
     * transactional batch consumption from a JMS queue.
     * 
     * Category: messaging
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-sjms
     */
    static org.apache.camel.builder.component.dsl.SjmsBatchComponentBuilderFactory.SjmsBatchComponentBuilder sjmsBatch() {
        return org.apache.camel.builder.component.dsl.SjmsBatchComponentBuilderFactory.sjmsBatch();
    }
    /**
     * Simple JMS2 (camel-sjms2)
     * The sjms2 component (simple jms) allows messages to be sent to (or
     * consumed from) a JMS Queue or Topic (uses JMS 2.x API).
     * 
     * Category: messaging
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-sjms2
     */
    static org.apache.camel.builder.component.dsl.Sjms2ComponentBuilderFactory.Sjms2ComponentBuilder sjms2() {
        return org.apache.camel.builder.component.dsl.Sjms2ComponentBuilderFactory.sjms2();
    }
    /**
     * Slack (camel-slack)
     * The slack component allows you to send messages to Slack.
     * 
     * Category: social
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-slack
     */
    static org.apache.camel.builder.component.dsl.SlackComponentBuilderFactory.SlackComponentBuilder slack() {
        return org.apache.camel.builder.component.dsl.SlackComponentBuilderFactory.slack();
    }
    /**
     * SNMP (camel-snmp)
     * The snmp component gives you the ability to poll SNMP capable devices or
     * receiving traps.
     * 
     * Category: monitoring
     * Since: 2.1
     * Maven coordinates: org.apache.camel:camel-snmp
     */
    static org.apache.camel.builder.component.dsl.SnmpComponentBuilderFactory.SnmpComponentBuilder snmp() {
        return org.apache.camel.builder.component.dsl.SnmpComponentBuilderFactory.snmp();
    }
    /**
     * Spark Rest (camel-spark-rest)
     * The spark-rest component is used for hosting REST services which has been
     * defined using Camel rest-dsl.
     * 
     * Category: rest
     * Since: 2.14
     * Maven coordinates: org.apache.camel:camel-spark-rest
     */
    static org.apache.camel.builder.component.dsl.SparkRestComponentBuilderFactory.SparkRestComponentBuilder sparkRest() {
        return org.apache.camel.builder.component.dsl.SparkRestComponentBuilderFactory.sparkRest();
    }
    /**
     * Splunk (camel-splunk)
     * The splunk component allows to publish or search for events in Splunk.
     * 
     * Category: log,monitoring
     * Since: 2.13
     * Maven coordinates: org.apache.camel:camel-splunk
     */
    static org.apache.camel.builder.component.dsl.SplunkComponentBuilderFactory.SplunkComponentBuilder splunk() {
        return org.apache.camel.builder.component.dsl.SplunkComponentBuilderFactory.splunk();
    }
    /**
     * Spring Batch (camel-spring-batch)
     * The spring-batch component allows to send messages to Spring Batch for
     * further processing.
     * 
     * Category: spring,batch,scheduling
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-spring-batch
     */
    static org.apache.camel.builder.component.dsl.SpringBatchComponentBuilderFactory.SpringBatchComponentBuilder springBatch() {
        return org.apache.camel.builder.component.dsl.SpringBatchComponentBuilderFactory.springBatch();
    }
    /**
     * Spring Event (camel-spring)
     * The spring-event component allows to listen for Spring Application
     * Events.
     * 
     * Category: spring,eventbus
     * Since: 1.4
     * Maven coordinates: org.apache.camel:camel-spring
     */
    static org.apache.camel.builder.component.dsl.SpringEventComponentBuilderFactory.SpringEventComponentBuilder springEvent() {
        return org.apache.camel.builder.component.dsl.SpringEventComponentBuilderFactory.springEvent();
    }
    /**
     * Spring Integration (camel-spring-integration)
     * Bridges Camel with Spring Integration.
     * 
     * Category: spring,eventbus
     * Since: 1.4
     * Maven coordinates: org.apache.camel:camel-spring-integration
     */
    static org.apache.camel.builder.component.dsl.SpringIntegrationComponentBuilderFactory.SpringIntegrationComponentBuilder springIntegration() {
        return org.apache.camel.builder.component.dsl.SpringIntegrationComponentBuilderFactory.springIntegration();
    }
    /**
     * Spring LDAP (camel-spring-ldap)
     * The spring-ldap component allows you to perform searches in LDAP servers
     * using filters as the message payload.
     * 
     * Category: spring,ldap
     * Since: 2.11
     * Maven coordinates: org.apache.camel:camel-spring-ldap
     */
    static org.apache.camel.builder.component.dsl.SpringLdapComponentBuilderFactory.SpringLdapComponentBuilder springLdap() {
        return org.apache.camel.builder.component.dsl.SpringLdapComponentBuilderFactory.springLdap();
    }
    /**
     * SQL (camel-sql)
     * The sql component allows you to work with databases using JDBC SQL
     * queries.
     * 
     * Category: database,sql
     * Since: 1.4
     * Maven coordinates: org.apache.camel:camel-sql
     */
    static org.apache.camel.builder.component.dsl.SqlComponentBuilderFactory.SqlComponentBuilder sql() {
        return org.apache.camel.builder.component.dsl.SqlComponentBuilderFactory.sql();
    }
    /**
     * SQL Stored Procedure (camel-sql)
     * The sql component allows you to work with databases using JDBC Stored
     * Procedure queries.
     * 
     * Category: database,sql
     * Since: 2.17
     * Maven coordinates: org.apache.camel:camel-sql
     */
    static org.apache.camel.builder.component.dsl.SqlStoredComponentBuilderFactory.SqlStoredComponentBuilder sqlStored() {
        return org.apache.camel.builder.component.dsl.SqlStoredComponentBuilderFactory.sqlStored();
    }
    /**
     * SSH (camel-ssh)
     * The ssh component enables access to SSH servers such that you can send an
     * SSH command, and process the response.
     * 
     * Category: file
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-ssh
     */
    static org.apache.camel.builder.component.dsl.SshComponentBuilderFactory.SshComponentBuilder ssh() {
        return org.apache.camel.builder.component.dsl.SshComponentBuilderFactory.ssh();
    }
    /**
     * Stomp (camel-stomp)
     * The stomp component is used for communicating with Stomp compliant
     * message brokers.
     * 
     * Category: messaging
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-stomp
     */
    static org.apache.camel.builder.component.dsl.StompComponentBuilderFactory.StompComponentBuilder stomp() {
        return org.apache.camel.builder.component.dsl.StompComponentBuilderFactory.stomp();
    }
    /**
     * Stream (camel-stream)
     * The stream: component provides access to the system-in, system-out and
     * system-err streams as well as allowing streaming of file.
     * 
     * Category: file,system
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-stream
     */
    static org.apache.camel.builder.component.dsl.StreamComponentBuilderFactory.StreamComponentBuilder stream() {
        return org.apache.camel.builder.component.dsl.StreamComponentBuilderFactory.stream();
    }
    /**
     * String Template (camel-stringtemplate)
     * Transforms the message using a String template.
     * 
     * Category: transformation
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-stringtemplate
     */
    static org.apache.camel.builder.component.dsl.StringTemplateComponentBuilderFactory.StringTemplateComponentBuilder stringTemplate() {
        return org.apache.camel.builder.component.dsl.StringTemplateComponentBuilderFactory.stringTemplate();
    }
    /**
     * Stub (camel-stub)
     * The stub component provides a simple way to stub out any physical
     * endpoints while in development or testing.
     * 
     * Category: core,testing
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-stub
     */
    static org.apache.camel.builder.component.dsl.StubComponentBuilderFactory.StubComponentBuilder stub() {
        return org.apache.camel.builder.component.dsl.StubComponentBuilderFactory.stub();
    }
    /**
     * Telegram (camel-telegram)
     * The telegram component provides access to the Telegram Bot API.
     * 
     * Category: chat
     * Since: 2.18
     * Maven coordinates: org.apache.camel:camel-telegram
     */
    static org.apache.camel.builder.component.dsl.TelegramComponentBuilderFactory.TelegramComponentBuilder telegram() {
        return org.apache.camel.builder.component.dsl.TelegramComponentBuilderFactory.telegram();
    }
    /**
     * Thrift (camel-thrift)
     * The Thrift component allows to call and expose remote procedures (RPC)
     * with Apache Thrift data format and serialization mechanism
     * 
     * Category: rpc
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-thrift
     */
    static org.apache.camel.builder.component.dsl.ThriftComponentBuilderFactory.ThriftComponentBuilder thrift() {
        return org.apache.camel.builder.component.dsl.ThriftComponentBuilderFactory.thrift();
    }
    /**
     * Tika (camel-tika)
     * This component integrates with Apache Tika to extract content and
     * metadata from thousands of file types.
     * 
     * Category: document,transformation
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-tika
     */
    static org.apache.camel.builder.component.dsl.TikaComponentBuilderFactory.TikaComponentBuilder tika() {
        return org.apache.camel.builder.component.dsl.TikaComponentBuilderFactory.tika();
    }
    /**
     * Timer (camel-timer)
     * The timer component is used for generating message exchanges when a timer
     * fires.
     * 
     * Category: core,scheduling
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-timer
     */
    static org.apache.camel.builder.component.dsl.TimerComponentBuilderFactory.TimerComponentBuilder timer() {
        return org.apache.camel.builder.component.dsl.TimerComponentBuilderFactory.timer();
    }
    /**
     * Twilio (camel-twilio)
     * The Twilio component allows you to interact with the Twilio REST APIs
     * using Twilio Java SDK.
     * 
     * Category: api,messaging,cloud
     * Since: 2.20
     * Maven coordinates: org.apache.camel:camel-twilio
     */
    static org.apache.camel.builder.component.dsl.TwilioComponentBuilderFactory.TwilioComponentBuilder twilio() {
        return org.apache.camel.builder.component.dsl.TwilioComponentBuilderFactory.twilio();
    }
    /**
     * Twitter Search (camel-twitter)
     * The Twitter Search component consumes search results.
     * 
     * Category: api,social
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-twitter
     */
    static org.apache.camel.builder.component.dsl.TwitterSearchComponentBuilderFactory.TwitterSearchComponentBuilder twitterSearch() {
        return org.apache.camel.builder.component.dsl.TwitterSearchComponentBuilderFactory.twitterSearch();
    }
    /**
     * Twitter Timeline (camel-twitter)
     * The Twitter Timeline component consumes twitter timeline or update the
     * status of specific user.
     * 
     * Category: api,social
     * Since: 2.10
     * Maven coordinates: org.apache.camel:camel-twitter
     */
    static org.apache.camel.builder.component.dsl.TwitterTimelineComponentBuilderFactory.TwitterTimelineComponentBuilder twitterTimeline() {
        return org.apache.camel.builder.component.dsl.TwitterTimelineComponentBuilderFactory.twitterTimeline();
    }
    /**
     * Undertow (camel-undertow)
     * The undertow component provides HTTP and WebSocket based endpoints for
     * consuming and producing HTTP/WebSocket requests.
     * 
     * Category: http,websocket
     * Since: 2.16
     * Maven coordinates: org.apache.camel:camel-undertow
     */
    static org.apache.camel.builder.component.dsl.UndertowComponentBuilderFactory.UndertowComponentBuilder undertow() {
        return org.apache.camel.builder.component.dsl.UndertowComponentBuilderFactory.undertow();
    }
    /**
     * Validator (camel-validator)
     * Validates the payload of a message using XML Schema and JAXP Validation.
     * 
     * Category: core,validation
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-validator
     */
    static org.apache.camel.builder.component.dsl.ValidatorComponentBuilderFactory.ValidatorComponentBuilder validator() {
        return org.apache.camel.builder.component.dsl.ValidatorComponentBuilderFactory.validator();
    }
    /**
     * Velocity (camel-velocity)
     * Transforms the message using a Velocity template.
     * 
     * Category: transformation
     * Since: 1.2
     * Maven coordinates: org.apache.camel:camel-velocity
     */
    static org.apache.camel.builder.component.dsl.VelocityComponentBuilderFactory.VelocityComponentBuilder velocity() {
        return org.apache.camel.builder.component.dsl.VelocityComponentBuilderFactory.velocity();
    }
    /**
     * Vert.x (camel-vertx)
     * The vertx component is used for sending and receive messages from a vertx
     * event bus.
     * 
     * Category: eventbus,reactive
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-vertx
     */
    static org.apache.camel.builder.component.dsl.VertxComponentBuilderFactory.VertxComponentBuilder vertx() {
        return org.apache.camel.builder.component.dsl.VertxComponentBuilderFactory.vertx();
    }
    /**
     * VM (camel-vm)
     * The vm component provides asynchronous call to another endpoint from the
     * same CamelContext.
     * 
     * Category: core,endpoint
     * Since: 1.1
     * Maven coordinates: org.apache.camel:camel-vm
     */
    static org.apache.camel.builder.component.dsl.VmComponentBuilderFactory.VmComponentBuilder vm() {
        return org.apache.camel.builder.component.dsl.VmComponentBuilderFactory.vm();
    }
    /**
     * Weather (camel-weather)
     * Polls the weather information from Open Weather Map.
     * 
     * Category: api
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-weather
     */
    static org.apache.camel.builder.component.dsl.WeatherComponentBuilderFactory.WeatherComponentBuilder weather() {
        return org.apache.camel.builder.component.dsl.WeatherComponentBuilderFactory.weather();
    }
    /**
     * Web3j Ethereum Blockchain (camel-web3j)
     * The web3j component uses the Web3j client API and allows you to add/read
     * nodes to/from a web3j compliant content repositories.
     * 
     * Category: bitcoin,blockchain
     * Since: 2.22
     * Maven coordinates: org.apache.camel:camel-web3j
     */
    static org.apache.camel.builder.component.dsl.Web3jComponentBuilderFactory.Web3jComponentBuilder web3j() {
        return org.apache.camel.builder.component.dsl.Web3jComponentBuilderFactory.web3j();
    }
    /**
     * Webhook (camel-webhook)
     * The webhook component allows other Camel components that can receive push
     * notifications to expose webhook endpoints and automatically register them
     * with their own webhook provider.
     * 
     * Category: cloud
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-webhook
     */
    static org.apache.camel.builder.component.dsl.WebhookComponentBuilderFactory.WebhookComponentBuilder webhook() {
        return org.apache.camel.builder.component.dsl.WebhookComponentBuilderFactory.webhook();
    }
    /**
     * Weka (camel-weka)
     * The camel-weka component provides Data Mining functionality through Weka.
     * 
     * Category: Datamining
     * Since: 3.1
     * Maven coordinates: org.apache.camel:camel-weka
     */
    static org.apache.camel.builder.component.dsl.WekaComponentBuilderFactory.WekaComponentBuilder weka() {
        return org.apache.camel.builder.component.dsl.WekaComponentBuilderFactory.weka();
    }
    /**
     * Wordpress (camel-wordpress)
     * Integrates Camel with Wordpress.
     * 
     * Category: cms
     * Since: 2.21
     * Maven coordinates: org.apache.camel:camel-wordpress
     */
    static org.apache.camel.builder.component.dsl.WordpressComponentBuilderFactory.WordpressComponentBuilder wordpress() {
        return org.apache.camel.builder.component.dsl.WordpressComponentBuilderFactory.wordpress();
    }
    /**
     * Workday (camel-workday)
     * Represents a camel-workday endpoint.
     * 
     * Category: hcm
     * Since: 3.1.0-SNAPSHOT
     * Maven coordinates: org.apache.camel:camel-workday
     */
    static org.apache.camel.builder.component.dsl.WorkdayComponentBuilderFactory.WorkdayComponentBuilder workday() {
        return org.apache.camel.builder.component.dsl.WorkdayComponentBuilderFactory.workday();
    }
    /**
     * XMPP (camel-xmpp)
     * To send and receive messages from a XMPP (chat) server.
     * 
     * Category: chat,messaging
     * Since: 1.0
     * Maven coordinates: org.apache.camel:camel-xmpp
     */
    static org.apache.camel.builder.component.dsl.XmppComponentBuilderFactory.XmppComponentBuilder xmpp() {
        return org.apache.camel.builder.component.dsl.XmppComponentBuilderFactory.xmpp();
    }
    /**
     * XSLT (camel-xslt)
     * Transforms the message using a XSLT template.
     * 
     * Category: core,transformation
     * Since: 1.3
     * Maven coordinates: org.apache.camel:camel-xslt
     */
    static org.apache.camel.builder.component.dsl.XsltComponentBuilderFactory.XsltComponentBuilder xslt() {
        return org.apache.camel.builder.component.dsl.XsltComponentBuilderFactory.xslt();
    }
    /**
     * XSLT Saxon (camel-xslt-saxon)
     * Transforms the message using a XSLT template using Saxon.
     * 
     * Category: core,transformation
     * Since: 3.0
     * Maven coordinates: org.apache.camel:camel-xslt-saxon
     */
    static org.apache.camel.builder.component.dsl.XsltSaxonComponentBuilderFactory.XsltSaxonComponentBuilder xsltSaxon() {
        return org.apache.camel.builder.component.dsl.XsltSaxonComponentBuilderFactory.xsltSaxon();
    }
    /**
     * Yammer (camel-yammer)
     * The yammer component allows you to interact with the Yammer enterprise
     * social network.
     * 
     * Category: social
     * Since: 2.12
     * Maven coordinates: org.apache.camel:camel-yammer
     */
    static org.apache.camel.builder.component.dsl.YammerComponentBuilderFactory.YammerComponentBuilder yammer() {
        return org.apache.camel.builder.component.dsl.YammerComponentBuilderFactory.yammer();
    }
    /**
     * Zendesk (camel-zendesk)
     * Allows producing messages to manage Zendesk ticket, user, organization,
     * etc.
     * 
     * Category: api,support,cloud
     * Since: 2.19
     * Maven coordinates: org.apache.camel:camel-zendesk
     */
    static org.apache.camel.builder.component.dsl.ZendeskComponentBuilderFactory.ZendeskComponentBuilder zendesk() {
        return org.apache.camel.builder.component.dsl.ZendeskComponentBuilderFactory.zendesk();
    }
}