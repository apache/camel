{
  "model": {
    "kind": "model",
    "name": "propertyPlaceholder",
    "title": "Property Placeholder",
    "description": "Properties placeholder",
    "deprecated": false,
    "label": "spring,configuration",
    "javaType": "org.apache.camel.core.xml.CamelPropertyPlaceholderDefinition",
    "abstract": false,
    "input": false,
    "output": false
  },
  "properties": {
    "id": { "index": 0, "kind": "attribute", "displayName": "Id", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of this node" },
    "location": { "index": 1, "kind": "attribute", "displayName": "Location", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "A list of locations to load properties. You can use comma to separate multiple locations. This option will override any default locations and only use the locations from this option." },
    "encoding": { "index": 2, "kind": "attribute", "displayName": "Encoding", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Encoding to use when loading properties file from the file system or classpath. If no encoding has been set, then the properties files is loaded using ISO-8859-1 encoding (latin-1) as documented by java.util.Properties#load(java.io.InputStream)" },
    "ignoreMissingLocation": { "index": 3, "kind": "attribute", "displayName": "Ignore Missing Location", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether to silently ignore if a location cannot be located, such as a properties file not found." },
    "nestedPlaceholder": { "index": 4, "kind": "attribute", "displayName": "Nested Placeholder", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether to support nested property placeholders. A nested placeholder, means that a placeholder, has also a placeholder, that should be resolved (recursively)." },
    "propertiesParserRef": { "index": 5, "kind": "attribute", "displayName": "Properties Parser Ref", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Reference to a custom PropertiesParser to be used" },
    "defaultFallbackEnabled": { "index": 6, "kind": "attribute", "displayName": "Default Fallback Enabled", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "If false, the component does not attempt to find a default for the key by looking after the colon separator." },
    "propertiesFunction": { "index": 7, "kind": "element", "displayName": "Properties Function", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.core.xml.CamelPropertyPlaceholderFunctionDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "List of custom properties function to use." },
    "propertiesLocation": { "index": 8, "kind": "element", "displayName": "Properties Location", "required": false, "type": "array", "javaType": "java.util.List<org.apache.camel.core.xml.CamelPropertyPlaceholderLocationDefinition>", "deprecated": false, "autowired": false, "secret": false, "description": "List of property locations to use." }
  }
}
