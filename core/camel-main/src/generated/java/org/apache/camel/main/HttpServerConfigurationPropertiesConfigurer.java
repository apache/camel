/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.main;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.main.HttpServerConfigurationProperties;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class HttpServerConfigurationPropertiesConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.main.HttpServerConfigurationProperties target = (org.apache.camel.main.HttpServerConfigurationProperties) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "devconsoleenabled":
        case "DevConsoleEnabled": target.setDevConsoleEnabled(property(camelContext, boolean.class, value)); return true;
        case "enabled":
        case "Enabled": target.setEnabled(property(camelContext, boolean.class, value)); return true;
        case "healthcheckenabled":
        case "HealthCheckEnabled": target.setHealthCheckEnabled(property(camelContext, boolean.class, value)); return true;
        case "host":
        case "Host": target.setHost(property(camelContext, java.lang.String.class, value)); return true;
        case "maxbodysize":
        case "MaxBodySize": target.setMaxBodySize(property(camelContext, java.lang.Long.class, value)); return true;
        case "path":
        case "Path": target.setPath(property(camelContext, java.lang.String.class, value)); return true;
        case "port":
        case "Port": target.setPort(property(camelContext, int.class, value)); return true;
        case "uploadenabled":
        case "UploadEnabled": target.setUploadEnabled(property(camelContext, boolean.class, value)); return true;
        case "uploadsourcedir":
        case "UploadSourceDir": target.setUploadSourceDir(property(camelContext, java.lang.String.class, value)); return true;
        case "useglobalsslcontextparameters":
        case "UseGlobalSslContextParameters": target.setUseGlobalSslContextParameters(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "devconsoleenabled":
        case "DevConsoleEnabled": return boolean.class;
        case "enabled":
        case "Enabled": return boolean.class;
        case "healthcheckenabled":
        case "HealthCheckEnabled": return boolean.class;
        case "host":
        case "Host": return java.lang.String.class;
        case "maxbodysize":
        case "MaxBodySize": return java.lang.Long.class;
        case "path":
        case "Path": return java.lang.String.class;
        case "port":
        case "Port": return int.class;
        case "uploadenabled":
        case "UploadEnabled": return boolean.class;
        case "uploadsourcedir":
        case "UploadSourceDir": return java.lang.String.class;
        case "useglobalsslcontextparameters":
        case "UseGlobalSslContextParameters": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.main.HttpServerConfigurationProperties target = (org.apache.camel.main.HttpServerConfigurationProperties) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "devconsoleenabled":
        case "DevConsoleEnabled": return target.isDevConsoleEnabled();
        case "enabled":
        case "Enabled": return target.isEnabled();
        case "healthcheckenabled":
        case "HealthCheckEnabled": return target.isHealthCheckEnabled();
        case "host":
        case "Host": return target.getHost();
        case "maxbodysize":
        case "MaxBodySize": return target.getMaxBodySize();
        case "path":
        case "Path": return target.getPath();
        case "port":
        case "Port": return target.getPort();
        case "uploadenabled":
        case "UploadEnabled": return target.isUploadEnabled();
        case "uploadsourcedir":
        case "UploadSourceDir": return target.getUploadSourceDir();
        case "useglobalsslcontextparameters":
        case "UseGlobalSslContextParameters": return target.isUseGlobalSslContextParameters();
        default: return null;
        }
    }
}

