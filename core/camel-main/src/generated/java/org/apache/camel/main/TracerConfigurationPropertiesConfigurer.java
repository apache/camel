/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.main;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.main.TracerConfigurationProperties;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class TracerConfigurationPropertiesConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.main.TracerConfigurationProperties target = (org.apache.camel.main.TracerConfigurationProperties) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "backlogsize":
        case "BacklogSize": target.setBacklogSize(property(camelContext, int.class, value)); return true;
        case "bodyincludefiles":
        case "BodyIncludeFiles": target.setBodyIncludeFiles(property(camelContext, boolean.class, value)); return true;
        case "bodyincludestreams":
        case "BodyIncludeStreams": target.setBodyIncludeStreams(property(camelContext, boolean.class, value)); return true;
        case "bodymaxchars":
        case "BodyMaxChars": target.setBodyMaxChars(property(camelContext, int.class, value)); return true;
        case "enabled":
        case "Enabled": target.setEnabled(property(camelContext, boolean.class, value)); return true;
        case "includeexception":
        case "IncludeException": target.setIncludeException(property(camelContext, boolean.class, value)); return true;
        case "includeexchangeproperties":
        case "IncludeExchangeProperties": target.setIncludeExchangeProperties(property(camelContext, boolean.class, value)); return true;
        case "includeexchangevariables":
        case "IncludeExchangeVariables": target.setIncludeExchangeVariables(property(camelContext, boolean.class, value)); return true;
        case "removeondump":
        case "RemoveOnDump": target.setRemoveOnDump(property(camelContext, boolean.class, value)); return true;
        case "standby":
        case "Standby": target.setStandby(property(camelContext, boolean.class, value)); return true;
        case "tracefilter":
        case "TraceFilter": target.setTraceFilter(property(camelContext, java.lang.String.class, value)); return true;
        case "tracepattern":
        case "TracePattern": target.setTracePattern(property(camelContext, java.lang.String.class, value)); return true;
        case "tracerests":
        case "TraceRests": target.setTraceRests(property(camelContext, boolean.class, value)); return true;
        case "tracetemplates":
        case "TraceTemplates": target.setTraceTemplates(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "backlogsize":
        case "BacklogSize": return int.class;
        case "bodyincludefiles":
        case "BodyIncludeFiles": return boolean.class;
        case "bodyincludestreams":
        case "BodyIncludeStreams": return boolean.class;
        case "bodymaxchars":
        case "BodyMaxChars": return int.class;
        case "enabled":
        case "Enabled": return boolean.class;
        case "includeexception":
        case "IncludeException": return boolean.class;
        case "includeexchangeproperties":
        case "IncludeExchangeProperties": return boolean.class;
        case "includeexchangevariables":
        case "IncludeExchangeVariables": return boolean.class;
        case "removeondump":
        case "RemoveOnDump": return boolean.class;
        case "standby":
        case "Standby": return boolean.class;
        case "tracefilter":
        case "TraceFilter": return java.lang.String.class;
        case "tracepattern":
        case "TracePattern": return java.lang.String.class;
        case "tracerests":
        case "TraceRests": return boolean.class;
        case "tracetemplates":
        case "TraceTemplates": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.main.TracerConfigurationProperties target = (org.apache.camel.main.TracerConfigurationProperties) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "backlogsize":
        case "BacklogSize": return target.getBacklogSize();
        case "bodyincludefiles":
        case "BodyIncludeFiles": return target.isBodyIncludeFiles();
        case "bodyincludestreams":
        case "BodyIncludeStreams": return target.isBodyIncludeStreams();
        case "bodymaxchars":
        case "BodyMaxChars": return target.getBodyMaxChars();
        case "enabled":
        case "Enabled": return target.isEnabled();
        case "includeexception":
        case "IncludeException": return target.isIncludeException();
        case "includeexchangeproperties":
        case "IncludeExchangeProperties": return target.isIncludeExchangeProperties();
        case "includeexchangevariables":
        case "IncludeExchangeVariables": return target.isIncludeExchangeVariables();
        case "removeondump":
        case "RemoveOnDump": return target.isRemoveOnDump();
        case "standby":
        case "Standby": return target.isStandby();
        case "tracefilter":
        case "TraceFilter": return target.getTraceFilter();
        case "tracepattern":
        case "TracePattern": return target.getTracePattern();
        case "tracerests":
        case "TraceRests": return target.isTraceRests();
        case "tracetemplates":
        case "TraceTemplates": return target.isTraceTemplates();
        default: return null;
        }
    }
}

