/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.main;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.vault.IBMSecretsManagerVaultConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.GenerateConfigurerMojo")
@SuppressWarnings("unchecked")
public class IBMSecretsManagerVaultConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.vault.IBMSecretsManagerVaultConfiguration target = (org.apache.camel.vault.IBMSecretsManagerVaultConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "awsvaultconfiguration":
        case "awsVaultConfiguration": target.setAwsVaultConfiguration(property(camelContext, org.apache.camel.vault.AwsVaultConfiguration.class, value)); return true;
        case "azurevaultconfiguration":
        case "azureVaultConfiguration": target.setAzureVaultConfiguration(property(camelContext, org.apache.camel.vault.AzureVaultConfiguration.class, value)); return true;
        case "eventstreambootstrapservers":
        case "eventStreamBootstrapServers": target.setEventStreamBootstrapServers(property(camelContext, java.lang.String.class, value)); return true;
        case "eventstreamconsumerpolltimeout":
        case "eventStreamConsumerPollTimeout": target.setEventStreamConsumerPollTimeout(property(camelContext, long.class, value)); return true;
        case "eventstreamgroupid":
        case "eventStreamGroupId": target.setEventStreamGroupId(property(camelContext, java.lang.String.class, value)); return true;
        case "eventstreampassword":
        case "eventStreamPassword": target.setEventStreamPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "eventstreamtopic":
        case "eventStreamTopic": target.setEventStreamTopic(property(camelContext, java.lang.String.class, value)); return true;
        case "eventstreamusername":
        case "eventStreamUsername": target.setEventStreamUsername(property(camelContext, java.lang.String.class, value)); return true;
        case "gcpvaultconfiguration":
        case "gcpVaultConfiguration": target.setGcpVaultConfiguration(property(camelContext, org.apache.camel.vault.GcpVaultConfiguration.class, value)); return true;
        case "hashicorpvaultconfiguration":
        case "hashicorpVaultConfiguration": target.setHashicorpVaultConfiguration(property(camelContext, org.apache.camel.vault.HashicorpVaultConfiguration.class, value)); return true;
        case "ibmsecretsmanagervaultconfiguration":
        case "iBMSecretsManagerVaultConfiguration": target.setIBMSecretsManagerVaultConfiguration(property(camelContext, org.apache.camel.vault.IBMSecretsManagerVaultConfiguration.class, value)); return true;
        case "kubernetesconfigmapvaultconfiguration":
        case "kubernetesConfigMapVaultConfiguration": target.setKubernetesConfigMapVaultConfiguration(property(camelContext, org.apache.camel.vault.KubernetesConfigMapVaultConfiguration.class, value)); return true;
        case "kubernetesvaultconfiguration":
        case "kubernetesVaultConfiguration": target.setKubernetesVaultConfiguration(property(camelContext, org.apache.camel.vault.KubernetesVaultConfiguration.class, value)); return true;
        case "refreshenabled":
        case "refreshEnabled": target.setRefreshEnabled(property(camelContext, boolean.class, value)); return true;
        case "secrets": target.setSecrets(property(camelContext, java.lang.String.class, value)); return true;
        case "serviceurl":
        case "serviceUrl": target.setServiceUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "token": target.setToken(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "awsvaultconfiguration":
        case "awsVaultConfiguration": return org.apache.camel.vault.AwsVaultConfiguration.class;
        case "azurevaultconfiguration":
        case "azureVaultConfiguration": return org.apache.camel.vault.AzureVaultConfiguration.class;
        case "eventstreambootstrapservers":
        case "eventStreamBootstrapServers": return java.lang.String.class;
        case "eventstreamconsumerpolltimeout":
        case "eventStreamConsumerPollTimeout": return long.class;
        case "eventstreamgroupid":
        case "eventStreamGroupId": return java.lang.String.class;
        case "eventstreampassword":
        case "eventStreamPassword": return java.lang.String.class;
        case "eventstreamtopic":
        case "eventStreamTopic": return java.lang.String.class;
        case "eventstreamusername":
        case "eventStreamUsername": return java.lang.String.class;
        case "gcpvaultconfiguration":
        case "gcpVaultConfiguration": return org.apache.camel.vault.GcpVaultConfiguration.class;
        case "hashicorpvaultconfiguration":
        case "hashicorpVaultConfiguration": return org.apache.camel.vault.HashicorpVaultConfiguration.class;
        case "ibmsecretsmanagervaultconfiguration":
        case "iBMSecretsManagerVaultConfiguration": return org.apache.camel.vault.IBMSecretsManagerVaultConfiguration.class;
        case "kubernetesconfigmapvaultconfiguration":
        case "kubernetesConfigMapVaultConfiguration": return org.apache.camel.vault.KubernetesConfigMapVaultConfiguration.class;
        case "kubernetesvaultconfiguration":
        case "kubernetesVaultConfiguration": return org.apache.camel.vault.KubernetesVaultConfiguration.class;
        case "refreshenabled":
        case "refreshEnabled": return boolean.class;
        case "secrets": return java.lang.String.class;
        case "serviceurl":
        case "serviceUrl": return java.lang.String.class;
        case "token": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.vault.IBMSecretsManagerVaultConfiguration target = (org.apache.camel.vault.IBMSecretsManagerVaultConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "awsvaultconfiguration":
        case "awsVaultConfiguration": return target.getAwsVaultConfiguration();
        case "azurevaultconfiguration":
        case "azureVaultConfiguration": return target.getAzureVaultConfiguration();
        case "eventstreambootstrapservers":
        case "eventStreamBootstrapServers": return target.getEventStreamBootstrapServers();
        case "eventstreamconsumerpolltimeout":
        case "eventStreamConsumerPollTimeout": return target.getEventStreamConsumerPollTimeout();
        case "eventstreamgroupid":
        case "eventStreamGroupId": return target.getEventStreamGroupId();
        case "eventstreampassword":
        case "eventStreamPassword": return target.getEventStreamPassword();
        case "eventstreamtopic":
        case "eventStreamTopic": return target.getEventStreamTopic();
        case "eventstreamusername":
        case "eventStreamUsername": return target.getEventStreamUsername();
        case "gcpvaultconfiguration":
        case "gcpVaultConfiguration": return target.getGcpVaultConfiguration();
        case "hashicorpvaultconfiguration":
        case "hashicorpVaultConfiguration": return target.getHashicorpVaultConfiguration();
        case "ibmsecretsmanagervaultconfiguration":
        case "iBMSecretsManagerVaultConfiguration": return target.getIBMSecretsManagerVaultConfiguration();
        case "kubernetesconfigmapvaultconfiguration":
        case "kubernetesConfigMapVaultConfiguration": return target.getKubernetesConfigMapVaultConfiguration();
        case "kubernetesvaultconfiguration":
        case "kubernetesVaultConfiguration": return target.getKubernetesVaultConfiguration();
        case "refreshenabled":
        case "refreshEnabled": return target.isRefreshEnabled();
        case "secrets": return target.getSecrets();
        case "serviceurl":
        case "serviceUrl": return target.getServiceUrl();
        case "token": return target.getToken();
        default: return null;
        }
    }
}

