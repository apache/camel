/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.rest.PatchVerbDefinition;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class PatchVerbDefinitionPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public PatchVerbDefinitionPropertyPlaceholderProvider(Object obj) {
        PatchVerbDefinition definition = (PatchVerbDefinition) obj;

        readPlaceholders.put("method", definition::getMethod);
        writePlaceholders.put("method", definition::setMethod);
        readPlaceholders.put("uri", definition::getUri);
        writePlaceholders.put("uri", definition::setUri);
        readPlaceholders.put("consumes", definition::getConsumes);
        writePlaceholders.put("consumes", definition::setConsumes);
        readPlaceholders.put("produces", definition::getProduces);
        writePlaceholders.put("produces", definition::setProduces);
        readPlaceholders.put("bindingMode", definition::getBindingMode);
        writePlaceholders.put("bindingMode", definition::setBindingMode);
        readPlaceholders.put("skipBindingOnErrorCode", definition::getSkipBindingOnErrorCode);
        writePlaceholders.put("skipBindingOnErrorCode", definition::setSkipBindingOnErrorCode);
        readPlaceholders.put("clientRequestValidation", definition::getClientRequestValidation);
        writePlaceholders.put("clientRequestValidation", definition::setClientRequestValidation);
        readPlaceholders.put("enableCORS", definition::getEnableCORS);
        writePlaceholders.put("enableCORS", definition::setEnableCORS);
        readPlaceholders.put("type", definition::getType);
        writePlaceholders.put("type", definition::setType);
        readPlaceholders.put("outType", definition::getOutType);
        writePlaceholders.put("outType", definition::setOutType);
        readPlaceholders.put("routeId", definition::getRouteId);
        writePlaceholders.put("routeId", definition::setRouteId);
        readPlaceholders.put("apiDocs", definition::getApiDocs);
        writePlaceholders.put("apiDocs", definition::setApiDocs);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

