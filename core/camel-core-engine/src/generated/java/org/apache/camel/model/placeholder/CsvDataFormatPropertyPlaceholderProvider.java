/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.dataformat.CsvDataFormat;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class CsvDataFormatPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public CsvDataFormatPropertyPlaceholderProvider(Object obj) {
        CsvDataFormat definition = (CsvDataFormat) obj;

        readPlaceholders.put("formatRef", definition::getFormatRef);
        writePlaceholders.put("formatRef", definition::setFormatRef);
        readPlaceholders.put("formatName", definition::getFormatName);
        writePlaceholders.put("formatName", definition::setFormatName);
        readPlaceholders.put("commentMarker", definition::getCommentMarker);
        writePlaceholders.put("commentMarker", definition::setCommentMarker);
        readPlaceholders.put("delimiter", definition::getDelimiter);
        writePlaceholders.put("delimiter", definition::setDelimiter);
        readPlaceholders.put("escape", definition::getEscape);
        writePlaceholders.put("escape", definition::setEscape);
        readPlaceholders.put("nullString", definition::getNullString);
        writePlaceholders.put("nullString", definition::setNullString);
        readPlaceholders.put("quote", definition::getQuote);
        writePlaceholders.put("quote", definition::setQuote);
        readPlaceholders.put("recordSeparatorDisabled", definition::getRecordSeparatorDisabled);
        writePlaceholders.put("recordSeparatorDisabled", definition::setRecordSeparatorDisabled);
        readPlaceholders.put("recordSeparator", definition::getRecordSeparator);
        writePlaceholders.put("recordSeparator", definition::setRecordSeparator);
        readPlaceholders.put("quoteMode", definition::getQuoteMode);
        writePlaceholders.put("quoteMode", definition::setQuoteMode);
        readPlaceholders.put("marshallerFactoryRef", definition::getMarshallerFactoryRef);
        writePlaceholders.put("marshallerFactoryRef", definition::setMarshallerFactoryRef);
        readPlaceholders.put("recordConverterRef", definition::getRecordConverterRef);
        writePlaceholders.put("recordConverterRef", definition::setRecordConverterRef);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

