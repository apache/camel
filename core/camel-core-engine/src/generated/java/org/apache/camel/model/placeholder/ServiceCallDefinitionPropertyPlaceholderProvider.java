/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.cloud.ServiceCallDefinition;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class ServiceCallDefinitionPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public ServiceCallDefinitionPropertyPlaceholderProvider(Object obj) {
        ServiceCallDefinition definition = (ServiceCallDefinition) obj;

        readPlaceholders.put("name", definition::getName);
        writePlaceholders.put("name", definition::setName);
        readPlaceholders.put("uri", definition::getUri);
        writePlaceholders.put("uri", definition::setUri);
        readPlaceholders.put("component", definition::getComponent);
        writePlaceholders.put("component", definition::setComponent);
        readPlaceholders.put("configurationRef", definition::getConfigurationRef);
        writePlaceholders.put("configurationRef", definition::setConfigurationRef);
        readPlaceholders.put("serviceDiscoveryRef", definition::getServiceDiscoveryRef);
        writePlaceholders.put("serviceDiscoveryRef", definition::setServiceDiscoveryRef);
        readPlaceholders.put("serviceFilterRef", definition::getServiceFilterRef);
        writePlaceholders.put("serviceFilterRef", definition::setServiceFilterRef);
        readPlaceholders.put("serviceChooserRef", definition::getServiceChooserRef);
        writePlaceholders.put("serviceChooserRef", definition::setServiceChooserRef);
        readPlaceholders.put("loadBalancerRef", definition::getLoadBalancerRef);
        writePlaceholders.put("loadBalancerRef", definition::setLoadBalancerRef);
        readPlaceholders.put("expressionRef", definition::getExpressionRef);
        writePlaceholders.put("expressionRef", definition::setExpressionRef);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

