/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.RouteDefinition;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class RouteDefinitionPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public RouteDefinitionPropertyPlaceholderProvider(Object obj) {
        RouteDefinition definition = (RouteDefinition) obj;

        readPlaceholders.put("group", definition::getGroup);
        writePlaceholders.put("group", definition::setGroup);
        readPlaceholders.put("streamCache", definition::getStreamCache);
        writePlaceholders.put("streamCache", definition::setStreamCache);
        readPlaceholders.put("trace", definition::getTrace);
        writePlaceholders.put("trace", definition::setTrace);
        readPlaceholders.put("messageHistory", definition::getMessageHistory);
        writePlaceholders.put("messageHistory", definition::setMessageHistory);
        readPlaceholders.put("logMask", definition::getLogMask);
        writePlaceholders.put("logMask", definition::setLogMask);
        readPlaceholders.put("delayer", definition::getDelayer);
        writePlaceholders.put("delayer", definition::setDelayer);
        readPlaceholders.put("autoStartup", definition::getAutoStartup);
        writePlaceholders.put("autoStartup", definition::setAutoStartup);
        readPlaceholders.put("errorHandlerRef", definition::getErrorHandlerRef);
        writePlaceholders.put("errorHandlerRef", definition::setErrorHandlerRef);
        readPlaceholders.put("routePolicyRef", definition::getRoutePolicyRef);
        writePlaceholders.put("routePolicyRef", definition::setRoutePolicyRef);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

