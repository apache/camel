/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.dataformat.CryptoDataFormat;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class CryptoDataFormatPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public CryptoDataFormatPropertyPlaceholderProvider(Object obj) {
        CryptoDataFormat definition = (CryptoDataFormat) obj;

        readPlaceholders.put("algorithm", definition::getAlgorithm);
        writePlaceholders.put("algorithm", definition::setAlgorithm);
        readPlaceholders.put("cryptoProvider", definition::getCryptoProvider);
        writePlaceholders.put("cryptoProvider", definition::setCryptoProvider);
        readPlaceholders.put("keyRef", definition::getKeyRef);
        writePlaceholders.put("keyRef", definition::setKeyRef);
        readPlaceholders.put("initVectorRef", definition::getInitVectorRef);
        writePlaceholders.put("initVectorRef", definition::setInitVectorRef);
        readPlaceholders.put("algorithmParameterRef", definition::getAlgorithmParameterRef);
        writePlaceholders.put("algorithmParameterRef", definition::setAlgorithmParameterRef);
        readPlaceholders.put("macAlgorithm", definition::getMacAlgorithm);
        writePlaceholders.put("macAlgorithm", definition::setMacAlgorithm);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

