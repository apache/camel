/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.placeholder;

import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Supplier;

import org.apache.camel.CamelContext;
import org.apache.camel.model.dataformat.XMLSecurityDataFormat;
import org.apache.camel.spi.PropertyPlaceholderConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class XMLSecurityDataFormatPropertyPlaceholderProvider implements PropertyPlaceholderConfigurer {

    private final Map<String, Supplier<String>> readPlaceholders = new HashMap<>();
    private final Map<String, Consumer<String>> writePlaceholders = new HashMap<>();

    public XMLSecurityDataFormatPropertyPlaceholderProvider(Object obj) {
        XMLSecurityDataFormat definition = (XMLSecurityDataFormat) obj;

        readPlaceholders.put("xmlCipherAlgorithm", definition::getXmlCipherAlgorithm);
        writePlaceholders.put("xmlCipherAlgorithm", definition::setXmlCipherAlgorithm);
        readPlaceholders.put("passPhrase", definition::getPassPhrase);
        writePlaceholders.put("passPhrase", definition::setPassPhrase);
        readPlaceholders.put("secureTag", definition::getSecureTag);
        writePlaceholders.put("secureTag", definition::setSecureTag);
        readPlaceholders.put("keyCipherAlgorithm", definition::getKeyCipherAlgorithm);
        writePlaceholders.put("keyCipherAlgorithm", definition::setKeyCipherAlgorithm);
        readPlaceholders.put("recipientKeyAlias", definition::getRecipientKeyAlias);
        writePlaceholders.put("recipientKeyAlias", definition::setRecipientKeyAlias);
        readPlaceholders.put("keyOrTrustStoreParametersRef", definition::getKeyOrTrustStoreParametersRef);
        writePlaceholders.put("keyOrTrustStoreParametersRef", definition::setKeyOrTrustStoreParametersRef);
        readPlaceholders.put("keyPassword", definition::getKeyPassword);
        writePlaceholders.put("keyPassword", definition::setKeyPassword);
        readPlaceholders.put("digestAlgorithm", definition::getDigestAlgorithm);
        writePlaceholders.put("digestAlgorithm", definition::setDigestAlgorithm);
        readPlaceholders.put("mgfAlgorithm", definition::getMgfAlgorithm);
        writePlaceholders.put("mgfAlgorithm", definition::setMgfAlgorithm);
        readPlaceholders.put("id", definition::getId);
        writePlaceholders.put("id", definition::setId);
    }

    @Override
    public Map<String, Supplier<String>> getReadPropertyPlaceholderOptions(CamelContext camelContext) {
        return readPlaceholders;
    }

    @Override
    public Map<String, Consumer<String>> getWritePropertyPlaceholderOptions(CamelContext camelContext) {
        return writePlaceholders;
    }

}

