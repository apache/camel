/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.builder.endpoint.dsl;

import javax.annotation.Generated;
import org.apache.camel.builder.EndpointConsumerBuilder;
import org.apache.camel.builder.EndpointProducerBuilder;
import org.apache.camel.builder.endpoint.AbstractEndpointBuilder;

/**
 * Perform operations on ArangoDb documents, collections and graphs.
 * 
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface ArangoDbEndpointBuilderFactory {


    /**
     * Builder for endpoint for the ArangoDb component.
     */
    public interface ArangoDbEndpointBuilder extends EndpointProducerBuilder {
        default AdvancedArangoDbEndpointBuilder advanced() {
            return (AdvancedArangoDbEndpointBuilder) this;
        }
        /**
         * collection in the database.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder collection(String collection) {
            doSetProperty("collection", collection);
            return this;
        }
        /**
         * host if host and/or port different from default.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder host(String host) {
            doSetProperty("host", host);
            return this;
        }
        /**
         * Whether the producer should be started lazy (on the first message).
         * By starting lazy you can use this to allow CamelContext and routes to
         * startup in situations where a producer may otherwise fail during
         * starting and cause the route to fail being started. By deferring this
         * startup to be lazy then the startup failure can be handled during
         * routing messages via Camel's routing error handlers. Beware that when
         * the first message is processed then creating and starting the
         * producer may take a little time and prolong the total processing time
         * of the processing.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Default: false
         * Group: producer
         */
        default ArangoDbEndpointBuilder lazyStartProducer(
                boolean lazyStartProducer) {
            doSetProperty("lazyStartProducer", lazyStartProducer);
            return this;
        }
        /**
         * Whether the producer should be started lazy (on the first message).
         * By starting lazy you can use this to allow CamelContext and routes to
         * startup in situations where a producer may otherwise fail during
         * starting and cause the route to fail being started. By deferring this
         * startup to be lazy then the startup failure can be handled during
         * routing messages via Camel's routing error handlers. Beware that when
         * the first message is processed then creating and starting the
         * producer may take a little time and prolong the total processing time
         * of the processing.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Default: false
         * Group: producer
         */
        default ArangoDbEndpointBuilder lazyStartProducer(
                String lazyStartProducer) {
            doSetProperty("lazyStartProducer", lazyStartProducer);
            return this;
        }
        /**
         * operation to perform.
         * 
         * The option is a:
         * <code>org.apache.camel.component.arangodb.ArangoDbOperation</code>
         * type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder operation(ArangoDbOperation operation) {
            doSetProperty("operation", operation);
            return this;
        }
        /**
         * operation to perform.
         * 
         * The option will be converted to a
         * <code>org.apache.camel.component.arangodb.ArangoDbOperation</code>
         * type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder operation(String operation) {
            doSetProperty("operation", operation);
            return this;
        }
        /**
         * port if host and/or port different from default.
         * 
         * The option is a: <code>int</code> type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder port(int port) {
            doSetProperty("port", port);
            return this;
        }
        /**
         * port if host and/or port different from default.
         * 
         * The option will be converted to a <code>int</code> type.
         * 
         * Group: producer
         */
        default ArangoDbEndpointBuilder port(String port) {
            doSetProperty("port", port);
            return this;
        }
        /**
         * password if user and/or password different from default.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: security
         */
        default ArangoDbEndpointBuilder password(String password) {
            doSetProperty("password", password);
            return this;
        }
        /**
         * user if user and/or password different from default.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: security
         */
        default ArangoDbEndpointBuilder user(String user) {
            doSetProperty("user", user);
            return this;
        }
    }

    /**
     * Advanced builder for endpoint for the ArangoDb component.
     */
    public interface AdvancedArangoDbEndpointBuilder
            extends
                EndpointProducerBuilder {
        default ArangoDbEndpointBuilder basic() {
            return (ArangoDbEndpointBuilder) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Default: false
         * Group: advanced
         */
        default AdvancedArangoDbEndpointBuilder basicPropertyBinding(
                boolean basicPropertyBinding) {
            doSetProperty("basicPropertyBinding", basicPropertyBinding);
            return this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Default: false
         * Group: advanced
         */
        default AdvancedArangoDbEndpointBuilder basicPropertyBinding(
                String basicPropertyBinding) {
            doSetProperty("basicPropertyBinding", basicPropertyBinding);
            return this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported).
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Default: false
         * Group: advanced
         */
        default AdvancedArangoDbEndpointBuilder synchronous(boolean synchronous) {
            doSetProperty("synchronous", synchronous);
            return this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported).
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Default: false
         * Group: advanced
         */
        default AdvancedArangoDbEndpointBuilder synchronous(String synchronous) {
            doSetProperty("synchronous", synchronous);
            return this;
        }
    }

    /**
     * Proxy enum for
     * <code>org.apache.camel.component.arangodb.ArangoDbOperation</code> enum.
     */
    enum ArangoDbOperation {
        SAVE_DOCUMENT,
        FIND_DOCUMENT_BY_KEY,
        UPDATE_DOCUMENT,
        DELETE_DOCUMENT,
        AQL_QUERY;
    }

    public interface ArangoDbBuilders {
        /**
         * ArangoDb (camel-arangodb)
         * Perform operations on ArangoDb documents, collections and graphs.
         * 
         * Category: database,nosql
         * Since: 3.5.0-SNAPSHOT
         * Maven coordinates: org.apache.camel:camel-arangodb
         * 
         * Syntax: <code>arangodb:database</code>
         * 
         * Path parameter: database (required)
         * database name
         * 
         * @param path database
         */
        default ArangoDbEndpointBuilder arangodb(String path) {
            return ArangoDbEndpointBuilderFactory.endpointBuilder("arangodb", path);
        }
        /**
         * ArangoDb (camel-arangodb)
         * Perform operations on ArangoDb documents, collections and graphs.
         * 
         * Category: database,nosql
         * Since: 3.5.0-SNAPSHOT
         * Maven coordinates: org.apache.camel:camel-arangodb
         * 
         * Syntax: <code>arangodb:database</code>
         * 
         * Path parameter: database (required)
         * database name
         * 
         * @param componentName to use a custom component name for the endpoint
         * instead of the default name
         * @param path database
         */
        default ArangoDbEndpointBuilder arangodb(
                String componentName,
                String path) {
            return ArangoDbEndpointBuilderFactory.endpointBuilder(componentName, path);
        }
    }
    static ArangoDbEndpointBuilder endpointBuilder(
            String componentName,
            String path) {
        class ArangoDbEndpointBuilderImpl extends AbstractEndpointBuilder implements ArangoDbEndpointBuilder, AdvancedArangoDbEndpointBuilder {
            public ArangoDbEndpointBuilderImpl(String path) {
                super(componentName, path);
            }
        }
        return new ArangoDbEndpointBuilderImpl(path);
    }
}