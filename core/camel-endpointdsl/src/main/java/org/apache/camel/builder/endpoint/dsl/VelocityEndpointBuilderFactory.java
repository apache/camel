/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.builder.endpoint.dsl;

import javax.annotation.Generated;
import org.apache.camel.builder.EndpointConsumerBuilder;
import org.apache.camel.builder.EndpointProducerBuilder;
import org.apache.camel.builder.endpoint.AbstractEndpointBuilder;

/**
 * Transforms the message using a Velocity template.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface VelocityEndpointBuilderFactory {


    /**
     * Builder for endpoint for the Velocity component.
     */
    public interface VelocityEndpointBuilder extends EndpointProducerBuilder {
        default AdvancedVelocityEndpointBuilder advanced() {
            return (AdvancedVelocityEndpointBuilder) this;
        }
        /**
         * Sets whether to use resource content cache or not.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder contentCache(boolean contentCache) {
            setProperty("contentCache", contentCache);
            return this;
        }
        /**
         * Sets whether to use resource content cache or not.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder contentCache(String contentCache) {
            setProperty("contentCache", contentCache);
            return this;
        }
        /**
         * Character encoding of the resource content.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder encoding(String encoding) {
            setProperty("encoding", encoding);
            return this;
        }
        /**
         * Enables / disables the velocity resource loader cache which is
         * enabled by default.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder loaderCache(boolean loaderCache) {
            setProperty("loaderCache", loaderCache);
            return this;
        }
        /**
         * Enables / disables the velocity resource loader cache which is
         * enabled by default.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder loaderCache(String loaderCache) {
            setProperty("loaderCache", loaderCache);
            return this;
        }
        /**
         * The URI of the properties file which is used for VelocityEngine
         * initialization.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         */
        default VelocityEndpointBuilder propertiesFile(String propertiesFile) {
            setProperty("propertiesFile", propertiesFile);
            return this;
        }
    }

    /**
     * Advanced builder for endpoint for the Velocity component.
     */
    public interface AdvancedVelocityEndpointBuilder
            extends
                EndpointProducerBuilder {
        default VelocityEndpointBuilder basic() {
            return (VelocityEndpointBuilder) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Group: advanced
         */
        default AdvancedVelocityEndpointBuilder basicPropertyBinding(
                boolean basicPropertyBinding) {
            setProperty("basicPropertyBinding", basicPropertyBinding);
            return this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Group: advanced
         */
        default AdvancedVelocityEndpointBuilder basicPropertyBinding(
                String basicPropertyBinding) {
            setProperty("basicPropertyBinding", basicPropertyBinding);
            return this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported).
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Group: advanced
         */
        default AdvancedVelocityEndpointBuilder synchronous(boolean synchronous) {
            setProperty("synchronous", synchronous);
            return this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported).
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Group: advanced
         */
        default AdvancedVelocityEndpointBuilder synchronous(String synchronous) {
            setProperty("synchronous", synchronous);
            return this;
        }
    }
    /**
     * Velocity (camel-velocity)
     * Transforms the message using a Velocity template.
     * 
     * Syntax: <code>velocity:resourceUri</code>
     * Category: transformation
     * Available as of version: 1.2
     * Maven coordinates: org.apache.camel:camel-velocity
     */
    default VelocityEndpointBuilder velocity(String path) {
        class VelocityEndpointBuilderImpl extends AbstractEndpointBuilder implements VelocityEndpointBuilder, AdvancedVelocityEndpointBuilder {
            public VelocityEndpointBuilderImpl(String path) {
                super("velocity", path);
            }
        }
        return new VelocityEndpointBuilderImpl(path);
    }
}