/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.cloud;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.model.cloud.ServiceCallExpressionConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ServiceCallExpressionConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, ExtendedPropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("Expression", org.apache.camel.Expression.class);
        map.put("ExpressionType", org.apache.camel.model.language.ExpressionDefinition.class);
        map.put("HostHeader", java.lang.String.class);
        map.put("Id", java.lang.String.class);
        map.put("PortHeader", java.lang.String.class);
        map.put("Properties", java.util.List.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.model.cloud.ServiceCallExpressionConfiguration target = (org.apache.camel.model.cloud.ServiceCallExpressionConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "expression":
        case "Expression": target.setExpression(property(camelContext, org.apache.camel.Expression.class, value)); return true;
        case "expressiontype":
        case "ExpressionType": target.setExpressionType(property(camelContext, org.apache.camel.model.language.ExpressionDefinition.class, value)); return true;
        case "hostheader":
        case "HostHeader": target.setHostHeader(property(camelContext, java.lang.String.class, value)); return true;
        case "id":
        case "Id": target.setId(property(camelContext, java.lang.String.class, value)); return true;
        case "portheader":
        case "PortHeader": target.setPortHeader(property(camelContext, java.lang.String.class, value)); return true;
        case "properties":
        case "Properties": target.setProperties(property(camelContext, java.util.List.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "expression":
        case "Expression": return org.apache.camel.Expression.class;
        case "expressiontype":
        case "ExpressionType": return org.apache.camel.model.language.ExpressionDefinition.class;
        case "hostheader":
        case "HostHeader": return java.lang.String.class;
        case "id":
        case "Id": return java.lang.String.class;
        case "portheader":
        case "PortHeader": return java.lang.String.class;
        case "properties":
        case "Properties": return java.util.List.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.model.cloud.ServiceCallExpressionConfiguration target = (org.apache.camel.model.cloud.ServiceCallExpressionConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "expression":
        case "Expression": return target.getExpression();
        case "expressiontype":
        case "ExpressionType": return target.getExpressionType();
        case "hostheader":
        case "HostHeader": return target.getHostHeader();
        case "id":
        case "Id": return target.getId();
        case "portheader":
        case "PortHeader": return target.getPortHeader();
        case "properties":
        case "Properties": return target.getProperties();
        default: return null;
        }
    }

    @Override
    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "properties":
        case "Properties": return org.apache.camel.model.PropertyDefinition.class;
        default: return null;
        }
    }
}

