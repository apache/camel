/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.model.cloud;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.model.cloud.KubernetesServiceCallServiceDiscoveryConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.GenerateConfigurerMojo")
@SuppressWarnings("unchecked")
public class KubernetesServiceCallServiceDiscoveryConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, ExtendedPropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("ApiVersion", java.lang.String.class);
        map.put("CaCertData", java.lang.String.class);
        map.put("CaCertFile", java.lang.String.class);
        map.put("ClientCertData", java.lang.String.class);
        map.put("ClientCertFile", java.lang.String.class);
        map.put("ClientKeyAlgo", java.lang.String.class);
        map.put("ClientKeyData", java.lang.String.class);
        map.put("ClientKeyFile", java.lang.String.class);
        map.put("ClientKeyPassphrase", java.lang.String.class);
        map.put("DnsDomain", java.lang.String.class);
        map.put("Id", java.lang.String.class);
        map.put("Lookup", java.lang.String.class);
        map.put("MasterUrl", java.lang.String.class);
        map.put("Namespace", java.lang.String.class);
        map.put("OauthToken", java.lang.String.class);
        map.put("Password", java.lang.String.class);
        map.put("PortName", java.lang.String.class);
        map.put("PortProtocol", java.lang.String.class);
        map.put("Properties", java.util.List.class);
        map.put("TrustCerts", java.lang.String.class);
        map.put("Username", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.model.cloud.KubernetesServiceCallServiceDiscoveryConfiguration target = (org.apache.camel.model.cloud.KubernetesServiceCallServiceDiscoveryConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": target.setApiVersion(property(camelContext, java.lang.String.class, value)); return true;
        case "cacertdata":
        case "caCertData": target.setCaCertData(property(camelContext, java.lang.String.class, value)); return true;
        case "cacertfile":
        case "caCertFile": target.setCaCertFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientcertdata":
        case "clientCertData": target.setClientCertData(property(camelContext, java.lang.String.class, value)); return true;
        case "clientcertfile":
        case "clientCertFile": target.setClientCertFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeyalgo":
        case "clientKeyAlgo": target.setClientKeyAlgo(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeydata":
        case "clientKeyData": target.setClientKeyData(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeyfile":
        case "clientKeyFile": target.setClientKeyFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeypassphrase":
        case "clientKeyPassphrase": target.setClientKeyPassphrase(property(camelContext, java.lang.String.class, value)); return true;
        case "dnsdomain":
        case "dnsDomain": target.setDnsDomain(property(camelContext, java.lang.String.class, value)); return true;
        case "id": target.setId(property(camelContext, java.lang.String.class, value)); return true;
        case "lookup": target.setLookup(property(camelContext, java.lang.String.class, value)); return true;
        case "masterurl":
        case "masterUrl": target.setMasterUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "namespace": target.setNamespace(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthtoken":
        case "oauthToken": target.setOauthToken(property(camelContext, java.lang.String.class, value)); return true;
        case "password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "portname":
        case "portName": target.setPortName(property(camelContext, java.lang.String.class, value)); return true;
        case "portprotocol":
        case "portProtocol": target.setPortProtocol(property(camelContext, java.lang.String.class, value)); return true;
        case "properties": target.setProperties(property(camelContext, java.util.List.class, value)); return true;
        case "trustcerts":
        case "trustCerts": target.setTrustCerts(property(camelContext, java.lang.String.class, value)); return true;
        case "username": target.setUsername(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": return java.lang.String.class;
        case "cacertdata":
        case "caCertData": return java.lang.String.class;
        case "cacertfile":
        case "caCertFile": return java.lang.String.class;
        case "clientcertdata":
        case "clientCertData": return java.lang.String.class;
        case "clientcertfile":
        case "clientCertFile": return java.lang.String.class;
        case "clientkeyalgo":
        case "clientKeyAlgo": return java.lang.String.class;
        case "clientkeydata":
        case "clientKeyData": return java.lang.String.class;
        case "clientkeyfile":
        case "clientKeyFile": return java.lang.String.class;
        case "clientkeypassphrase":
        case "clientKeyPassphrase": return java.lang.String.class;
        case "dnsdomain":
        case "dnsDomain": return java.lang.String.class;
        case "id": return java.lang.String.class;
        case "lookup": return java.lang.String.class;
        case "masterurl":
        case "masterUrl": return java.lang.String.class;
        case "namespace": return java.lang.String.class;
        case "oauthtoken":
        case "oauthToken": return java.lang.String.class;
        case "password": return java.lang.String.class;
        case "portname":
        case "portName": return java.lang.String.class;
        case "portprotocol":
        case "portProtocol": return java.lang.String.class;
        case "properties": return java.util.List.class;
        case "trustcerts":
        case "trustCerts": return java.lang.String.class;
        case "username": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.model.cloud.KubernetesServiceCallServiceDiscoveryConfiguration target = (org.apache.camel.model.cloud.KubernetesServiceCallServiceDiscoveryConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": return target.getApiVersion();
        case "cacertdata":
        case "caCertData": return target.getCaCertData();
        case "cacertfile":
        case "caCertFile": return target.getCaCertFile();
        case "clientcertdata":
        case "clientCertData": return target.getClientCertData();
        case "clientcertfile":
        case "clientCertFile": return target.getClientCertFile();
        case "clientkeyalgo":
        case "clientKeyAlgo": return target.getClientKeyAlgo();
        case "clientkeydata":
        case "clientKeyData": return target.getClientKeyData();
        case "clientkeyfile":
        case "clientKeyFile": return target.getClientKeyFile();
        case "clientkeypassphrase":
        case "clientKeyPassphrase": return target.getClientKeyPassphrase();
        case "dnsdomain":
        case "dnsDomain": return target.getDnsDomain();
        case "id": return target.getId();
        case "lookup": return target.getLookup();
        case "masterurl":
        case "masterUrl": return target.getMasterUrl();
        case "namespace": return target.getNamespace();
        case "oauthtoken":
        case "oauthToken": return target.getOauthToken();
        case "password": return target.getPassword();
        case "portname":
        case "portName": return target.getPortName();
        case "portprotocol":
        case "portProtocol": return target.getPortProtocol();
        case "properties": return target.getProperties();
        case "trustcerts":
        case "trustCerts": return target.getTrustCerts();
        case "username": return target.getUsername();
        default: return null;
        }
    }

    @Override
    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "properties": return org.apache.camel.model.PropertyDefinition.class;
        default: return null;
        }
    }
}

