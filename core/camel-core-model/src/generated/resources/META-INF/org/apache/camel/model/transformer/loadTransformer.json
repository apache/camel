{
  "model": {
    "kind": "model",
    "name": "loadTransformer",
    "title": "Load Transformer",
    "description": "To load custom transformers from classpath scanning to be used for route level transformations.",
    "deprecated": false,
    "label": "transformation",
    "javaType": "org.apache.camel.model.transformer.LoadTransformerDefinition",
    "abstract": false,
    "input": false,
    "output": false
  },
  "properties": {
    "packageScan": { "index": 0, "kind": "attribute", "displayName": "Package Scan", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set the classpath location to scan for annotated transformers." },
    "defaults": { "index": 1, "kind": "attribute", "displayName": "Defaults", "group": "common", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Enable loading of default transformers." },
    "scheme": { "index": 2, "kind": "attribute", "displayName": "Scheme", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set a scheme name supported by the transformer. If you specify 'csv', the transformer will be picked up for all of 'csv' from\/to Java transformation. Note that the scheme matching is performed only when no exactly matched transformer exists." },
    "name": { "index": 3, "kind": "attribute", "displayName": "Name", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set the transformer name under which the transformer gets referenced when specifying the input\/output data type on routes. If you specify a transformer name that matches a data type scheme like 'csv' the transformer will be picked up for all of 'csv:' from\/to Java transformation. Note that the scheme matching is performed only when no exactly matched transformer exists." },
    "fromType": { "index": 4, "kind": "attribute", "displayName": "From Type", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set the 'from' data type name. If you specify 'xml:XYZ', the transformer will be picked up if source type is 'xml:XYZ'. If you specify just 'xml', the transformer matches with all of 'xml' source type like 'xml:ABC' or 'xml:DEF'." },
    "toType": { "index": 5, "kind": "attribute", "displayName": "To Type", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Set the 'to' data type name. If you specify 'json:XYZ', the transformer will be picked up if destination type is 'json:XYZ'. If you specify just 'json', the transformer matches with all of 'json' destination type like 'json:ABC' or 'json:DEF'." }
  }
}
