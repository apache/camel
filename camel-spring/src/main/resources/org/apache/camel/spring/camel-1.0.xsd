<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  elementFormDefault="qualified" 
  attributeFormDefault="unqualified"
  targetNamespace="http://activemq.apache.org/camel/schema/camel-1.0.xsd" 
  xmlns:c="http://activemq.apache.org/camel/schema/camel-1.0.xsd"
  xmlns:s="http://www.springframework.org/schema/beans"
  >
 
  <xs:import namespace="http://www.springframework.org/schema/beans"/>

  <xs:element name="routeBuilder">
    <xs:complexType>
      <xs:complexContent>
          <xs:extension base="s:identifiedType">
		      <xs:sequence>
		        <xs:element maxOccurs="unbounded" ref="c:route"/>
		      </xs:sequence>
	      </xs:extension>
  	  </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="route">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:from"/>
        <xs:element minOccurs="0" ref="c:choice"/>
        <xs:choice minOccurs="0">
          <xs:element ref="c:filter"/>
          <xs:element ref="c:intercept"/>
        </xs:choice>
        <xs:choice minOccurs="0">
          <xs:element ref="c:to"/>
          <xs:element ref="c:processor"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="from">
    <xs:complexType>
      <xs:attribute name="uri" use="required" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="choice">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="c:when"/>
        <xs:element ref="c:otherwise"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="when">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="c:predicate">
          <xs:sequence>
            <xs:element ref="c:to"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="otherwise">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:to"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="filter" type="c:predicate"/>
  <xs:element name="intercept">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="s:bean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="processor">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="s:bean"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="predicate">
    <xs:sequence>
      <xs:element ref="c:predicate"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="predicate">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:header"/>
        <xs:element ref="c:equalTo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="header">
    <xs:complexType>
      <xs:attribute name="name" use="required" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="equalTo">
    <xs:complexType>
      <xs:attribute name="value" use="required" type="xs:NCName"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="to">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="c:uri"/>
      </xs:sequence>
      <xs:attribute name="uri" type="xs:NMTOKEN"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="uri" type="xs:NMTOKEN"/>
</xs:schema>
