/* Generated by camel build tools - do NOT edit this file! */
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.builder.endpoint.dsl;

import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import javax.annotation.processing.Generated;
import org.apache.camel.builder.EndpointConsumerBuilder;
import org.apache.camel.builder.EndpointProducerBuilder;
import org.apache.camel.builder.endpoint.AbstractEndpointBuilder;

/**
 * LangChain4j Web Search Engine
 * 
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface LangChain4jWebSearchEndpointBuilderFactory {

    /**
     * Builder for endpoint for the LangChain4j Web Search component.
     */
    public interface LangChain4jWebSearchEndpointBuilder
            extends
                EndpointProducerBuilder {
        default AdvancedLangChain4jWebSearchEndpointBuilder advanced() {
            return (AdvancedLangChain4jWebSearchEndpointBuilder) this;
        }

        /**
         * The additionalParams is the additional parameters for the search
         * request are a map of key-value pairs that represent additional
         * parameters for the search request.
         * 
         * The option is a: <code>java.util.Map&lt;java.lang.String,
         * java.lang.Object&gt;</code> type.
         * 
         * Group: producer
         * 
         * @param additionalParams the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder additionalParams(Map<java.lang.String, java.lang.Object> additionalParams) {
            doSetProperty("additionalParams", additionalParams);
            return this;
        }
        /**
         * The additionalParams is the additional parameters for the search
         * request are a map of key-value pairs that represent additional
         * parameters for the search request.
         * 
         * The option will be converted to a
         * <code>java.util.Map&lt;java.lang.String, java.lang.Object&gt;</code>
         * type.
         * 
         * Group: producer
         * 
         * @param additionalParams the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder additionalParams(String additionalParams) {
            doSetProperty("additionalParams", additionalParams);
            return this;
        }
        /**
         * The geoLocation is the desired geolocation for search results. Each
         * search engine may have a different set of supported geolocations.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         * 
         * @param geoLocation the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder geoLocation(String geoLocation) {
            doSetProperty("geoLocation", geoLocation);
            return this;
        }
        /**
         * The language is the desired language for search results. The expected
         * values may vary depending on the search engine.
         * 
         * The option is a: <code>java.lang.String</code> type.
         * 
         * Group: producer
         * 
         * @param language the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder language(String language) {
            doSetProperty("language", language);
            return this;
        }
        /**
         * The maxResults is the expected number of results to be found if the
         * search request were made. Each search engine may have a different
         * limit for the maximum number of results that can be returned.
         * 
         * The option is a: <code>java.lang.Integer</code> type.
         * 
         * Required: true
         * Default: 1
         * Group: producer
         * 
         * @param maxResults the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder maxResults(Integer maxResults) {
            doSetProperty("maxResults", maxResults);
            return this;
        }
        /**
         * The maxResults is the expected number of results to be found if the
         * search request were made. Each search engine may have a different
         * limit for the maximum number of results that can be returned.
         * 
         * The option will be converted to a <code>java.lang.Integer</code>
         * type.
         * 
         * Required: true
         * Default: 1
         * Group: producer
         * 
         * @param maxResults the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder maxResults(String maxResults) {
            doSetProperty("maxResults", maxResults);
            return this;
        }
        /**
         * The resultType is the result type of the request. Valid values are
         * LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT, CONTENT, or SNIPPET. CONTENT
         * is the default value; it will return a list of String . You can also
         * specify to return either the Langchain4j Web Search Organic Result
         * object (using LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT) or snippet
         * (using SNIPPET) for each result. If maxResults is equal to 1, the
         * response will be a single object instead of a list.
         * 
         * The option is a:
         * <code>org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchResultType</code> type.
         * 
         * Required: true
         * Default: CONTENT
         * Group: producer
         * 
         * @param resultType the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder resultType(org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchResultType resultType) {
            doSetProperty("resultType", resultType);
            return this;
        }
        /**
         * The resultType is the result type of the request. Valid values are
         * LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT, CONTENT, or SNIPPET. CONTENT
         * is the default value; it will return a list of String . You can also
         * specify to return either the Langchain4j Web Search Organic Result
         * object (using LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT) or snippet
         * (using SNIPPET) for each result. If maxResults is equal to 1, the
         * response will be a single object instead of a list.
         * 
         * The option will be converted to a
         * <code>org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchResultType</code> type.
         * 
         * Required: true
         * Default: CONTENT
         * Group: producer
         * 
         * @param resultType the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder resultType(String resultType) {
            doSetProperty("resultType", resultType);
            return this;
        }
        /**
         * The safeSearch is the safe search flag, indicating whether to enable
         * or disable safe search.
         * 
         * The option is a: <code>java.lang.Boolean</code> type.
         * 
         * Group: producer
         * 
         * @param safeSearch the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder safeSearch(Boolean safeSearch) {
            doSetProperty("safeSearch", safeSearch);
            return this;
        }
        /**
         * The safeSearch is the safe search flag, indicating whether to enable
         * or disable safe search.
         * 
         * The option will be converted to a <code>java.lang.Boolean</code>
         * type.
         * 
         * Group: producer
         * 
         * @param safeSearch the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder safeSearch(String safeSearch) {
            doSetProperty("safeSearch", safeSearch);
            return this;
        }
        /**
         * The startIndex is the start index for search results, which may vary
         * depending on the search engine.
         * 
         * The option is a: <code>java.lang.Integer</code> type.
         * 
         * Group: producer
         * 
         * @param startIndex the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder startIndex(Integer startIndex) {
            doSetProperty("startIndex", startIndex);
            return this;
        }
        /**
         * The startIndex is the start index for search results, which may vary
         * depending on the search engine.
         * 
         * The option will be converted to a <code>java.lang.Integer</code>
         * type.
         * 
         * Group: producer
         * 
         * @param startIndex the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder startIndex(String startIndex) {
            doSetProperty("startIndex", startIndex);
            return this;
        }
        /**
         * The startPage is the start page number for search results.
         * 
         * The option is a: <code>java.lang.Integer</code> type.
         * 
         * Group: producer
         * 
         * @param startPage the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder startPage(Integer startPage) {
            doSetProperty("startPage", startPage);
            return this;
        }
        /**
         * The startPage is the start page number for search results.
         * 
         * The option will be converted to a <code>java.lang.Integer</code>
         * type.
         * 
         * Group: producer
         * 
         * @param startPage the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder startPage(String startPage) {
            doSetProperty("startPage", startPage);
            return this;
        }
        /**
         * The WebSearchEngine engine to use. This is mandatory. Use one of the
         * implementations from Langchain4j web search engines.
         * 
         * The option is a:
         * <code>dev.langchain4j.web.search.WebSearchEngine</code> type.
         * 
         * Required: true
         * Group: producer
         * 
         * @param webSearchEngine the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder webSearchEngine(dev.langchain4j.web.search.WebSearchEngine webSearchEngine) {
            doSetProperty("webSearchEngine", webSearchEngine);
            return this;
        }
        /**
         * The WebSearchEngine engine to use. This is mandatory. Use one of the
         * implementations from Langchain4j web search engines.
         * 
         * The option will be converted to a
         * <code>dev.langchain4j.web.search.WebSearchEngine</code> type.
         * 
         * Required: true
         * Group: producer
         * 
         * @param webSearchEngine the value to set
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder webSearchEngine(String webSearchEngine) {
            doSetProperty("webSearchEngine", webSearchEngine);
            return this;
        }
    }

    /**
     * Advanced builder for endpoint for the LangChain4j Web Search component.
     */
    public interface AdvancedLangChain4jWebSearchEndpointBuilder
            extends
                EndpointProducerBuilder {
        default LangChain4jWebSearchEndpointBuilder basic() {
            return (LangChain4jWebSearchEndpointBuilder) this;
        }

        /**
         * Whether the producer should be started lazy (on the first message).
         * By starting lazy you can use this to allow CamelContext and routes to
         * startup in situations where a producer may otherwise fail during
         * starting and cause the route to fail being started. By deferring this
         * startup to be lazy then the startup failure can be handled during
         * routing messages via Camel's routing error handlers. Beware that when
         * the first message is processed then creating and starting the
         * producer may take a little time and prolong the total processing time
         * of the processing.
         * 
         * The option is a: <code>boolean</code> type.
         * 
         * Default: false
         * Group: producer (advanced)
         * 
         * @param lazyStartProducer the value to set
         * @return the dsl builder
         */
        default AdvancedLangChain4jWebSearchEndpointBuilder lazyStartProducer(boolean lazyStartProducer) {
            doSetProperty("lazyStartProducer", lazyStartProducer);
            return this;
        }
        /**
         * Whether the producer should be started lazy (on the first message).
         * By starting lazy you can use this to allow CamelContext and routes to
         * startup in situations where a producer may otherwise fail during
         * starting and cause the route to fail being started. By deferring this
         * startup to be lazy then the startup failure can be handled during
         * routing messages via Camel's routing error handlers. Beware that when
         * the first message is processed then creating and starting the
         * producer may take a little time and prolong the total processing time
         * of the processing.
         * 
         * The option will be converted to a <code>boolean</code> type.
         * 
         * Default: false
         * Group: producer (advanced)
         * 
         * @param lazyStartProducer the value to set
         * @return the dsl builder
         */
        default AdvancedLangChain4jWebSearchEndpointBuilder lazyStartProducer(String lazyStartProducer) {
            doSetProperty("lazyStartProducer", lazyStartProducer);
            return this;
        }
        /**
         * The webSearchRequest is the custom WebSearchRequest - advanced.
         * 
         * The option is a:
         * <code>dev.langchain4j.web.search.WebSearchRequest</code> type.
         * 
         * Group: advanced
         * 
         * @param webSearchRequest the value to set
         * @return the dsl builder
         */
        default AdvancedLangChain4jWebSearchEndpointBuilder webSearchRequest(dev.langchain4j.web.search.WebSearchRequest webSearchRequest) {
            doSetProperty("webSearchRequest", webSearchRequest);
            return this;
        }
        /**
         * The webSearchRequest is the custom WebSearchRequest - advanced.
         * 
         * The option will be converted to a
         * <code>dev.langchain4j.web.search.WebSearchRequest</code> type.
         * 
         * Group: advanced
         * 
         * @param webSearchRequest the value to set
         * @return the dsl builder
         */
        default AdvancedLangChain4jWebSearchEndpointBuilder webSearchRequest(String webSearchRequest) {
            doSetProperty("webSearchRequest", webSearchRequest);
            return this;
        }
    }

    public interface LangChain4jWebSearchBuilders {
        /**
         * LangChain4j Web Search (camel-langchain4j-web-search)
         * LangChain4j Web Search Engine
         * 
         * Category: ai
         * Since: 4.8
         * Maven coordinates: org.apache.camel:camel-langchain4j-web-search
         * 
         * Syntax: <code>langchain4j-web-search:searchId</code>
         * 
         * Path parameter: searchId (required)
         * The id
         * 
         * @param path searchId
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder langchain4jWebSearch(String path) {
            return LangChain4jWebSearchEndpointBuilderFactory.endpointBuilder("langchain4j-web-search", path);
        }
        /**
         * LangChain4j Web Search (camel-langchain4j-web-search)
         * LangChain4j Web Search Engine
         * 
         * Category: ai
         * Since: 4.8
         * Maven coordinates: org.apache.camel:camel-langchain4j-web-search
         * 
         * Syntax: <code>langchain4j-web-search:searchId</code>
         * 
         * Path parameter: searchId (required)
         * The id
         * 
         * @param componentName to use a custom component name for the endpoint
         * instead of the default name
         * @param path searchId
         * @return the dsl builder
         */
        default LangChain4jWebSearchEndpointBuilder langchain4jWebSearch(String componentName, String path) {
            return LangChain4jWebSearchEndpointBuilderFactory.endpointBuilder(componentName, path);
        }

    }
    static LangChain4jWebSearchEndpointBuilder endpointBuilder(String componentName, String path) {
        class LangChain4jWebSearchEndpointBuilderImpl extends AbstractEndpointBuilder implements LangChain4jWebSearchEndpointBuilder, AdvancedLangChain4jWebSearchEndpointBuilder {
            public LangChain4jWebSearchEndpointBuilderImpl(String path) {
                super(componentName, path);
            }
        }
        return new LangChain4jWebSearchEndpointBuilderImpl(path);
    }
}