#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- rest:
    path: "/api/v3"
    put:
      - consumes: "application/json,application/xml"
        id: "updatePet"
        path: "/pet"
        param:
          - name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:updatePet"
      - consumes: "*/*"
        id: "updateUser"
        path: "/user/{username}"
        param:
          - dataType: "string"
            name: "username"
            required: true
            type: "path"
          - name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:updateUser"
    post:
      - consumes: "application/json,application/xml"
        id: "addPet"
        path: "/pet"
        param:
          - dataType: "boolean"
            defaultValue: "false"
            description: "Verbose data"
            name: "verbose"
            required: false
            type: "query"
          - description: "Pet object that needs to be added to the store"
            name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:addPet"
      - consumes: "application/x-www-form-urlencoded"
        id: "updatePetWithForm"
        path: "/pet/{petId}"
        param:
          - dataType: "integer"
            description: "ID of pet that needs to be updated"
            name: "petId"
            required: true
            type: "path"
          - dataType: "string"
            description: "Updated name of the pet"
            name: "name"
            required: true
            type: "formData"
          - dataType: "string"
            description: "Updated status of the pet"
            name: "status"
            required: true
            type: "formData"
        to:
          uri: "direct:updatePetWithForm"
      - consumes: "multipart/form-data"
        id: "uploadFile"
        produces: "application/json"
        path: "/pet/{petId}/uploadImage"
        param:
          - dataType: "integer"
            description: "ID of pet to update"
            name: "petId"
            required: true
            type: "path"
          - dataType: "string"
            description: "Additional data to pass to server"
            name: "additionalMetadata"
            required: true
            type: "formData"
          - dataType: "string"
            description: "file to upload"
            name: "file"
            required: true
            type: "formData"
        to:
          uri: "direct:uploadFile"
      - consumes: "*/*"
        id: "placeOrder"
        produces: "application/xml,application/json"
        path: "/store/order"
        param:
          - description: "order placed for purchasing the pet"
            name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:placeOrder"
      - consumes: "*/*"
        id: "createUser"
        path: "/user"
        description: "This can only be done by the logged in user."
        param:
          - description: "Created user object"
            name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:createUser"
      - consumes: "*/*"
        id: "createUsersWithArrayInput"
        path: "/user/createWithArray"
        param:
          - description: "List of user object"
            name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:createUsersWithArrayInput"
      - consumes: "*/*"
        id: "createUsersWithListInput"
        path: "/user/createWithList"
        param:
          - description: "List of user object"
            name: "body"
            required: true
            type: "body"
        to:
          uri: "direct:createUsersWithListInput"
    get:
      - id: "findPetsByStatus"
        produces: "application/xml,application/json"
        path: "/pet/findByStatus"
        description: "Multiple status values can be provided with comma separated strings"
        param:
          - arrayType: "string"
            collectionFormat: "multi"
            dataType: "array"
            description: "Status values that need to be considered for filter"
            name: "status"
            required: true
            type: "query"
        to:
          uri: "direct:findPetsByStatus"
      - id: "findPetsByTags"
        produces: "application/xml,application/json"
        path: "/pet/findByTags"
        description: "Muliple tags can be provided with comma separated strings. Use\
        \ tag1, tag2, tag3 for testing."
        param:
          - arrayType: "string"
            collectionFormat: "multi"
            dataType: "array"
            description: "Tags to filter by"
            name: "tags"
            required: true
            type: "query"
        to:
          uri: "direct:findPetsByTags"
      - id: "getPetById"
        produces: "application/xml,application/json"
        path: "/pet/{petId}"
        description: "Returns a single pet"
        param:
          - dataType: "integer"
            description: "ID of pet to return"
            name: "petId"
            required: true
            type: "path"
        to:
          uri: "direct:getPetById"
      - id: "getInventory"
        produces: "application/json"
        path: "/store/inventory"
        description: "Returns a map of status codes to quantities"
        to:
          uri: "direct:getInventory"
      - id: "getOrderById"
        produces: "application/xml,application/json"
        path: "/store/order/{orderId}"
        description: "For valid response try integer IDs with value >= 1 and <= 10.\
        \ Other values will generated exceptions"
        param:
          - dataType: "integer"
            description: "ID of pet that needs to be fetched"
            name: "orderId"
            required: true
            type: "path"
        to:
          uri: "direct:getOrderById"
      - id: "loginUser"
        produces: "application/xml,application/json"
        path: "/user/login"
        param:
          - dataType: "string"
            description: "The user name for login"
            name: "username"
            required: true
            type: "query"
          - dataType: "string"
            description: "The password for login in clear text"
            name: "password"
            required: true
            type: "query"
        to:
          uri: "direct:loginUser"
      - id: "logoutUser"
        path: "/user/logout"
        to:
          uri: "direct:logoutUser"
      - id: "getUserByName"
        produces: "application/xml,application/json"
        path: "/user/{username}"
        param:
          - dataType: "string"
            description: "The name that needs to be fetched. Use user1 for testing. "
            name: "username"
            required: true
            type: "path"
        to:
          uri: "direct:getUserByName"
    delete:
      - id: "deletePet"
        path: "/pet/{petId}"
        param:
          - dataType: "string"
            name: "api_key"
            required: false
            type: "header"
          - dataType: "integer"
            description: "Pet id to delete"
            name: "petId"
            required: true
            type: "path"
        to:
          uri: "direct:deletePet"
      - id: "deleteOrder"
        path: "/store/order/{orderId}"
        description: "For valid response try integer IDs with positive integer value.\
        \ Negative or non-integer values will generate API errors"
        param:
          - dataType: "integer"
            description: "ID of the order that needs to be deleted"
            name: "orderId"
            required: true
            type: "path"
        to:
          uri: "direct:deleteOrder"
      - id: "deleteUser"
        path: "/user/{username}"
        description: "This can only be done by the logged in user."
        param:
          - dataType: "string"
            description: "The name that needs to be deleted"
            name: "username"
            required: true
            type: "path"
        to:
          uri: "direct:deleteUser"