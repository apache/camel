<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:broker="http://activemq.apache.org/schema/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
           http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <!-- jdbc idempotent repository, per default creates the table CAMEL_MESSAGEPROCESSED if not already existing -->
    <bean id="messageIdRepository" class="org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository">
        <constructor-arg index="0" ref="myNonXADataSource"/>
        <constructor-arg index="1" value="myProcessor"/>
    </bean>

    <!-- use required TX -->
    <bean id="requiredTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="jmsTransactionManager2"/>
    </bean>
    <bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionTemplate" ref="requiredTemplate"/>
    </bean>

    <!-- this is the Spring JmsTransactionManager which under the hood uses Atomikos -->
    <bean id="jmsTransactionManager2"
          class="org.springframework.jms.connection.JmsTransactionManager" depends-on="my-broker2">
        <property name="connectionFactory" ref="jmsConnectionFactory2"/>
    </bean>

    <!-- Is the ConnectionFactory to connect to the JMS broker -->
    <bean id="jmsConnectionFactory2" class="org.apache.activemq.ActiveMQConnectionFactory" depends-on="my-broker2">
        <property name="brokerURL" value="tcp://localhost:${ITestSupport.port3}"/>
    </bean>

    <!-- define the activemq Camel component so we can integrate with the AMQ broker below -->
    <bean id="activemq2" class="org.apache.activemq.camel.component.ActiveMQComponent" depends-on="my-broker2">
        <!-- must indicate that we use transacted acknowledge mode -->
        <property name="transacted" value="true"/>
        <!-- refer to the transaction manager -->
        <property name="transactionManager" ref="jmsTransactionManager2"/>
    </bean>

    <!-- setup a local JMS Broker for testing purpose -->
    <broker:broker id="my-broker2" useJmx="false" persistent="false" brokerName="localhost">
        <broker:transportConnectors>
            <broker:transportConnector uri="tcp://localhost:${ITestSupport.port3}"/>
        </broker:transportConnectors>
    </broker:broker>

    <!-- datasource used to create the database tables -->
    <jdbc:embedded-database id="myNonXADataSource" type="DERBY"/>
</beans>