<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2006 The Apache Software Foundation.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd"
           default-activation="lazy">

    <ext:property-placeholder id="external" placeholder-prefix="$[" placeholder-suffix="]"/>

    <bean id="hdfsOsgiHelper" class="org.apache.camel.component.hdfs2.HdfsOsgiHelper">
        <description>
        Bean created as prerequisite for camel-hdfs2 component. It's role is to properly initialize Hadoop's internal
        map of file systems which is normally (non-OSGi) initialized using java.util.ServiceLoader.
        In OSGi ServiceLoader doesn't see *all* JARs to scan for services.
        The map must be initialized with correct URIs - not pure schemes + "://", as the URI is then used to
        initialize particular hadoop filesystem initialization which needs more URI components than just scheme.
        </description>
        <argument>
            <map>
                <entry key="file:///" value="org.apache.hadoop.fs.LocalFileSystem"  />
                <entry key="hdfs://localhost:9000" value="org.apache.hadoop.hdfs.DistributedFileSystem" />
            </map>
        </argument>
    </bean>

    <bean id="hdfs2" class="org.apache.camel.component.hdfs2.HdfsComponent" depends-on="hdfsOsgiHelper" />

    <camelContext xmlns="http://camel.apache.org/schema/blueprint" xsi:schemaLocation="http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint-2.12.2.xsd">
        <!-- using Camel properties component and refer to the blueprint property placeholder by its id -->
        <propertyPlaceholder id="properties" location="blueprint:external"
                             prefixToken="[[" suffixToken="]]"
                             />
        <route>
            <from uri="direct:start"/>
<!--             <to uri="hdfs2://localhost:9000/hdfs/test-camel?fileSystemType=HDFS&amp;splitStrategy=BYTES:5,IDLE:1000"/> -->
            <to uri="hdfs2://[[karaf.base]]/hdfs/test-camel?fileSystemType=LOCAL&amp;splitStrategy=BYTES:5,IDLE:1000"/>
        </route>
        <route>
<!--             <from uri="hdfs2://localhost:9000/hdfs/test-camel?pattern=*&amp;initialDelay=2000&amp;fileSystemType=HDFS&amp;chunkSize=5"/> -->
            <from uri="hdfs2://[[karaf.base]]/hdfs/test-camel?pattern=*&amp;initialDelay=2000&amp;fileSystemType=LOCAL&amp;chunkSize=5"/>
            <to uri="mock:result"/>
        </route>
    </camelContext>

</blueprint>
