<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
                http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <property-placeholder persistent-id="MllpTcpClientProducer" update-strategy="reload" xmlns="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0" >
        <default-properties>
            <property name="mllp.port" value="17777" />
        </default-properties>
    </property-placeholder>


    <errorHandler id="DefaultErrorHandler" type="DefaultErrorHandler" xmlns="http://camel.apache.org/schema/blueprint">
        <redeliveryPolicy allowRedeliveryWhileStopping="false"/>
    </errorHandler>

    <camelContext id="mllp-tcp-client-producer-test" xmlns="http://camel.apache.org/schema/blueprint"
                        useMDCLogging="true" trace="false"
                        >

        <onException>
            <exception>java.net.ConnectException</exception>
            <redeliveryPolicy
                    allowRedeliveryWhileStopping="false"
                    redeliveryDelay="500"
                    maximumRedeliveryDelay="30000"
                    backOffMultiplier="2"
                    useExponentialBackOff="true"
                    maximumRedeliveries="-1"
                    logRetryAttempted="true"
                    retryAttemptedLogLevel="WARN"
            />
        </onException>

        <onException>
            <exception>org.apache.camel.component.mllp.MllpCorruptFrameException</exception>
            <redeliveryPolicy logHandled="true"/>
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="mock://frame-ex"/>
        </onException>

        <onException>
            <exception>org.apache.camel.component.mllp.MllpTimeoutException</exception>
            <redeliveryPolicy logHandled="true"/>
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="mock://timeout-ex"/>
        </onException>

        <onException>
            <exception>org.apache.camel.component.mllp.MllpApplicationErrorAcknowledgementException</exception>
            <redeliveryPolicy logHandled="true" logRetryAttempted="true" retryAttemptedLogLevel="WARN" logExhausted="true" retriesExhaustedLogLevel="ERROR"
                    allowRedeliveryWhileStopping="false"
                    maximumRedeliveries="10"
                    redeliveryDelay="1000"
                    useExponentialBackOff="true"
                    maximumRedeliveryDelay="15000"
            />
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="mock://ae-ack" />
        </onException>

        <onException>
            <exception>org.apache.camel.component.mllp.MllpApplicationRejectAcknowledgementException</exception>
            <redeliveryPolicy logHandled="true" />
            <handled>
                <constant>true</constant>
            </handled>
            <to uri="mock://ar-ack" />
        </onException>

        <route id="direct-to-mllp">
            <from uri="direct://source"/>
            <log loggingLevel="DEBUG" message="sending message: $simple{header[CamelMllpMessageControlId]}" />
            <to uri="mllp://{{mllp.port}}"/>
            <to uri="mock://acknowledged"/>
            <log loggingLevel="DEBUG" message="message sent: $simple{header[CamelMllpMessageControlId]}" />
            <to uri="log:direct-to-mllp?level=INFO&amp;groupSize=50" />
        </route>
    </camelContext>

</blueprint>
