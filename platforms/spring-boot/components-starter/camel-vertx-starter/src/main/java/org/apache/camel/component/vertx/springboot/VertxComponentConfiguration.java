/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.component.vertx.springboot;

import javax.annotation.Generated;
import org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon;
import org.springframework.boot.context.properties.ConfigurationProperties;

/**
 * The vertx component is used for sending and receive messages from a vertx
 * event bus.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.SpringBootAutoConfigurationMojo")
@ConfigurationProperties(prefix = "camel.component.vertx")
public class VertxComponentConfiguration
        extends
            ComponentConfigurationPropertiesCommon {

    /**
     * Whether to enable auto configuration of the vertx component. This is
     * enabled by default.
     */
    private Boolean enabled;
    /**
     * To use a custom VertxFactory implementation. The option is a
     * io.vertx.core.spi.VertxFactory type.
     */
    private String vertxFactory;
    /**
     * Hostname for creating an embedded clustered EventBus
     */
    private String host;
    /**
     * Port for creating an embedded clustered EventBus
     */
    private Integer port;
    /**
     * Options to use for creating vertx. The option is a
     * io.vertx.core.VertxOptions type.
     */
    private String vertxOptions;
    /**
     * To use the given vertx EventBus instead of creating a new embedded
     * EventBus. The option is a io.vertx.core.Vertx type.
     */
    private String vertx;
    /**
     * Timeout in seconds to wait for clustered Vertx EventBus to be ready. The
     * default value is 60.
     */
    private Integer timeout = 60;
    /**
     * Whether the component should resolve property placeholders on itself when
     * starting. Only properties which are of String type can use property
     * placeholders.
     */
    private Boolean resolvePropertyPlaceholders = true;

    public String getVertxFactory() {
        return vertxFactory;
    }

    public void setVertxFactory(String vertxFactory) {
        this.vertxFactory = vertxFactory;
    }

    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }

    public Integer getPort() {
        return port;
    }

    public void setPort(Integer port) {
        this.port = port;
    }

    public String getVertxOptions() {
        return vertxOptions;
    }

    public void setVertxOptions(String vertxOptions) {
        this.vertxOptions = vertxOptions;
    }

    public String getVertx() {
        return vertx;
    }

    public void setVertx(String vertx) {
        this.vertx = vertx;
    }

    public Integer getTimeout() {
        return timeout;
    }

    public void setTimeout(Integer timeout) {
        this.timeout = timeout;
    }

    public Boolean getResolvePropertyPlaceholders() {
        return resolvePropertyPlaceholders;
    }

    public void setResolvePropertyPlaceholders(
            Boolean resolvePropertyPlaceholders) {
        this.resolvePropertyPlaceholders = resolvePropertyPlaceholders;
    }
}