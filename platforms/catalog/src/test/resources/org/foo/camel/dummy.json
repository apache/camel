{
  "component": {
    "kind": "component",
    "scheme": "dummy",
    "syntax": "dummy:loggerName",
    "title": "Dummy",
    "description": "The dummy component logs message exchanges to the underlying logging mechanism.",
    "label": "core,monitoring",
    "producerOnly": true,
    "consumerOnly": false,
    "javaType": "org.foo.camel.DummyComponent",
    "groupId": "org.foo.camel",
    "artifactId": "dummy",
    "version": "1.0"
  },
  "componentProperties": {
    "exchangeFormatter": { "kind": "property", "displayName": "Exchange Formatter", "type": "object", "javaType": "org.apache.camel.spi.ExchangeFormatter", "deprecated": false, "description": "Sets a custom ExchangeFormatter to convert the Exchange to a String suitable for logging. If not specified we default to DefaultExchangeFormatter." }
  },
  "properties": {
    "loggerName": { "kind": "path", "displayName": "Logger Name", "group": "producer", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "description": "The logger name to use" },
    "amount": { "kind": "parameter", "displayName": "Amount", "group": "producer", "type": "integer", "javaType": "int", "deprecated": false, "secret": false, "defaultValue": 1, "description": "Number of drinks in the order" },
    "groupActiveOnly": { "kind": "parameter", "displayName": "Group Active Only", "group": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "defaultValue": true, "description": "If true will hide stats when no new messages have been received for a time interval if false show stats regardless of message traffic." },
    "groupDelay": { "kind": "parameter", "displayName": "Group Delay", "group": "producer", "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "description": "Set the initial delay for stats (in millis)" },
    "groupInterval": { "kind": "parameter", "displayName": "Group Interval", "group": "producer", "type": "integer", "javaType": "java.lang.Long", "deprecated": false, "description": "If specified will group message stats by this time interval (in millis)" },
    "groupSize": { "kind": "parameter", "displayName": "Group Size", "group": "producer", "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "description": "An integer that specifies a group size for throughput logging." },
    "level": { "kind": "parameter", "displayName": "Level", "group": "producer", "type": "string", "javaType": "java.lang.String", "enum": [ "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "OFF" ], "deprecated": false, "defaultValue": "INFO", "description": "Logging level to use. The default value is INFO." },
    "marker": { "kind": "parameter", "displayName": "Marker", "group": "producer", "type": "string", "javaType": "java.lang.String", "deprecated": false, "description": "An optional Marker name to use." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "advanced", "label": "advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": false, "defaultValue": "InOnly", "description": "Sets the default exchange pattern when creating an exchange." },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." },
    "kerberosRenewJitter": { "kind": "parameter", "displayName": "Kerberos Renew Jitter", "group": "security", "label": "common,security", "type": "number", "javaType": "java.lang.Double", "deprecated": false, "secret": false, "defaultValue": 0.05, "description": "Percentage of random jitter added to the renewal time." },
    "maxChars": { "kind": "parameter", "displayName": "Max Chars", "group": "formatting", "label": "formatting", "type": "integer", "javaType": "int", "deprecated": false, "defaultValue": 10000, "description": "Limits the number of characters logged per line." },
    "multiline": { "kind": "parameter", "displayName": "Multiline", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "If enabled then each information is outputted on a newline." },
    "repeatCount": { "kind": "parameter", "displayName": "Repeat Count", "group": "consumer", "type": "integer", "javaType": "long", "deprecated": false, "secret": false, "defaultValue": 0, "description": "Specifies a maximum limit of number of fires. So if you set it to 1 the timer will only fire once. If you set it to 5 it will only fire five times. A value of zero or negative means fire forever." },
    "showAll": { "kind": "parameter", "displayName": "Show All", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Quick option for turning all options on. (multiline maxChars has to be manually set if to be used)" },
    "showBody": { "kind": "parameter", "displayName": "Show Body", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": true, "description": "Show the message body." },
    "showBodyType": { "kind": "parameter", "displayName": "Show Body Type", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": true, "description": "Show the body Java type." },
    "showCaughtException": { "kind": "parameter", "displayName": "Show Caught Exception", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "f the exchange has a caught exception show the exception message (no stack trace). A caught exception is stored as a property on the exchange (using the key link org.apache.camel.ExchangeEXCEPTION_CAUGHT and for instance a doCatch can catch exceptions." },
    "showException": { "kind": "parameter", "displayName": "Show Exception", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "If the exchange has an exception show the exception message (no stacktrace)" },
    "showExchangeId": { "kind": "parameter", "displayName": "Show Exchange Id", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Show the unique exchange ID." },
    "showExchangePattern": { "kind": "parameter", "displayName": "Show Exchange Pattern", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": true, "description": "Shows the Message Exchange Pattern (or MEP for short)." },
    "showFiles": { "kind": "parameter", "displayName": "Show Files", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "If enabled Camel will output files" },
    "showFuture": { "kind": "parameter", "displayName": "Show Future", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "If enabled Camel will on Future objects wait for it to complete to obtain the payload to be logged." },
    "showHeaders": { "kind": "parameter", "displayName": "Show Headers", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Show the message headers." },
    "showOut": { "kind": "parameter", "displayName": "Show Out", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "If the exchange has an out message show the out message." },
    "showProperties": { "kind": "parameter", "displayName": "Show Properties", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Show the exchange properties." },
    "showStackTrace": { "kind": "parameter", "displayName": "Show Stack Trace", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Show the stack trace if an exchange has an exception. Only effective if one of showAll showException or showCaughtException are enabled." },
    "showStreams": { "kind": "parameter", "displayName": "Show Streams", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": false, "description": "Whether Camel should show stream bodies or not (eg such as java.io.InputStream). Beware if you enable this option then you may not be able later to access the message body as the stream have already been read by this logger. To remedy this you will have to use Stream Caching." },
    "skipBodyLineSeparator": { "kind": "parameter", "displayName": "Show Body Line Separator", "group": "formatting", "label": "formatting", "type": "boolean", "javaType": "boolean", "deprecated": false, "defaultValue": true, "description": "Whether to skip line separators when logging the message body. This allows to log the message body in one line setting this option to false will preserve any line separators from the body which then will log the body as is." },
    "fontSize": { "kind": "parameter", "displayName": "Font Size", "group": "producer", "type": "number", "javaType": "float", "deprecated": false, "secret": false, "defaultValue": 14, "description": "Font size in pixels" },
    "style": { "kind": "parameter", "displayName": "Style", "group": "formatting", "label": "formatting", "type": "string", "javaType": "org.apache.camel.processor.DefaultExchangeFormatter.OutputStyle", "enum": [ "Default", "Tab", "Fixed" ], "deprecated": false, "defaultValue": "Default", "description": "Sets the outputs style to use." }
  }
}

