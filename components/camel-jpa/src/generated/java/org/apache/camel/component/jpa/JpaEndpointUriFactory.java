/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.jpa;

import java.net.URISyntaxException;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.camel.spi.EndpointUriFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class JpaEndpointUriFactory extends org.apache.camel.support.component.EndpointUriFactorySupport implements EndpointUriFactory {

    private static final String BASE = ":entityType";

    private static final Set<String> PROPERTY_NAMES = Set.of(
            "backoffErrorThreshold", "backoffIdleThreshold", "backoffMultiplier", "bridgeErrorHandler", "consumeDelete",
            "consumeLockEntity", "delay", "deleteHandler", "entityManagerProperties", "entityType", "exceptionHandler",
            "exchangePattern", "findEntity", "flushOnSend", "greedy", "initialDelay", "joinTransaction",
            "lazyStartProducer", "lockModeType", "maxMessagesPerPoll", "maximumResults", "namedQuery", "nativeQuery",
            "parameters", "persistenceUnit", "pollStrategy", "preDeleteHandler", "query", "remove", "repeatCount",
            "resultClass", "runLoggingLevel", "scheduledExecutorService", "scheduler", "schedulerProperties",
            "sendEmptyMessageWhenIdle", "sharedEntityManager", "skipLockedEntity", "startScheduler", "timeUnit",
            "transacted", "useExecuteUpdate", "useFixedDelay", "usePassedInEntityManager", "usePersist");
    private static final Set<String> SECRET_PROPERTY_NAMES = Set.of();
    private static final Set<String> MULTI_VALUE_PREFIXES = Set.of(
            "emf.", "parameters.", "scheduler.");

    @Override
    public boolean isEnabled(String scheme) {
        return "jpa".equals(scheme);
    }

    @Override
    public String buildUri(String scheme, Map<String, Object> properties, boolean encode) throws URISyntaxException {
        String syntax = scheme + BASE;
        String uri = syntax;

        Map<String, Object> copy = new HashMap<>(properties);

        uri = buildPathParameter(syntax, uri, "entityType", null, true, copy);
        uri = buildQueryParameters(uri, copy, encode);
        return uri;
    }

    @Override
    public Set<String> propertyNames() {
        return PROPERTY_NAMES;
    }

    @Override
    public Set<String> secretPropertyNames() {
        return SECRET_PROPERTY_NAMES;
    }

    @Override
    public Set<String> multiValuePrefixes() {
        return MULTI_VALUE_PREFIXES;
    }

    @Override
    public boolean isLenientProperties() {
        return false;
    }
}

