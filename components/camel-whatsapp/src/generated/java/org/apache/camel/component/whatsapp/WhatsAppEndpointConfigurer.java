/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.whatsapp;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class WhatsAppEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        WhatsAppEndpoint target = (WhatsAppEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": target.getConfiguration().setApiVersion(property(camelContext, java.lang.String.class, value)); return true;
        case "authorizationtoken":
        case "authorizationToken": target.getConfiguration().setAuthorizationToken(property(camelContext, java.lang.String.class, value)); return true;
        case "baseuri":
        case "baseUri": target.getConfiguration().setBaseUri(property(camelContext, java.lang.String.class, value)); return true;
        case "httpclient":
        case "httpClient": target.setHttpClient(property(camelContext, java.net.http.HttpClient.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "webhookpath":
        case "webhookPath": target.getConfiguration().setWebhookPath(property(camelContext, java.lang.String.class, value)); return true;
        case "webhookverifytoken":
        case "webhookVerifyToken": target.getConfiguration().setWebhookVerifyToken(property(camelContext, java.lang.String.class, value)); return true;
        case "whatsappservice":
        case "whatsappService": target.setWhatsappService(property(camelContext, org.apache.camel.component.whatsapp.WhatsAppService.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": return java.lang.String.class;
        case "authorizationtoken":
        case "authorizationToken": return java.lang.String.class;
        case "baseuri":
        case "baseUri": return java.lang.String.class;
        case "httpclient":
        case "httpClient": return java.net.http.HttpClient.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "webhookpath":
        case "webhookPath": return java.lang.String.class;
        case "webhookverifytoken":
        case "webhookVerifyToken": return java.lang.String.class;
        case "whatsappservice":
        case "whatsappService": return org.apache.camel.component.whatsapp.WhatsAppService.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        WhatsAppEndpoint target = (WhatsAppEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "apiVersion": return target.getConfiguration().getApiVersion();
        case "authorizationtoken":
        case "authorizationToken": return target.getConfiguration().getAuthorizationToken();
        case "baseuri":
        case "baseUri": return target.getConfiguration().getBaseUri();
        case "httpclient":
        case "httpClient": return target.getHttpClient();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "webhookpath":
        case "webhookPath": return target.getConfiguration().getWebhookPath();
        case "webhookverifytoken":
        case "webhookVerifyToken": return target.getConfiguration().getWebhookVerifyToken();
        case "whatsappservice":
        case "whatsappService": return target.getWhatsappService();
        default: return null;
        }
    }
}

