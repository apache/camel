<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- START SNIPPET: e1 -->
    <!-- here we define our camel context -->
    <camel:camelContext id="myroutes">

        <!-- first route with transaction error handler -->
        <!-- here we refer to our transaction error handler we define in this Spring XML file -->
        <!-- in this route the transactionErrorHandler is used -->
        <camel:route errorHandlerRef="transactionErrorHandler">
            <!-- 1: from the jms queue -->
            <camel:from uri="activemq:queue:okay"/>
            <!-- 2: setup the transactional boundaries to require a transaction -->
            <camel:transacted ref="required"/>
            <!-- 3: call our business logic that is myProcessor -->
            <camel:process ref="myProcessor"/>
            <!-- 4: if success then send it to the mock -->
            <camel:to uri="mock:result"/>
        </camel:route>

        <!-- 2nd route with no error handling -->
        <!-- this route doens't use error handler, in fact the spring bean with id noErrorHandler -->
        <camel:route errorHandlerRef="noErrorHandler">
            <camel:from uri="activemq:queue:bad"/>
            <camel:to uri="log:bad"/>
        </camel:route>

    </camel:camelContext>
    <!-- END SNIPPET: e1 -->

    <bean id="myProcessor" class="org.apache.camel.component.jms.tx.JMSTransactionalClientTest$MyProcessor"/>

    <!-- START SNIPPET: e2 -->
    <!-- camel policy we refer to in our route -->
    <bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionTemplate" ref="PROPAGATION_REQUIRED"/>
    </bean>

    <!-- the standard spring transaction template for required -->
    <bean id="PROPAGATION_REQUIRED" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="jmsTransactionManager"/>
    </bean>

    <!-- the transaction error handle we refer to from the route -->
    <bean id="transactionErrorHandler" class="org.apache.camel.spring.spi.TransactionErrorHandlerBuilder">
        <property name="transactionTemplate" ref="PROPAGATION_REQUIRED"/>
    </bean>

    <!-- the no error handler -->
    <bean id="noErrorHandler" class="org.apache.camel.builder.NoErrorHandlerBuilder"/>
    <!-- END SNIPPET: e2 -->

    <bean id="poolConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8"/>
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
    </bean>

    <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="poolConnectionFactory"/>
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="poolConnectionFactory"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="transacted" value="true"/>
        <property name="concurrentConsumers" value="1"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

</beans>
