/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.ibm.watson.discovery;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointSchemaGeneratorMojo")
@SuppressWarnings("unchecked")
public class WatsonDiscoveryEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        WatsonDiscoveryEndpoint target = (WatsonDiscoveryEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apikey":
        case "apiKey": target.getConfiguration().setApiKey(property(camelContext, java.lang.String.class, value)); return true;
        case "collectionid":
        case "collectionId": target.getConfiguration().setCollectionId(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": target.getConfiguration().setOperation(property(camelContext, org.apache.camel.component.ibm.watson.discovery.WatsonDiscoveryOperations.class, value)); return true;
        case "projectid":
        case "projectId": target.getConfiguration().setProjectId(property(camelContext, java.lang.String.class, value)); return true;
        case "serviceurl":
        case "serviceUrl": target.getConfiguration().setServiceUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "version": target.getConfiguration().setVersion(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apikey":
        case "apiKey": return java.lang.String.class;
        case "collectionid":
        case "collectionId": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "operation": return org.apache.camel.component.ibm.watson.discovery.WatsonDiscoveryOperations.class;
        case "projectid":
        case "projectId": return java.lang.String.class;
        case "serviceurl":
        case "serviceUrl": return java.lang.String.class;
        case "version": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        WatsonDiscoveryEndpoint target = (WatsonDiscoveryEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apikey":
        case "apiKey": return target.getConfiguration().getApiKey();
        case "collectionid":
        case "collectionId": return target.getConfiguration().getCollectionId();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "operation": return target.getConfiguration().getOperation();
        case "projectid":
        case "projectId": return target.getConfiguration().getProjectId();
        case "serviceurl":
        case "serviceUrl": return target.getConfiguration().getServiceUrl();
        case "version": return target.getConfiguration().getVersion();
        default: return null;
        }
    }
}

