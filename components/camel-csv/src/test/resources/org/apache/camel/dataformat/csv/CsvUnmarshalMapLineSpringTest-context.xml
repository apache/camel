<?xml version="1.0" encoding="UTF-8"?>
  <!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements. See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version
    2.0 (the "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0 Unless required by
    applicable law or agreed to in writing, software distributed under
    the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
    OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and
    limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="direct:start" />
      <unmarshal>
        <csv delimiter="|" useMaps="true" />
      </unmarshal>
      <to uri="mock:result" />
    </route>

	<!-- skipFirstLine="false" since there's no heder into the CSV (let's use 
		confugured one) -->
	<route>
		<from uri="direct:start2" />
		<unmarshal>
			<!-- make use of a configuration to setup map headers -->
			<csv delimiter="|" useMaps="true" configRef="csvConfig" />
		</unmarshal>
		<to uri="mock:result2" />
	</route>

	<!-- skip first line since we want to use our custom header -->
	<route>
		<from uri="direct:start3" />
		<unmarshal>
			<!-- make use of a configuration to setup map headers -->
			<csv delimiter="|" useMaps="true" skipFirstLine="true" configRef="csvConfig" />
		</unmarshal>
		<to uri="mock:result3" />
	</route>
  </camelContext>

	<bean id="csvConfig" class="org.apache.commons.csv.writer.CSVConfig">
		<property name="fields">
			<list>
				<bean class="org.apache.commons.csv.writer.CSVField">
					<property name="name" value="MyOrderId" />
				</bean>
				<bean class="org.apache.commons.csv.writer.CSVField">
					<property name="name" value="MyItem" />
				</bean>
				<bean class="org.apache.commons.csv.writer.CSVField">
					<property name="name" value="MyAmount" />
				</bean>
			</list>
		</property>
	</bean>
</beans>
