/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.kubernetes.cloud;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.kubernetes.cloud.KubernetesServiceDiscoveryFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class KubernetesServiceDiscoveryFactoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.kubernetes.cloud.KubernetesServiceDiscoveryFactory target = (org.apache.camel.component.kubernetes.cloud.KubernetesServiceDiscoveryFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "ApiVersion": target.setApiVersion(property(camelContext, java.lang.String.class, value)); return true;
        case "cacertdata":
        case "CaCertData": target.setCaCertData(property(camelContext, java.lang.String.class, value)); return true;
        case "cacertfile":
        case "CaCertFile": target.setCaCertFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientcertdata":
        case "ClientCertData": target.setClientCertData(property(camelContext, java.lang.String.class, value)); return true;
        case "clientcertfile":
        case "ClientCertFile": target.setClientCertFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeyalgo":
        case "ClientKeyAlgo": target.setClientKeyAlgo(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeydata":
        case "ClientKeyData": target.setClientKeyData(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeyfile":
        case "ClientKeyFile": target.setClientKeyFile(property(camelContext, java.lang.String.class, value)); return true;
        case "clientkeypassphrase":
        case "ClientKeyPassphrase": target.setClientKeyPassphrase(property(camelContext, java.lang.String.class, value)); return true;
        case "dnsdomain":
        case "DnsDomain": target.setDnsDomain(property(camelContext, java.lang.String.class, value)); return true;
        case "lookup":
        case "Lookup": target.setLookup(property(camelContext, java.lang.String.class, value)); return true;
        case "masterurl":
        case "MasterUrl": target.setMasterUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "namespace":
        case "Namespace": target.setNamespace(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthtoken":
        case "OauthToken": target.setOauthToken(property(camelContext, java.lang.String.class, value)); return true;
        case "password":
        case "Password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "portname":
        case "PortName": target.setPortName(property(camelContext, java.lang.String.class, value)); return true;
        case "portprotocol":
        case "PortProtocol": target.setPortProtocol(property(camelContext, java.lang.String.class, value)); return true;
        case "trustcerts":
        case "TrustCerts": target.setTrustCerts(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "username":
        case "Username": target.setUsername(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "ApiVersion": return java.lang.String.class;
        case "cacertdata":
        case "CaCertData": return java.lang.String.class;
        case "cacertfile":
        case "CaCertFile": return java.lang.String.class;
        case "clientcertdata":
        case "ClientCertData": return java.lang.String.class;
        case "clientcertfile":
        case "ClientCertFile": return java.lang.String.class;
        case "clientkeyalgo":
        case "ClientKeyAlgo": return java.lang.String.class;
        case "clientkeydata":
        case "ClientKeyData": return java.lang.String.class;
        case "clientkeyfile":
        case "ClientKeyFile": return java.lang.String.class;
        case "clientkeypassphrase":
        case "ClientKeyPassphrase": return java.lang.String.class;
        case "dnsdomain":
        case "DnsDomain": return java.lang.String.class;
        case "lookup":
        case "Lookup": return java.lang.String.class;
        case "masterurl":
        case "MasterUrl": return java.lang.String.class;
        case "namespace":
        case "Namespace": return java.lang.String.class;
        case "oauthtoken":
        case "OauthToken": return java.lang.String.class;
        case "password":
        case "Password": return java.lang.String.class;
        case "portname":
        case "PortName": return java.lang.String.class;
        case "portprotocol":
        case "PortProtocol": return java.lang.String.class;
        case "trustcerts":
        case "TrustCerts": return java.lang.Boolean.class;
        case "username":
        case "Username": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.kubernetes.cloud.KubernetesServiceDiscoveryFactory target = (org.apache.camel.component.kubernetes.cloud.KubernetesServiceDiscoveryFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "apiversion":
        case "ApiVersion": return target.getApiVersion();
        case "cacertdata":
        case "CaCertData": return target.getCaCertData();
        case "cacertfile":
        case "CaCertFile": return target.getCaCertFile();
        case "clientcertdata":
        case "ClientCertData": return target.getClientCertData();
        case "clientcertfile":
        case "ClientCertFile": return target.getClientCertFile();
        case "clientkeyalgo":
        case "ClientKeyAlgo": return target.getClientKeyAlgo();
        case "clientkeydata":
        case "ClientKeyData": return target.getClientKeyData();
        case "clientkeyfile":
        case "ClientKeyFile": return target.getClientKeyFile();
        case "clientkeypassphrase":
        case "ClientKeyPassphrase": return target.getClientKeyPassphrase();
        case "dnsdomain":
        case "DnsDomain": return target.getDnsDomain();
        case "lookup":
        case "Lookup": return target.getLookup();
        case "masterurl":
        case "MasterUrl": return target.getMasterUrl();
        case "namespace":
        case "Namespace": return target.getNamespace();
        case "oauthtoken":
        case "OauthToken": return target.getOauthToken();
        case "password":
        case "Password": return target.getPassword();
        case "portname":
        case "PortName": return target.getPortName();
        case "portprotocol":
        case "PortProtocol": return target.getPortProtocol();
        case "trustcerts":
        case "TrustCerts": return target.getTrustCerts();
        case "username":
        case "Username": return target.getUsername();
        default: return null;
        }
    }
}

