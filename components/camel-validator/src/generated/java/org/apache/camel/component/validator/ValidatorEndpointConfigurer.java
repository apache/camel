/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.validator;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ValidatorEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "failOnNullBody": ((ValidatorEndpoint) target).setFailOnNullBody(property(camelContext, boolean.class, value)); return true;
        case "failOnNullHeader": ((ValidatorEndpoint) target).setFailOnNullHeader(property(camelContext, boolean.class, value)); return true;
        case "headerName": ((ValidatorEndpoint) target).setHeaderName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazyStartProducer": ((ValidatorEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "basicPropertyBinding": ((ValidatorEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "errorHandler": ((ValidatorEndpoint) target).setErrorHandler(property(camelContext, org.apache.camel.support.processor.validation.ValidatorErrorHandler.class, value)); return true;
        case "resourceResolver": ((ValidatorEndpoint) target).setResourceResolver(property(camelContext, org.w3c.dom.ls.LSResourceResolver.class, value)); return true;
        case "resourceResolverFactory": ((ValidatorEndpoint) target).setResourceResolverFactory(property(camelContext, org.apache.camel.component.validator.ValidatorResourceResolverFactory.class, value)); return true;
        case "schemaFactory": ((ValidatorEndpoint) target).setSchemaFactory(property(camelContext, javax.xml.validation.SchemaFactory.class, value)); return true;
        case "schemaLanguage": ((ValidatorEndpoint) target).setSchemaLanguage(property(camelContext, java.lang.String.class, value)); return true;
        case "synchronous": ((ValidatorEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "useSharedSchema": ((ValidatorEndpoint) target).setUseSharedSchema(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "failonnullbody": ((ValidatorEndpoint) target).setFailOnNullBody(property(camelContext, boolean.class, value)); return true;
        case "failonnullheader": ((ValidatorEndpoint) target).setFailOnNullHeader(property(camelContext, boolean.class, value)); return true;
        case "headername": ((ValidatorEndpoint) target).setHeaderName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer": ((ValidatorEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "basicpropertybinding": ((ValidatorEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "errorhandler": ((ValidatorEndpoint) target).setErrorHandler(property(camelContext, org.apache.camel.support.processor.validation.ValidatorErrorHandler.class, value)); return true;
        case "resourceresolver": ((ValidatorEndpoint) target).setResourceResolver(property(camelContext, org.w3c.dom.ls.LSResourceResolver.class, value)); return true;
        case "resourceresolverfactory": ((ValidatorEndpoint) target).setResourceResolverFactory(property(camelContext, org.apache.camel.component.validator.ValidatorResourceResolverFactory.class, value)); return true;
        case "schemafactory": ((ValidatorEndpoint) target).setSchemaFactory(property(camelContext, javax.xml.validation.SchemaFactory.class, value)); return true;
        case "schemalanguage": ((ValidatorEndpoint) target).setSchemaLanguage(property(camelContext, java.lang.String.class, value)); return true;
        case "synchronous": ((ValidatorEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "usesharedschema": ((ValidatorEndpoint) target).setUseSharedSchema(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

}

