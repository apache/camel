/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.consul;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ConsulEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "connectTimeoutMillis": ((ConsulEndpoint) target).getConfiguration().setConnectTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "consulClient": ((ConsulEndpoint) target).getConfiguration().setConsulClient(property(camelContext, com.orbitz.consul.Consul.class, value)); return true;
        case "key": ((ConsulEndpoint) target).getConfiguration().setKey(property(camelContext, java.lang.String.class, value)); return true;
        case "pingInstance": ((ConsulEndpoint) target).getConfiguration().setPingInstance(property(camelContext, boolean.class, value)); return true;
        case "readTimeoutMillis": ((ConsulEndpoint) target).getConfiguration().setReadTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "tags": ((ConsulEndpoint) target).getConfiguration().setTags(property(camelContext, java.lang.String.class, value)); return true;
        case "url": ((ConsulEndpoint) target).getConfiguration().setUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "writeTimeoutMillis": ((ConsulEndpoint) target).getConfiguration().setWriteTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "bridgeErrorHandler": ((ConsulEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionHandler": ((ConsulEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangePattern": ((ConsulEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "action": ((ConsulEndpoint) target).getConfiguration().setAction(property(camelContext, java.lang.String.class, value)); return true;
        case "lazyStartProducer": ((ConsulEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "valueAsString": ((ConsulEndpoint) target).getConfiguration().setValueAsString(property(camelContext, boolean.class, value)); return true;
        case "basicPropertyBinding": ((ConsulEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "consistencyMode": ((ConsulEndpoint) target).getConfiguration().setConsistencyMode(property(camelContext, com.orbitz.consul.option.ConsistencyMode.class, value)); return true;
        case "datacenter": ((ConsulEndpoint) target).getConfiguration().setDatacenter(property(camelContext, java.lang.String.class, value)); return true;
        case "nearNode": ((ConsulEndpoint) target).getConfiguration().setNearNode(property(camelContext, java.lang.String.class, value)); return true;
        case "nodeMeta": ((ConsulEndpoint) target).getConfiguration().setNodeMeta(property(camelContext, java.util.List.class, value)); return true;
        case "synchronous": ((ConsulEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "blockSeconds": ((ConsulEndpoint) target).getConfiguration().setBlockSeconds(property(camelContext, java.lang.Integer.class, value)); return true;
        case "firstIndex": ((ConsulEndpoint) target).getConfiguration().setFirstIndex(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "recursive": ((ConsulEndpoint) target).getConfiguration().setRecursive(property(camelContext, boolean.class, value)); return true;
        case "aclToken": ((ConsulEndpoint) target).getConfiguration().setAclToken(property(camelContext, java.lang.String.class, value)); return true;
        case "password": ((ConsulEndpoint) target).getConfiguration().setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "sslContextParameters": ((ConsulEndpoint) target).getConfiguration().setSslContextParameters(property(camelContext, org.apache.camel.support.jsse.SSLContextParameters.class, value)); return true;
        case "userName": ((ConsulEndpoint) target).getConfiguration().setUserName(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "connecttimeoutmillis": ((ConsulEndpoint) target).getConfiguration().setConnectTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "consulclient": ((ConsulEndpoint) target).getConfiguration().setConsulClient(property(camelContext, com.orbitz.consul.Consul.class, value)); return true;
        case "key": ((ConsulEndpoint) target).getConfiguration().setKey(property(camelContext, java.lang.String.class, value)); return true;
        case "pinginstance": ((ConsulEndpoint) target).getConfiguration().setPingInstance(property(camelContext, boolean.class, value)); return true;
        case "readtimeoutmillis": ((ConsulEndpoint) target).getConfiguration().setReadTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "tags": ((ConsulEndpoint) target).getConfiguration().setTags(property(camelContext, java.lang.String.class, value)); return true;
        case "url": ((ConsulEndpoint) target).getConfiguration().setUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "writetimeoutmillis": ((ConsulEndpoint) target).getConfiguration().setWriteTimeoutMillis(property(camelContext, java.lang.Long.class, value)); return true;
        case "bridgeerrorhandler": ((ConsulEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler": ((ConsulEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern": ((ConsulEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "action": ((ConsulEndpoint) target).getConfiguration().setAction(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer": ((ConsulEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "valueasstring": ((ConsulEndpoint) target).getConfiguration().setValueAsString(property(camelContext, boolean.class, value)); return true;
        case "basicpropertybinding": ((ConsulEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "consistencymode": ((ConsulEndpoint) target).getConfiguration().setConsistencyMode(property(camelContext, com.orbitz.consul.option.ConsistencyMode.class, value)); return true;
        case "datacenter": ((ConsulEndpoint) target).getConfiguration().setDatacenter(property(camelContext, java.lang.String.class, value)); return true;
        case "nearnode": ((ConsulEndpoint) target).getConfiguration().setNearNode(property(camelContext, java.lang.String.class, value)); return true;
        case "nodemeta": ((ConsulEndpoint) target).getConfiguration().setNodeMeta(property(camelContext, java.util.List.class, value)); return true;
        case "synchronous": ((ConsulEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "blockseconds": ((ConsulEndpoint) target).getConfiguration().setBlockSeconds(property(camelContext, java.lang.Integer.class, value)); return true;
        case "firstindex": ((ConsulEndpoint) target).getConfiguration().setFirstIndex(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "recursive": ((ConsulEndpoint) target).getConfiguration().setRecursive(property(camelContext, boolean.class, value)); return true;
        case "acltoken": ((ConsulEndpoint) target).getConfiguration().setAclToken(property(camelContext, java.lang.String.class, value)); return true;
        case "password": ((ConsulEndpoint) target).getConfiguration().setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "sslcontextparameters": ((ConsulEndpoint) target).getConfiguration().setSslContextParameters(property(camelContext, org.apache.camel.support.jsse.SSLContextParameters.class, value)); return true;
        case "username": ((ConsulEndpoint) target).getConfiguration().setUserName(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

}

