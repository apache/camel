/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.consul.cloud;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.consul.cloud.ConsulServiceDiscoveryFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ConsulServiceDiscoveryFactoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.consul.cloud.ConsulServiceDiscoveryFactory target = (org.apache.camel.component.consul.cloud.ConsulServiceDiscoveryFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "acltoken":
        case "AclToken": target.setAclToken(property(camelContext, java.lang.String.class, value)); return true;
        case "blockseconds":
        case "BlockSeconds": target.setBlockSeconds(property(camelContext, java.lang.Integer.class, value)); return true;
        case "connecttimeout":
        case "ConnectTimeout": target.setConnectTimeout(property(camelContext, java.time.Duration.class, value)); return true;
        case "datacenter":
        case "Datacenter": target.setDatacenter(property(camelContext, java.lang.String.class, value)); return true;
        case "password":
        case "Password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "readtimeout":
        case "ReadTimeout": target.setReadTimeout(property(camelContext, java.time.Duration.class, value)); return true;
        case "sslcontextparameters":
        case "SslContextParameters": target.setSslContextParameters(property(camelContext, org.apache.camel.support.jsse.SSLContextParameters.class, value)); return true;
        case "url":
        case "Url": target.setUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "username":
        case "UserName": target.setUserName(property(camelContext, java.lang.String.class, value)); return true;
        case "writetimeout":
        case "WriteTimeout": target.setWriteTimeout(property(camelContext, java.time.Duration.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "acltoken":
        case "AclToken": return java.lang.String.class;
        case "blockseconds":
        case "BlockSeconds": return java.lang.Integer.class;
        case "connecttimeout":
        case "ConnectTimeout": return java.time.Duration.class;
        case "datacenter":
        case "Datacenter": return java.lang.String.class;
        case "password":
        case "Password": return java.lang.String.class;
        case "readtimeout":
        case "ReadTimeout": return java.time.Duration.class;
        case "sslcontextparameters":
        case "SslContextParameters": return org.apache.camel.support.jsse.SSLContextParameters.class;
        case "url":
        case "Url": return java.lang.String.class;
        case "username":
        case "UserName": return java.lang.String.class;
        case "writetimeout":
        case "WriteTimeout": return java.time.Duration.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.consul.cloud.ConsulServiceDiscoveryFactory target = (org.apache.camel.component.consul.cloud.ConsulServiceDiscoveryFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "acltoken":
        case "AclToken": return target.getAclToken();
        case "blockseconds":
        case "BlockSeconds": return target.getBlockSeconds();
        case "connecttimeout":
        case "ConnectTimeout": return target.getConnectTimeout();
        case "datacenter":
        case "Datacenter": return target.getDatacenter();
        case "password":
        case "Password": return target.getPassword();
        case "readtimeout":
        case "ReadTimeout": return target.getReadTimeout();
        case "sslcontextparameters":
        case "SslContextParameters": return target.getSslContextParameters();
        case "url":
        case "Url": return target.getUrl();
        case "username":
        case "UserName": return target.getUserName();
        case "writetimeout":
        case "WriteTimeout": return target.getWriteTimeout();
        default: return null;
        }
    }
}

