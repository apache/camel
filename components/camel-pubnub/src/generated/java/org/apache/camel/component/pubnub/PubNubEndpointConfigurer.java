/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.pubnub;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class PubNubEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "uuid": ((PubNubEndpoint) target).getConfiguration().setUuid(property(camelContext, java.lang.String.class, value)); return true;
        case "bridgeErrorHandler": ((PubNubEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "withPresence": ((PubNubEndpoint) target).getConfiguration().setWithPresence(property(camelContext, boolean.class, value)); return true;
        case "exceptionHandler": ((PubNubEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangePattern": ((PubNubEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazyStartProducer": ((PubNubEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": ((PubNubEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "basicPropertyBinding": ((PubNubEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "pubnub": ((PubNubEndpoint) target).setPubnub(property(camelContext, com.pubnub.api.PubNub.class, value)); return true;
        case "synchronous": ((PubNubEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "authKey": ((PubNubEndpoint) target).getConfiguration().setAuthKey(property(camelContext, java.lang.String.class, value)); return true;
        case "cipherKey": ((PubNubEndpoint) target).getConfiguration().setCipherKey(property(camelContext, java.lang.String.class, value)); return true;
        case "publishKey": ((PubNubEndpoint) target).getConfiguration().setPublishKey(property(camelContext, java.lang.String.class, value)); return true;
        case "secretKey": ((PubNubEndpoint) target).getConfiguration().setSecretKey(property(camelContext, java.lang.String.class, value)); return true;
        case "secure": ((PubNubEndpoint) target).getConfiguration().setSecure(property(camelContext, boolean.class, value)); return true;
        case "subscribeKey": ((PubNubEndpoint) target).getConfiguration().setSubscribeKey(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "uuid": ((PubNubEndpoint) target).getConfiguration().setUuid(property(camelContext, java.lang.String.class, value)); return true;
        case "bridgeerrorhandler": ((PubNubEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "withpresence": ((PubNubEndpoint) target).getConfiguration().setWithPresence(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler": ((PubNubEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern": ((PubNubEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazystartproducer": ((PubNubEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": ((PubNubEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "basicpropertybinding": ((PubNubEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "pubnub": ((PubNubEndpoint) target).setPubnub(property(camelContext, com.pubnub.api.PubNub.class, value)); return true;
        case "synchronous": ((PubNubEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "authkey": ((PubNubEndpoint) target).getConfiguration().setAuthKey(property(camelContext, java.lang.String.class, value)); return true;
        case "cipherkey": ((PubNubEndpoint) target).getConfiguration().setCipherKey(property(camelContext, java.lang.String.class, value)); return true;
        case "publishkey": ((PubNubEndpoint) target).getConfiguration().setPublishKey(property(camelContext, java.lang.String.class, value)); return true;
        case "secretkey": ((PubNubEndpoint) target).getConfiguration().setSecretKey(property(camelContext, java.lang.String.class, value)); return true;
        case "secure": ((PubNubEndpoint) target).getConfiguration().setSecure(property(camelContext, boolean.class, value)); return true;
        case "subscribekey": ((PubNubEndpoint) target).getConfiguration().setSubscribeKey(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

}

