/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.thymeleaf;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ThymeleafEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        ThymeleafEndpoint target = (ThymeleafEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowcontextmapall":
        case "allowContextMapAll": target.setAllowContextMapAll(property(camelContext, boolean.class, value)); return true;
        case "cachetimetolive":
        case "cacheTimeToLive": target.setCacheTimeToLive(property(camelContext, java.lang.Long.class, value)); return true;
        case "cacheable": target.setCacheable(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "checkexistence":
        case "checkExistence": target.setCheckExistence(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "contentcache":
        case "contentCache": target.setContentCache(property(camelContext, boolean.class, value)); return true;
        case "encoding": target.setEncoding(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "order": target.setOrder(property(camelContext, java.lang.Integer.class, value)); return true;
        case "prefix": target.setPrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "resolver": target.setResolver(property(camelContext, org.apache.camel.component.thymeleaf.ThymeleafResolverType.class, value)); return true;
        case "suffix": target.setSuffix(property(camelContext, java.lang.String.class, value)); return true;
        case "templatemode":
        case "templateMode": target.setTemplateMode(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowcontextmapall":
        case "allowContextMapAll": return boolean.class;
        case "cachetimetolive":
        case "cacheTimeToLive": return java.lang.Long.class;
        case "cacheable": return java.lang.Boolean.class;
        case "checkexistence":
        case "checkExistence": return java.lang.Boolean.class;
        case "contentcache":
        case "contentCache": return boolean.class;
        case "encoding": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "order": return java.lang.Integer.class;
        case "prefix": return java.lang.String.class;
        case "resolver": return org.apache.camel.component.thymeleaf.ThymeleafResolverType.class;
        case "suffix": return java.lang.String.class;
        case "templatemode":
        case "templateMode": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        ThymeleafEndpoint target = (ThymeleafEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowcontextmapall":
        case "allowContextMapAll": return target.isAllowContextMapAll();
        case "cachetimetolive":
        case "cacheTimeToLive": return target.getCacheTimeToLive();
        case "cacheable": return target.getCacheable();
        case "checkexistence":
        case "checkExistence": return target.getCheckExistence();
        case "contentcache":
        case "contentCache": return target.isContentCache();
        case "encoding": return target.getEncoding();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "order": return target.getOrder();
        case "prefix": return target.getPrefix();
        case "resolver": return target.getResolver();
        case "suffix": return target.getSuffix();
        case "templatemode":
        case "templateMode": return target.getTemplateMode();
        default: return null;
        }
    }
}

