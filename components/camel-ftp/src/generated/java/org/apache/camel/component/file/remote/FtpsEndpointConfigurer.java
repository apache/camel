/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.file.remote;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.component.file.remote.FtpEndpointConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class FtpsEndpointConfigurer extends FtpEndpointConfigurer implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        FtpsEndpoint target = (FtpsEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "disablesecuredatachanneldefaults":
        case "disableSecureDataChannelDefaults": target.getConfiguration().setDisableSecureDataChannelDefaults(property(camelContext, boolean.class, value)); return true;
        case "execpbsz":
        case "execPbsz": target.getConfiguration().setExecPbsz(property(camelContext, java.lang.Long.class, value)); return true;
        case "execprot":
        case "execProt": target.getConfiguration().setExecProt(property(camelContext, java.lang.String.class, value)); return true;
        case "ftpclientkeystoreparameters":
        case "ftpClientKeyStoreParameters": target.setFtpClientKeyStoreParameters(property(camelContext, java.util.Map.class, value)); return true;
        case "ftpclienttruststoreparameters":
        case "ftpClientTrustStoreParameters": target.setFtpClientTrustStoreParameters(property(camelContext, java.util.Map.class, value)); return true;
        case "implicit": target.getConfiguration().setImplicit(property(camelContext, boolean.class, value)); return true;
        case "securityprotocol":
        case "securityProtocol": target.getConfiguration().setSecurityProtocol(property(camelContext, java.lang.String.class, value)); return true;
        case "sslcontextparameters":
        case "sslContextParameters": target.setSslContextParameters(property(camelContext, org.apache.camel.support.jsse.SSLContextParameters.class, value)); return true;
        default: return super.configure(camelContext, obj, name, value, ignoreCase);
        }
    }

}

