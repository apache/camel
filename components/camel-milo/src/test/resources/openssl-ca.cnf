HOME            = .
RANDFILE        = $ENV::HOME/.rnd

####################################################################
[ ca ]
default_ca    = CA_default      # The default ca section

[ CA_default ]

default_days     = 1000         # How long to certify for
default_crl_days = 30           # How long before next CRL
default_md       = sha256       # Use public key default MD
preserve         = no           # Keep passed DN ordering

x509_extensions = ca_extensions # The extensions to add to the cert

email_in_dn     = no            # Don't concat the email in the DN
copy_extensions = copy          # Required to copy SANs from CSR to cert

base_dir      = .
certificate   = $base_dir/ca/cacert.pem   # The CA certifcate
private_key   = $base_dir/ca/cakey.pem    # The CA private key
new_certs_dir = $base_dir/cert              # Location for new certs after signing
database      = $base_dir/ca/index.txt    # Database index file
serial        = $base_dir/ca/serial.txt   # The current serial number

unique_subject = no  # Set to 'no' to allow creation of
                     # several certificates with same subject.

####################################################################
[ req ]
default_bits       = 4096
default_keyfile    = ca/cakey.pem
distinguished_name = ca_distinguished_name
x509_extensions    = ca_extensions
string_mask        = utf8only

####################################################################
[ ca_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default = RH

stateOrProvinceName         = State or Province Name (full name)
stateOrProvinceName_default = RH

localityName                = Locality Name (eg, city)
localityName_default        = RH

organizationName            = Organization Name (eg, company)
organizationName_default    = Test CA

commonName         = Common Name (e.g. server FQDN or YOUR name)
commonName_default = Test CA

####################################################################
[ ca_extensions ]

subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:true
keyUsage               = keyCertSign, cRLSign

####################################################################
[ signing_policy ]
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

####################################################################
[ signing_req ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature, keyEncipherment

#openssl pkcs12 -export -in servercert.pem -inkey serverkey.pem -certfile cacert.pem -name "test" -out keystore.p12 -passout pass:test
