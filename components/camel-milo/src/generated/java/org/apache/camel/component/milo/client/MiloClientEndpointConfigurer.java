/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.milo.client;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class MiloClientEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "clientId": ((MiloClientEndpoint) target).getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "defaultAwaitWrites": ((MiloClientEndpoint) target).setDefaultAwaitWrites(property(camelContext, boolean.class, value)); return true;
        case "discoveryEndpointSuffix": ((MiloClientEndpoint) target).getConfiguration().setDiscoveryEndpointSuffix(property(camelContext, java.lang.String.class, value)); return true;
        case "discoveryEndpointUri": ((MiloClientEndpoint) target).getConfiguration().setDiscoveryEndpointUri(property(camelContext, java.lang.String.class, value)); return true;
        case "method": ((MiloClientEndpoint) target).setMethod(property(camelContext, java.lang.String.class, value)); return true;
        case "node": ((MiloClientEndpoint) target).setNode(property(camelContext, java.lang.String.class, value)); return true;
        case "samplingInterval": ((MiloClientEndpoint) target).setSamplingInterval(property(camelContext, java.lang.Double.class, value)); return true;
        case "bridgeErrorHandler": ((MiloClientEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionHandler": ((MiloClientEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangePattern": ((MiloClientEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazyStartProducer": ((MiloClientEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "basicPropertyBinding": ((MiloClientEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((MiloClientEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "allowedSecurityPolicies": ((MiloClientEndpoint) target).getConfiguration().setAllowedSecurityPolicies(property(camelContext, java.lang.String.class, value)); return true;
        case "applicationName": ((MiloClientEndpoint) target).getConfiguration().setApplicationName(property(camelContext, java.lang.String.class, value)); return true;
        case "applicationUri": ((MiloClientEndpoint) target).getConfiguration().setApplicationUri(property(camelContext, java.lang.String.class, value)); return true;
        case "channelLifetime": ((MiloClientEndpoint) target).getConfiguration().setChannelLifetime(property(camelContext, java.lang.Long.class, value)); return true;
        case "keyAlias": ((MiloClientEndpoint) target).getConfiguration().setKeyAlias(property(camelContext, java.lang.String.class, value)); return true;
        case "keyPassword": ((MiloClientEndpoint) target).getConfiguration().setKeyPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "keyStorePassword": ((MiloClientEndpoint) target).getConfiguration().setKeyStorePassword(property(camelContext, java.lang.String.class, value)); return true;
        case "keyStoreType": ((MiloClientEndpoint) target).getConfiguration().setKeyStoreType(property(camelContext, java.lang.String.class, value)); return true;
        case "keyStoreUrl": ((MiloClientEndpoint) target).getConfiguration().setKeyStoreUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "maxPendingPublishRequests": ((MiloClientEndpoint) target).getConfiguration().setMaxPendingPublishRequests(property(camelContext, java.lang.Long.class, value)); return true;
        case "maxResponseMessageSize": ((MiloClientEndpoint) target).getConfiguration().setMaxResponseMessageSize(property(camelContext, java.lang.Long.class, value)); return true;
        case "overrideHost": ((MiloClientEndpoint) target).getConfiguration().setOverrideHost(property(camelContext, boolean.class, value)); return true;
        case "productUri": ((MiloClientEndpoint) target).getConfiguration().setProductUri(property(camelContext, java.lang.String.class, value)); return true;
        case "requestTimeout": ((MiloClientEndpoint) target).getConfiguration().setRequestTimeout(property(camelContext, java.lang.Long.class, value)); return true;
        case "sessionName": ((MiloClientEndpoint) target).getConfiguration().setSessionName(property(camelContext, java.lang.String.class, value)); return true;
        case "sessionTimeout": ((MiloClientEndpoint) target).getConfiguration().setSessionTimeout(property(camelContext, java.lang.Long.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "clientid": ((MiloClientEndpoint) target).getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "defaultawaitwrites": ((MiloClientEndpoint) target).setDefaultAwaitWrites(property(camelContext, boolean.class, value)); return true;
        case "discoveryendpointsuffix": ((MiloClientEndpoint) target).getConfiguration().setDiscoveryEndpointSuffix(property(camelContext, java.lang.String.class, value)); return true;
        case "discoveryendpointuri": ((MiloClientEndpoint) target).getConfiguration().setDiscoveryEndpointUri(property(camelContext, java.lang.String.class, value)); return true;
        case "method": ((MiloClientEndpoint) target).setMethod(property(camelContext, java.lang.String.class, value)); return true;
        case "node": ((MiloClientEndpoint) target).setNode(property(camelContext, java.lang.String.class, value)); return true;
        case "samplinginterval": ((MiloClientEndpoint) target).setSamplingInterval(property(camelContext, java.lang.Double.class, value)); return true;
        case "bridgeerrorhandler": ((MiloClientEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler": ((MiloClientEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern": ((MiloClientEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazystartproducer": ((MiloClientEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "basicpropertybinding": ((MiloClientEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((MiloClientEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "allowedsecuritypolicies": ((MiloClientEndpoint) target).getConfiguration().setAllowedSecurityPolicies(property(camelContext, java.lang.String.class, value)); return true;
        case "applicationname": ((MiloClientEndpoint) target).getConfiguration().setApplicationName(property(camelContext, java.lang.String.class, value)); return true;
        case "applicationuri": ((MiloClientEndpoint) target).getConfiguration().setApplicationUri(property(camelContext, java.lang.String.class, value)); return true;
        case "channellifetime": ((MiloClientEndpoint) target).getConfiguration().setChannelLifetime(property(camelContext, java.lang.Long.class, value)); return true;
        case "keyalias": ((MiloClientEndpoint) target).getConfiguration().setKeyAlias(property(camelContext, java.lang.String.class, value)); return true;
        case "keypassword": ((MiloClientEndpoint) target).getConfiguration().setKeyPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "keystorepassword": ((MiloClientEndpoint) target).getConfiguration().setKeyStorePassword(property(camelContext, java.lang.String.class, value)); return true;
        case "keystoretype": ((MiloClientEndpoint) target).getConfiguration().setKeyStoreType(property(camelContext, java.lang.String.class, value)); return true;
        case "keystoreurl": ((MiloClientEndpoint) target).getConfiguration().setKeyStoreUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "maxpendingpublishrequests": ((MiloClientEndpoint) target).getConfiguration().setMaxPendingPublishRequests(property(camelContext, java.lang.Long.class, value)); return true;
        case "maxresponsemessagesize": ((MiloClientEndpoint) target).getConfiguration().setMaxResponseMessageSize(property(camelContext, java.lang.Long.class, value)); return true;
        case "overridehost": ((MiloClientEndpoint) target).getConfiguration().setOverrideHost(property(camelContext, boolean.class, value)); return true;
        case "producturi": ((MiloClientEndpoint) target).getConfiguration().setProductUri(property(camelContext, java.lang.String.class, value)); return true;
        case "requesttimeout": ((MiloClientEndpoint) target).getConfiguration().setRequestTimeout(property(camelContext, java.lang.Long.class, value)); return true;
        case "sessionname": ((MiloClientEndpoint) target).getConfiguration().setSessionName(property(camelContext, java.lang.String.class, value)); return true;
        case "sessiontimeout": ((MiloClientEndpoint) target).getConfiguration().setSessionTimeout(property(camelContext, java.lang.Long.class, value)); return true;
            default: return false;
        }
    }

}

