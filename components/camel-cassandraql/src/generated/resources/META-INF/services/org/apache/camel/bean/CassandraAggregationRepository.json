{
  "bean": {
    "kind": "bean",
    "name": "CassandraAggregationRepository",
    "javaType": "org.apache.camel.processor.aggregate.cassandra.CassandraAggregationRepository",
    "interfaceType": "org.apache.camel.AggregationStrategy",
    "title": "Cassandra Aggregation Repository",
    "description": "Aggregation repository that uses Cassandra table to store exchanges. Advice: use LeveledCompaction for this table and tune read\/write consistency levels.",
    "deprecated": false,
    "groupId": "org.apache.camel",
    "artifactId": "camel-cassandraql",
    "version": "4.7.0-SNAPSHOT",
    "properties": { "sessionHolder": { "index": 0, "kind": "property", "displayName": "Session Holder", "required": true, "type": "object", "javaType": "org.apache.camel.utils.cassandra.CassandraSessionHolder", "deprecated": false, "autowired": false, "secret": false, "description": "Cassandra session" }, "table": { "index": 1, "kind": "property", "displayName": "Table", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "CAMEL_AGGREGATION", "description": "The table name for storing the data" }, "exchangeIdColumn": { "index": 2, "kind": "property", "displayName": "Exchange Id Column", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "EXCHANGE_ID", "description": "Column name for Exchange ID" }, "exchangeColumn": { "index": 3, "kind": "property", "displayName": "Exchange Column", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "EXCHANGE", "description": "Column name for Exchange" }, "prefixPKValues": { "index": 4, "kind": "property", "displayName": "Prefix Primary Key Values", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Values used as primary key prefix. Multiple values can be separated by comma." }, "pkColumns": { "index": 5, "kind": "property", "displayName": "Primary Key Columns", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "KEY", "description": "Primary key columns. Multiple values can be separated by comma." }, "ttl": { "index": 6, "kind": "property", "displayName": "Time to Live", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "Time to live in seconds used for inserts" }, "writeConsistencyLevel": { "index": 7, "kind": "property", "displayName": "Write Consistency Level", "required": false, "type": "object", "javaType": "com.datastax.oss.driver.api.core.ConsistencyLevel", "enum": [ "ANY", "ONE", "TWO", "THREE", "QUORUM", "ALL", "LOCAL_ONE", "LOCAL_QUORUM", "EACH_QUORUM", "SERIAL", "LOCAL_SERIAL" ], "deprecated": false, "autowired": false, "secret": false, "description": "Write consistency level" }, "readConsistencyLevel": { "index": 8, "kind": "property", "displayName": "Read Consistency Level", "required": false, "type": "object", "javaType": "com.datastax.oss.driver.api.core.ConsistencyLevel", "enum": [ "ANY", "ONE", "TWO", "THREE", "QUORUM", "ALL", "LOCAL_ONE", "LOCAL_QUORUM", "EACH_QUORUM", "SERIAL", "LOCAL_SERIAL" ], "deprecated": false, "autowired": false, "secret": false, "description": "Read consistency level" }, "recoveryInterval": { "index": 9, "kind": "property", "displayName": "Recovery Interval", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "5000", "description": "Sets the interval between recovery scans" }, "useRecovery": { "index": 10, "kind": "property", "displayName": "Use Recovery", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Whether or not recovery is enabled" }, "deadLetterUri": { "index": 11, "kind": "property", "displayName": "Dead Letter Uri", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets an optional dead letter channel which exhausted recovered Exchange should be send to." }, "maximumRedeliveries": { "index": 12, "kind": "property", "displayName": "Maximum Redeliveries", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "Sets an optional limit of the number of redelivery attempt of recovered Exchange should be attempted, before its exhausted. When this limit is hit, then the Exchange is moved to the dead letter channel." }, "allowSerializedHeaders": { "index": 13, "kind": "property", "displayName": "Allow Serialized Headers", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "description": "Whether headers on the Exchange that are Java objects and Serializable should be included and saved to the repository" } }
  }
}

