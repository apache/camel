/* Generated by camel-package-maven-plugin - do not edit this file! */
package org.apache.camel.component.snakeyaml;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Source code generated by camel-package-maven-plugin - do not edit this file!
 */
@SuppressWarnings("unchecked")
public class SnakeYAMLDataFormatConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        SnakeYAMLDataFormat dataformat = (SnakeYAMLDataFormat) target;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "constructor": dataformat.setConstructor(property(camelContext, java.util.function.Function.class, value)); return true;
        case "representer": dataformat.setRepresenter(property(camelContext, java.util.function.Function.class, value)); return true;
        case "dumperoptions":
        case "dumperOptions": dataformat.setDumperOptions(property(camelContext, java.util.function.Function.class, value)); return true;
        case "resolver": dataformat.setResolver(property(camelContext, java.util.function.Function.class, value)); return true;
        case "useapplicationcontextclassloader":
        case "useApplicationContextClassLoader": dataformat.setUseApplicationContextClassLoader(property(camelContext, boolean.class, value)); return true;
        case "prettyflow":
        case "prettyFlow": dataformat.setPrettyFlow(property(camelContext, boolean.class, value)); return true;
        case "allowanytype":
        case "allowAnyType": dataformat.setAllowAnyType(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

}

