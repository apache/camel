/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.dataformat.soap;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.dataformat.soap.SoapDataFormat;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.PackageDataFormatMojo")
@SuppressWarnings("unchecked")
public class SoapDataFormatConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, ExtendedPropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("ElementNameStrategy", org.apache.camel.dataformat.soap.name.ElementNameStrategy.class);
        map.put("Version", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        SoapDataFormat target = (SoapDataFormat) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "elementnamestrategy":
        case "elementNameStrategy": target.setElementNameStrategy(property(camelContext, org.apache.camel.dataformat.soap.name.ElementNameStrategy.class, value)); return true;
        case "version": target.setVersion(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "elementnamestrategy":
        case "elementNameStrategy": return org.apache.camel.dataformat.soap.name.ElementNameStrategy.class;
        case "version": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        SoapDataFormat target = (SoapDataFormat) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "elementnamestrategy":
        case "elementNameStrategy": return target.getElementNameStrategy();
        case "version": return target.getVersion();
        default: return null;
        }
    }
}

