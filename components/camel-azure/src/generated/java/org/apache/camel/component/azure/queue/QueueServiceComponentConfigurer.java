/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.azure.queue;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class QueueServiceComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    private org.apache.camel.component.azure.queue.QueueServiceConfiguration getOrCreateConfiguration(QueueServiceComponent target) {
        if (target.getConfiguration() == null) {
            target.setConfiguration(new org.apache.camel.component.azure.queue.QueueServiceConfiguration());
        }
        return target.getConfiguration();
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        QueueServiceComponent target = (QueueServiceComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "azurequeueclient":
        case "azureQueueClient": getOrCreateConfiguration(target).setAzureQueueClient(property(camelContext, com.microsoft.azure.storage.queue.CloudQueue.class, value)); return true;
        case "basicpropertybinding":
        case "basicPropertyBinding": target.setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "configuration": target.setConfiguration(property(camelContext, org.apache.camel.component.azure.queue.QueueServiceConfiguration.class, value)); return true;
        case "credentials": getOrCreateConfiguration(target).setCredentials(property(camelContext, com.microsoft.azure.storage.StorageCredentials.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "messagetimetolive":
        case "messageTimeToLive": getOrCreateConfiguration(target).setMessageTimeToLive(property(camelContext, int.class, value)); return true;
        case "messagevisibilitydelay":
        case "messageVisibilityDelay": getOrCreateConfiguration(target).setMessageVisibilityDelay(property(camelContext, int.class, value)); return true;
        case "operation": getOrCreateConfiguration(target).setOperation(property(camelContext, org.apache.camel.component.azure.queue.QueueServiceOperations.class, value)); return true;
        case "queueprefix":
        case "queuePrefix": getOrCreateConfiguration(target).setQueuePrefix(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

}

