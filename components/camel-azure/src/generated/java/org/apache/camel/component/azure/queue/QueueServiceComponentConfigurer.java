/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.azure.queue;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class QueueServiceComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("azureQueueClient", com.microsoft.azure.storage.queue.CloudQueue.class);
        map.put("credentials", com.microsoft.azure.storage.StorageCredentials.class);
        map.put("validateClientURI", boolean.class);
        map.put("bridgeErrorHandler", boolean.class);
        map.put("lazyStartProducer", boolean.class);
        map.put("messageTimeToLive", int.class);
        map.put("messageVisibilityDelay", int.class);
        map.put("operation", org.apache.camel.component.azure.queue.QueueServiceOperations.class);
        map.put("queuePrefix", java.lang.String.class);
        map.put("basicPropertyBinding", boolean.class);
        map.put("configuration", org.apache.camel.component.azure.queue.QueueServiceConfiguration.class);
        map.put("credentialsAccountKey", java.lang.String.class);
        map.put("credentialsAccountName", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    private org.apache.camel.component.azure.queue.QueueServiceConfiguration getOrCreateConfiguration(QueueServiceComponent target) {
        if (target.getConfiguration() == null) {
            target.setConfiguration(new org.apache.camel.component.azure.queue.QueueServiceConfiguration());
        }
        return target.getConfiguration();
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        QueueServiceComponent target = (QueueServiceComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "azurequeueclient":
        case "azureQueueClient": getOrCreateConfiguration(target).setAzureQueueClient(property(camelContext, com.microsoft.azure.storage.queue.CloudQueue.class, value)); return true;
        case "basicpropertybinding":
        case "basicPropertyBinding": target.setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "configuration": target.setConfiguration(property(camelContext, org.apache.camel.component.azure.queue.QueueServiceConfiguration.class, value)); return true;
        case "credentials": getOrCreateConfiguration(target).setCredentials(property(camelContext, com.microsoft.azure.storage.StorageCredentials.class, value)); return true;
        case "credentialsaccountkey":
        case "credentialsAccountKey": getOrCreateConfiguration(target).setCredentialsAccountKey(property(camelContext, java.lang.String.class, value)); return true;
        case "credentialsaccountname":
        case "credentialsAccountName": getOrCreateConfiguration(target).setCredentialsAccountName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "messagetimetolive":
        case "messageTimeToLive": getOrCreateConfiguration(target).setMessageTimeToLive(property(camelContext, int.class, value)); return true;
        case "messagevisibilitydelay":
        case "messageVisibilityDelay": getOrCreateConfiguration(target).setMessageVisibilityDelay(property(camelContext, int.class, value)); return true;
        case "operation": getOrCreateConfiguration(target).setOperation(property(camelContext, org.apache.camel.component.azure.queue.QueueServiceOperations.class, value)); return true;
        case "queueprefix":
        case "queuePrefix": getOrCreateConfiguration(target).setQueuePrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "validateclienturi":
        case "validateClientURI": getOrCreateConfiguration(target).setValidateClientURI(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        QueueServiceComponent target = (QueueServiceComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "azurequeueclient":
        case "azureQueueClient": return getOrCreateConfiguration(target).getAzureQueueClient();
        case "basicpropertybinding":
        case "basicPropertyBinding": return target.isBasicPropertyBinding();
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return target.isBridgeErrorHandler();
        case "configuration": return target.getConfiguration();
        case "credentials": return getOrCreateConfiguration(target).getCredentials();
        case "credentialsaccountkey":
        case "credentialsAccountKey": return getOrCreateConfiguration(target).getCredentialsAccountKey();
        case "credentialsaccountname":
        case "credentialsAccountName": return getOrCreateConfiguration(target).getCredentialsAccountName();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "messagetimetolive":
        case "messageTimeToLive": return getOrCreateConfiguration(target).getMessageTimeToLive();
        case "messagevisibilitydelay":
        case "messageVisibilityDelay": return getOrCreateConfiguration(target).getMessageVisibilityDelay();
        case "operation": return getOrCreateConfiguration(target).getOperation();
        case "queueprefix":
        case "queuePrefix": return getOrCreateConfiguration(target).getQueuePrefix();
        case "validateclienturi":
        case "validateClientURI": return getOrCreateConfiguration(target).isValidateClientURI();
        default: return null;
        }
    }
}

