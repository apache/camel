/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.azure.queue;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class QueueServiceEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        QueueServiceEndpoint target = (QueueServiceEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "azurequeueclient":
        case "azureQueueClient": target.getConfiguration().setAzureQueueClient(property(camelContext, com.microsoft.azure.storage.queue.CloudQueue.class, value)); return true;
        case "basicpropertybinding":
        case "basicPropertyBinding": target.setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "credentials": target.getConfiguration().setCredentials(property(camelContext, com.microsoft.azure.storage.StorageCredentials.class, value)); return true;
        case "credentialsaccountkey":
        case "credentialsAccountKey": target.getConfiguration().setCredentialsAccountKey(property(camelContext, java.lang.String.class, value)); return true;
        case "credentialsaccountname":
        case "credentialsAccountName": target.getConfiguration().setCredentialsAccountName(property(camelContext, java.lang.String.class, value)); return true;
        case "exceptionhandler":
        case "exceptionHandler": target.setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern":
        case "exchangePattern": target.setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "messagetimetolive":
        case "messageTimeToLive": target.getConfiguration().setMessageTimeToLive(property(camelContext, int.class, value)); return true;
        case "messagevisibilitydelay":
        case "messageVisibilityDelay": target.getConfiguration().setMessageVisibilityDelay(property(camelContext, int.class, value)); return true;
        case "operation": target.getConfiguration().setOperation(property(camelContext, org.apache.camel.component.azure.queue.QueueServiceOperations.class, value)); return true;
        case "queueprefix":
        case "queuePrefix": target.getConfiguration().setQueuePrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "synchronous": target.setSynchronous(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        Map<String, Object> answer = new CaseInsensitiveMap();
        answer.put("azureQueueClient", com.microsoft.azure.storage.queue.CloudQueue.class);
        answer.put("basicPropertyBinding", boolean.class);
        answer.put("bridgeErrorHandler", boolean.class);
        answer.put("credentials", com.microsoft.azure.storage.StorageCredentials.class);
        answer.put("credentialsAccountKey", java.lang.String.class);
        answer.put("credentialsAccountName", java.lang.String.class);
        answer.put("exceptionHandler", org.apache.camel.spi.ExceptionHandler.class);
        answer.put("exchangePattern", org.apache.camel.ExchangePattern.class);
        answer.put("lazyStartProducer", boolean.class);
        answer.put("messageTimeToLive", int.class);
        answer.put("messageVisibilityDelay", int.class);
        answer.put("operation", org.apache.camel.component.azure.queue.QueueServiceOperations.class);
        answer.put("queuePrefix", java.lang.String.class);
        answer.put("synchronous", boolean.class);
        return answer;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        QueueServiceEndpoint target = (QueueServiceEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "azurequeueclient":
        case "azureQueueClient": target.getConfiguration().getAzureQueueClient(); return true;
        case "basicpropertybinding":
        case "basicPropertyBinding": target.isBasicPropertyBinding(); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.isBridgeErrorHandler(); return true;
        case "credentials": target.getConfiguration().getCredentials(); return true;
        case "credentialsaccountkey":
        case "credentialsAccountKey": target.getConfiguration().getCredentialsAccountKey(); return true;
        case "credentialsaccountname":
        case "credentialsAccountName": target.getConfiguration().getCredentialsAccountName(); return true;
        case "exceptionhandler":
        case "exceptionHandler": target.getExceptionHandler(); return true;
        case "exchangepattern":
        case "exchangePattern": target.getExchangePattern(); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.isLazyStartProducer(); return true;
        case "messagetimetolive":
        case "messageTimeToLive": target.getConfiguration().getMessageTimeToLive(); return true;
        case "messagevisibilitydelay":
        case "messageVisibilityDelay": target.getConfiguration().getMessageVisibilityDelay(); return true;
        case "operation": target.getConfiguration().getOperation(); return true;
        case "queueprefix":
        case "queuePrefix": target.getConfiguration().getQueuePrefix(); return true;
        case "synchronous": target.isSynchronous(); return true;
        default: return null;
        }
    }
}

