/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.twilio;

import java.net.URISyntaxException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.camel.spi.EndpointUriFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class TwilioEndpointUriFactory extends org.apache.camel.support.component.EndpointUriFactorySupport implements EndpointUriFactory {

    private static final String BASE = ":apiName/methodName";

    private static final Set<String> PROPERTY_NAMES;
    static {
        Set<String> set = new HashSet<>(69);
        set.add("apiName");
        set.add("methodName");
        set.add("inBody");
        set.add("bridgeErrorHandler");
        set.add("sendEmptyMessageWhenIdle");
        set.add("exceptionHandler");
        set.add("exchangePattern");
        set.add("pollStrategy");
        set.add("lazyStartProducer");
        set.add("basicPropertyBinding");
        set.add("synchronous");
        set.add("backoffErrorThreshold");
        set.add("backoffIdleThreshold");
        set.add("backoffMultiplier");
        set.add("delay");
        set.add("greedy");
        set.add("initialDelay");
        set.add("repeatCount");
        set.add("runLoggingLevel");
        set.add("scheduledExecutorService");
        set.add("scheduler");
        set.add("schedulerProperties");
        set.add("startScheduler");
        set.add("timeUnit");
        set.add("useFixedDelay");
        set.add("applicationSid");
        set.add("areaCode");
        set.add("body");
        set.add("callbackUrl");
        set.add("city");
        set.add("credentialListSid");
        set.add("customerName");
        set.add("domainName");
        set.add("endDate");
        set.add("friendlyName");
        set.add("from");
        set.add("ipAccessControlListSid");
        set.add("ipAddress");
        set.add("isoCountry");
        set.add("mediaUrl");
        set.add("messagingServiceSid");
        set.add("password");
        set.add("pathAccountSid");
        set.add("pathAddOnResultSid");
        set.add("pathAddressSid");
        set.add("pathCallSid");
        set.add("pathConferenceSid");
        set.add("pathCountryCode");
        set.add("pathCredentialListSid");
        set.add("pathDomainSid");
        set.add("pathIpAccessControlListSid");
        set.add("pathMessageSid");
        set.add("pathQueueSid");
        set.add("pathRecordingSid");
        set.add("pathReferenceSid");
        set.add("pathSid");
        set.add("phoneNumber");
        set.add("postalCode");
        set.add("qualityScore");
        set.add("region");
        set.add("startDate");
        set.add("status");
        set.add("street");
        set.add("to");
        set.add("triggerValue");
        set.add("twiml");
        set.add("url");
        set.add("usageCategory");
        set.add("username");
        PROPERTY_NAMES = set;
    }

    @Override
    public boolean isEnabled(String scheme) {
        return "twilio".equals(scheme);
    }

    @Override
    public String buildUri(String scheme, Map<String, Object> properties) throws URISyntaxException {
        String syntax = scheme + BASE;
        String uri = syntax;

        Map<String, Object> copy = new HashMap<>(properties);

        uri = buildPathParameter(syntax, uri, "apiName", null, true, copy);
        uri = buildPathParameter(syntax, uri, "methodName", null, true, copy);
        uri = buildQueryParameters(uri, copy);
        return uri;
    }

    @Override
    public Set<String> propertyNames() {
        return PROPERTY_NAMES;
    }

    @Override
    public boolean isLenientProperties() {
        return false;
    }
}

