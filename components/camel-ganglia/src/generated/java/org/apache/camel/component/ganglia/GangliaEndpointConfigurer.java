/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.ganglia;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class GangliaEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "dmax": ((GangliaEndpoint) target).getConfiguration().setDmax(property(camelContext, int.class, value)); return true;
        case "groupName": ((GangliaEndpoint) target).getConfiguration().setGroupName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazyStartProducer": ((GangliaEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "metricName": ((GangliaEndpoint) target).getConfiguration().setMetricName(property(camelContext, java.lang.String.class, value)); return true;
        case "mode": ((GangliaEndpoint) target).getConfiguration().setMode(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetric.UDPAddressingMode.class, value)); return true;
        case "prefix": ((GangliaEndpoint) target).getConfiguration().setPrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "slope": ((GangliaEndpoint) target).getConfiguration().setSlope(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetricSlope.class, value)); return true;
        case "spoofHostname": ((GangliaEndpoint) target).getConfiguration().setSpoofHostname(property(camelContext, java.lang.String.class, value)); return true;
        case "tmax": ((GangliaEndpoint) target).getConfiguration().setTmax(property(camelContext, int.class, value)); return true;
        case "ttl": ((GangliaEndpoint) target).getConfiguration().setTtl(property(camelContext, int.class, value)); return true;
        case "type": ((GangliaEndpoint) target).getConfiguration().setType(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetricType.class, value)); return true;
        case "units": ((GangliaEndpoint) target).getConfiguration().setUnits(property(camelContext, java.lang.String.class, value)); return true;
        case "wireFormat31x": ((GangliaEndpoint) target).getConfiguration().setWireFormat31x(property(camelContext, boolean.class, value)); return true;
        case "basicPropertyBinding": ((GangliaEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((GangliaEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "dmax": ((GangliaEndpoint) target).getConfiguration().setDmax(property(camelContext, int.class, value)); return true;
        case "groupname": ((GangliaEndpoint) target).getConfiguration().setGroupName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer": ((GangliaEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "metricname": ((GangliaEndpoint) target).getConfiguration().setMetricName(property(camelContext, java.lang.String.class, value)); return true;
        case "mode": ((GangliaEndpoint) target).getConfiguration().setMode(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetric.UDPAddressingMode.class, value)); return true;
        case "prefix": ((GangliaEndpoint) target).getConfiguration().setPrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "slope": ((GangliaEndpoint) target).getConfiguration().setSlope(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetricSlope.class, value)); return true;
        case "spoofhostname": ((GangliaEndpoint) target).getConfiguration().setSpoofHostname(property(camelContext, java.lang.String.class, value)); return true;
        case "tmax": ((GangliaEndpoint) target).getConfiguration().setTmax(property(camelContext, int.class, value)); return true;
        case "ttl": ((GangliaEndpoint) target).getConfiguration().setTtl(property(camelContext, int.class, value)); return true;
        case "type": ((GangliaEndpoint) target).getConfiguration().setType(property(camelContext, info.ganglia.gmetric4j.gmetric.GMetricType.class, value)); return true;
        case "units": ((GangliaEndpoint) target).getConfiguration().setUnits(property(camelContext, java.lang.String.class, value)); return true;
        case "wireformat31x": ((GangliaEndpoint) target).getConfiguration().setWireFormat31x(property(camelContext, boolean.class, value)); return true;
        case "basicpropertybinding": ((GangliaEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((GangliaEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

}

