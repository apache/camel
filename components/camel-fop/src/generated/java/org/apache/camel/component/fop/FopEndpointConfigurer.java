/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.fop;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class FopEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        FopEndpoint target = (FopEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "fopfactory":
        case "fopFactory": target.setFopFactory(property(camelContext, org.apache.fop.apps.FopFactory.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "synchronous": target.setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "userconfigurl":
        case "userConfigURL": target.setUserConfigURL(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "fopfactory":
        case "fopFactory": return org.apache.fop.apps.FopFactory.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "synchronous": return boolean.class;
        case "userconfigurl":
        case "userConfigURL": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        FopEndpoint target = (FopEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "fopfactory":
        case "fopFactory": return target.getFopFactory();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "synchronous": return target.isSynchronous();
        case "userconfigurl":
        case "userConfigURL": return target.getUserConfigURL();
        default: return null;
        }
    }
}

