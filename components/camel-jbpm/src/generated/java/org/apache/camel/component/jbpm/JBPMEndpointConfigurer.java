/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.jbpm;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class JBPMEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "attachmentId": ((JBPMEndpoint) target).getConfiguration().setAttachmentId(property(camelContext, java.lang.Long.class, value)); return true;
        case "contentId": ((JBPMEndpoint) target).getConfiguration().setContentId(property(camelContext, java.lang.Long.class, value)); return true;
        case "deploymentId": ((JBPMEndpoint) target).getConfiguration().setDeploymentId(property(camelContext, java.lang.String.class, value)); return true;
        case "emitterSendItems": ((JBPMEndpoint) target).getConfiguration().setEmitterSendItems(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "event": ((JBPMEndpoint) target).getConfiguration().setEvent(property(camelContext, java.lang.Object.class, value)); return true;
        case "eventType": ((JBPMEndpoint) target).getConfiguration().setEventType(property(camelContext, java.lang.String.class, value)); return true;
        case "identifier": ((JBPMEndpoint) target).getConfiguration().setIdentifier(property(camelContext, java.lang.String.class, value)); return true;
        case "maxNumber": ((JBPMEndpoint) target).getConfiguration().setMaxNumber(property(camelContext, java.lang.Integer.class, value)); return true;
        case "page": ((JBPMEndpoint) target).getConfiguration().setPage(property(camelContext, java.lang.Integer.class, value)); return true;
        case "pageSize": ((JBPMEndpoint) target).getConfiguration().setPageSize(property(camelContext, java.lang.Integer.class, value)); return true;
        case "processId": ((JBPMEndpoint) target).getConfiguration().setProcessId(property(camelContext, java.lang.String.class, value)); return true;
        case "processInstanceId": ((JBPMEndpoint) target).getConfiguration().setProcessInstanceId(property(camelContext, java.lang.Long.class, value)); return true;
        case "targetUserId": ((JBPMEndpoint) target).getConfiguration().setTargetUserId(property(camelContext, java.lang.String.class, value)); return true;
        case "task": ((JBPMEndpoint) target).getConfiguration().setTask(property(camelContext, org.kie.api.task.model.Task.class, value)); return true;
        case "taskId": ((JBPMEndpoint) target).getConfiguration().setTaskId(property(camelContext, java.lang.Long.class, value)); return true;
        case "timeout": ((JBPMEndpoint) target).getConfiguration().setTimeout(property(camelContext, java.lang.Integer.class, value)); return true;
        case "userId": ((JBPMEndpoint) target).getConfiguration().setUserId(property(camelContext, java.lang.String.class, value)); return true;
        case "value": ((JBPMEndpoint) target).getConfiguration().setValue(property(camelContext, java.lang.Object.class, value)); return true;
        case "workItemId": ((JBPMEndpoint) target).getConfiguration().setWorkItemId(property(camelContext, java.lang.Long.class, value)); return true;
        case "bridgeErrorHandler": ((JBPMEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionHandler": ((JBPMEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangePattern": ((JBPMEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazyStartProducer": ((JBPMEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": ((JBPMEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "basicPropertyBinding": ((JBPMEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "entities": ((JBPMEndpoint) target).getConfiguration().setEntities(property(camelContext, java.util.List.class, value)); return true;
        case "extraJaxbClasses": ((JBPMEndpoint) target).getConfiguration().setExtraJaxbClasses(property(camelContext, java.lang.Class[].class, value)); return true;
        case "parameters": ((JBPMEndpoint) target).getConfiguration().setParameters(property(camelContext, java.util.Map.class, value)); return true;
        case "synchronous": ((JBPMEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "statuses": ((JBPMEndpoint) target).getConfiguration().setStatuses(property(camelContext, java.util.List.class, value)); return true;
        case "password": ((JBPMEndpoint) target).getConfiguration().setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "userName": ((JBPMEndpoint) target).getConfiguration().setUserName(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "attachmentid": ((JBPMEndpoint) target).getConfiguration().setAttachmentId(property(camelContext, java.lang.Long.class, value)); return true;
        case "contentid": ((JBPMEndpoint) target).getConfiguration().setContentId(property(camelContext, java.lang.Long.class, value)); return true;
        case "deploymentid": ((JBPMEndpoint) target).getConfiguration().setDeploymentId(property(camelContext, java.lang.String.class, value)); return true;
        case "emittersenditems": ((JBPMEndpoint) target).getConfiguration().setEmitterSendItems(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "event": ((JBPMEndpoint) target).getConfiguration().setEvent(property(camelContext, java.lang.Object.class, value)); return true;
        case "eventtype": ((JBPMEndpoint) target).getConfiguration().setEventType(property(camelContext, java.lang.String.class, value)); return true;
        case "identifier": ((JBPMEndpoint) target).getConfiguration().setIdentifier(property(camelContext, java.lang.String.class, value)); return true;
        case "maxnumber": ((JBPMEndpoint) target).getConfiguration().setMaxNumber(property(camelContext, java.lang.Integer.class, value)); return true;
        case "page": ((JBPMEndpoint) target).getConfiguration().setPage(property(camelContext, java.lang.Integer.class, value)); return true;
        case "pagesize": ((JBPMEndpoint) target).getConfiguration().setPageSize(property(camelContext, java.lang.Integer.class, value)); return true;
        case "processid": ((JBPMEndpoint) target).getConfiguration().setProcessId(property(camelContext, java.lang.String.class, value)); return true;
        case "processinstanceid": ((JBPMEndpoint) target).getConfiguration().setProcessInstanceId(property(camelContext, java.lang.Long.class, value)); return true;
        case "targetuserid": ((JBPMEndpoint) target).getConfiguration().setTargetUserId(property(camelContext, java.lang.String.class, value)); return true;
        case "task": ((JBPMEndpoint) target).getConfiguration().setTask(property(camelContext, org.kie.api.task.model.Task.class, value)); return true;
        case "taskid": ((JBPMEndpoint) target).getConfiguration().setTaskId(property(camelContext, java.lang.Long.class, value)); return true;
        case "timeout": ((JBPMEndpoint) target).getConfiguration().setTimeout(property(camelContext, java.lang.Integer.class, value)); return true;
        case "userid": ((JBPMEndpoint) target).getConfiguration().setUserId(property(camelContext, java.lang.String.class, value)); return true;
        case "value": ((JBPMEndpoint) target).getConfiguration().setValue(property(camelContext, java.lang.Object.class, value)); return true;
        case "workitemid": ((JBPMEndpoint) target).getConfiguration().setWorkItemId(property(camelContext, java.lang.Long.class, value)); return true;
        case "bridgeerrorhandler": ((JBPMEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler": ((JBPMEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern": ((JBPMEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazystartproducer": ((JBPMEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": ((JBPMEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "basicpropertybinding": ((JBPMEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "entities": ((JBPMEndpoint) target).getConfiguration().setEntities(property(camelContext, java.util.List.class, value)); return true;
        case "extrajaxbclasses": ((JBPMEndpoint) target).getConfiguration().setExtraJaxbClasses(property(camelContext, java.lang.Class[].class, value)); return true;
        case "parameters": ((JBPMEndpoint) target).getConfiguration().setParameters(property(camelContext, java.util.Map.class, value)); return true;
        case "synchronous": ((JBPMEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "statuses": ((JBPMEndpoint) target).getConfiguration().setStatuses(property(camelContext, java.util.List.class, value)); return true;
        case "password": ((JBPMEndpoint) target).getConfiguration().setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "username": ((JBPMEndpoint) target).getConfiguration().setUserName(property(camelContext, java.lang.String.class, value)); return true;
            default: return false;
        }
    }

}

