/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.avro;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class AvroEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        AvroEndpoint target = (AvroEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "basicpropertybinding":
        case "basicPropertyBinding": target.setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler":
        case "exceptionHandler": target.setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern":
        case "exchangePattern": target.setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "protocol": target.getConfiguration().setProtocol(property(camelContext, org.apache.avro.Protocol.class, value)); return true;
        case "protocolclassname":
        case "protocolClassName": target.getConfiguration().setProtocolClassName(property(camelContext, java.lang.String.class, value)); return true;
        case "protocollocation":
        case "protocolLocation": target.getConfiguration().setProtocolLocation(property(camelContext, java.lang.String.class, value)); return true;
        case "reflectionprotocol":
        case "reflectionProtocol": target.getConfiguration().setReflectionProtocol(property(camelContext, boolean.class, value)); return true;
        case "singleparameter":
        case "singleParameter": target.getConfiguration().setSingleParameter(property(camelContext, boolean.class, value)); return true;
        case "synchronous": target.setSynchronous(property(camelContext, boolean.class, value)); return true;
        case "uriauthority":
        case "uriAuthority": target.getConfiguration().setUriAuthority(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

}

