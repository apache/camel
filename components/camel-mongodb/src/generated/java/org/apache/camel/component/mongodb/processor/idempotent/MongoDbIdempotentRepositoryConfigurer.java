/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.mongodb.processor.idempotent;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.mongodb.processor.idempotent.MongoDbIdempotentRepository;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.GenerateConfigurerMojo")
@SuppressWarnings("unchecked")
public class MongoDbIdempotentRepositoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.mongodb.processor.idempotent.MongoDbIdempotentRepository target = (org.apache.camel.component.mongodb.processor.idempotent.MongoDbIdempotentRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "collectionname":
        case "collectionName": target.setCollectionName(property(camelContext, java.lang.String.class, value)); return true;
        case "dbname":
        case "dbName": target.setDbName(property(camelContext, java.lang.String.class, value)); return true;
        case "mongoclient":
        case "mongoClient": target.setMongoClient(property(camelContext, com.mongodb.client.MongoClient.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "collectionname":
        case "collectionName": return java.lang.String.class;
        case "dbname":
        case "dbName": return java.lang.String.class;
        case "mongoclient":
        case "mongoClient": return com.mongodb.client.MongoClient.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.mongodb.processor.idempotent.MongoDbIdempotentRepository target = (org.apache.camel.component.mongodb.processor.idempotent.MongoDbIdempotentRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "collectionname":
        case "collectionName": return target.getCollectionName();
        case "dbname":
        case "dbName": return target.getDbName();
        case "mongoclient":
        case "mongoClient": return target.getMongoClient();
        default: return null;
        }
    }
}

