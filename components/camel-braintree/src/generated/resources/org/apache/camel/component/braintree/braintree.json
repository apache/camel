{
  "component": {
    "kind": "component",
    "name": "braintree",
    "title": "Braintree",
    "description": "Process payments using Braintree Payments.",
    "deprecated": false,
    "firstVersion": "2.17.0",
    "label": "saas",
    "javaType": "org.apache.camel.component.braintree.BraintreeComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-braintree",
    "version": "4.4.0-SNAPSHOT",
    "scheme": "braintree",
    "extendsScheme": "",
    "syntax": "braintree:apiName\/methodName",
    "async": false,
    "api": true,
    "apiSyntax": "apiName\/methodName",
    "consumerOnly": false,
    "producerOnly": true,
    "lenientProperties": false,
    "remote": true
  },
  "componentProperties": {
    "lazyStartProducer": { "index": 0, "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "index": 1, "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." },
    "configuration": { "index": 2, "kind": "property", "displayName": "Configuration", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.apache.camel.component.braintree.BraintreeConfiguration", "deprecated": false, "autowired": false, "secret": false, "description": "Component configuration" }
  },
  "properties": {
    "apiName": { "index": 0, "kind": "path", "displayName": "Api Name", "group": "producer", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.braintree.internal.BraintreeApiName", "enum": [ "ADD_ON", "ADDRESS", "CLIENT_TOKEN", "CREDIT_CARD_VERIFICATION", "CUSTOMER", "DISCOUNT", "DISPUTE", "DOCUMENT_UPLOAD", "MERCHANT_ACCOUNT", "PAYMENT_METHOD", "PAYMENT_METHOD_NONCE", "OAUTH", "PLAN", "REPORT", "SETTLEMENT_BATCH_SUMMARY", "SUBSCRIPTION", "TRANSACTION", "US_BANK_ACCOUNT", "WEBHOOK_NOTIFICATION" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "What kind of operation to perform" },
    "methodName": { "index": 1, "kind": "path", "displayName": "Method Name", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "enum": [ "accept", "addFileEvidence", "addTextEvidence", "cancel", "cancelRelease", "cloneTransaction", "create", "createForCurrency", "credit", "delete", "fetchMerchantAccounts", "finalize", "find", "generate", "grant", "holdInEscrow", "parse", "refund", "releaseFromEscrow", "removeEvidence", "retryCharge", "revoke", "sale", "search", "submitForPartialSettlement", "submitForSettlement", "transactionLevelFees", "update", "updateDetails", "verify", "voidTransaction" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "What sub operation to use for the selected operation" },
    "environment": { "index": 2, "kind": "parameter", "displayName": "Environment", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The environment Either SANDBOX or PRODUCTION" },
    "inBody": { "index": 3, "kind": "parameter", "displayName": "In Body", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "merchantId": { "index": 4, "kind": "parameter", "displayName": "Merchant Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The merchant id provided by Braintree." },
    "lazyStartProducer": { "index": 5, "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer (advanced)", "label": "producer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "httpReadTimeout": { "index": 6, "kind": "parameter", "displayName": "Http Read Timeout", "group": "advanced", "label": "advanced", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "Set read timeout for http calls." },
    "httpLogLevel": { "index": 7, "kind": "parameter", "displayName": "Http Log Level", "group": "logging", "label": "logging", "required": false, "type": "string", "javaType": "java.lang.String", "enum": [ "OFF", "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", "FINEST", "ALL" ], "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "Set logging level for http calls, see java.util.logging.Level" },
    "httpLogName": { "index": 8, "kind": "parameter", "displayName": "Http Log Name", "group": "logging", "label": "logging", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "Braintree", "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "Set log category to use to log http calls." },
    "logHandlerEnabled": { "index": 9, "kind": "parameter", "displayName": "Log Handler Enabled", "group": "logging", "label": "logging", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "Sets whether to enable the BraintreeLogHandler. It may be desirable to set this to 'false' where an existing JUL - SLF4J logger bridge is on the classpath. This option can also be configured globally on the BraintreeComponent." },
    "proxyHost": { "index": 10, "kind": "parameter", "displayName": "Proxy Host", "group": "proxy", "label": "proxy", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The proxy host" },
    "proxyPort": { "index": 11, "kind": "parameter", "displayName": "Proxy Port", "group": "proxy", "label": "proxy", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The proxy port" },
    "accessToken": { "index": 12, "kind": "parameter", "displayName": "Access Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The access token granted by a merchant to another in order to process transactions on their behalf. Used in place of environment, merchant id, public key and private key fields." },
    "privateKey": { "index": 13, "kind": "parameter", "displayName": "Private Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The private key provided by Braintree." },
    "publicKey": { "index": 14, "kind": "parameter", "displayName": "Public Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.braintree.BraintreeConfiguration", "configurationField": "configuration", "description": "The public key provided by Braintree." }
  },
  "apis": {
    "address": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to create, delete, find, and update Address objects", "methods": { "create": { "description": "Creates an Address for a Customer", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Address> create(String customerId, com.braintreegateway.AddressRequest request)" ] }, "delete": { "description": "Deletes a Customer's Address", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Address> delete(String customerId, String id)" ] }, "find": { "description": "Finds a Customer's Address", "signatures": [ "com.braintreegateway.Address find(String customerId, String id)" ] }, "update": { "description": "Updates a Customer's Address", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Address> update(String customerId, String id, com.braintreegateway.AddressRequest request)" ] } } },
    "clientToken": { "consumerOnly": false, "producerOnly": true, "description": "Generates client tokens, which are used to authenticate requests made directly on behalf of merchants This class does not need to be instantiated directly", "methods": { "generate": { "description": "", "signatures": [ "String generate()", "String generate(com.braintreegateway.ClientTokenRequest request)" ] } } },
    "creditCardVerification": { "consumerOnly": false, "producerOnly": true, "description": "To verify credit card information", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.CreditCardVerification> create(com.braintreegateway.CreditCardVerificationRequest request)" ] }, "find": { "description": "", "signatures": [ "com.braintreegateway.CreditCardVerification find(String id)" ] }, "search": { "description": "", "signatures": [ "com.braintreegateway.ResourceCollection<com.braintreegateway.CreditCardVerification> search(com.braintreegateway.CreditCardVerificationSearchRequest query)" ] } } },
    "customer": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to create, delete, find, and update Customer objects", "methods": { "create": { "description": "Creates a Customer", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Customer> create(com.braintreegateway.CustomerRequest request)" ] }, "delete": { "description": "Deletes a Customer by id", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Customer> delete(String id)" ] }, "find": { "description": "Finds a Customer by id", "signatures": [ "com.braintreegateway.Customer find(String id)", "com.braintreegateway.Customer find(String id, String associationFilterId)" ] }, "search": { "description": "Finds all Transactions that match the query and returns a ResourceCollection", "signatures": [ "com.braintreegateway.ResourceCollection<com.braintreegateway.Customer> search(com.braintreegateway.CustomerSearchRequest query)" ] }, "update": { "description": "Updates a Customer", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Customer> update(String id, com.braintreegateway.CustomerRequest request)" ] } } },
    "dispute": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with Dispute objects", "methods": { "accept": { "description": "Accept a Dispute, given a dispute ID", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Dispute> accept(String id)" ] }, "addFileEvidence": { "description": "Add File Evidence to a Dispute, given an ID and a FileEvidenceRequest File evidence request", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.DisputeEvidence> addFileEvidence(String disputeId, String documentId)", "com.braintreegateway.Result<com.braintreegateway.DisputeEvidence> addFileEvidence(String disputeId, com.braintreegateway.FileEvidenceRequest fileEvidenceRequest)" ] }, "addTextEvidence": { "description": "Add Text Evidence to a Dispute, given an ID and content", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.DisputeEvidence> addTextEvidence(String id, String content)", "com.braintreegateway.Result<com.braintreegateway.DisputeEvidence> addTextEvidence(String id, com.braintreegateway.TextEvidenceRequest textEvidenceRequest)" ] }, "finalize": { "description": "Finalize a Dispute, given an ID", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Dispute> finalize(String id)" ] }, "find": { "description": "Returns a Dispute, given an ID", "signatures": [ "com.braintreegateway.Dispute find(String id)" ] }, "removeEvidence": { "description": "Remove Evidence from a Dispute, given an ID and a DisputeEvidence ID", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Dispute> removeEvidence(String disputeId, String evidenceId)" ] }, "search": { "description": "Finds all Disputes that match the query", "signatures": [ "com.braintreegateway.PaginatedCollection<com.braintreegateway.Dispute> search(com.braintreegateway.DisputeSearchRequest query)" ] } } },
    "documentUpload": { "consumerOnly": false, "producerOnly": true, "description": "API to upload evidence documents", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.DocumentUpload> create(com.braintreegateway.DocumentUploadRequest request)" ] } } },
    "merchantAccount": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to create, find, and update MerchantAccount objects", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.MerchantAccount> create(com.braintreegateway.MerchantAccountRequest request)" ] }, "createForCurrency": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.MerchantAccount> createForCurrency(com.braintreegateway.MerchantAccountCreateForCurrencyRequest request)" ] }, "fetchMerchantAccounts": { "description": "", "signatures": [ "com.braintreegateway.PaginatedResult<com.braintreegateway.MerchantAccount> fetchMerchantAccounts(int page)" ] }, "find": { "description": "", "signatures": [ "com.braintreegateway.MerchantAccount find(String id)" ] }, "update": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.MerchantAccount> update(String id, com.braintreegateway.MerchantAccountRequest request)" ] } } },
    "oauth": { "consumerOnly": false, "producerOnly": true, "description": "", "methods": { "connectUrl": { "description": "", "signatures": [ "String connectUrl(com.braintreegateway.OAuthConnectUrlRequest request)" ] }, "createTokenFromCode": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.OAuthCredentials> createTokenFromCode(com.braintreegateway.OAuthCredentialsRequest request)" ] }, "createTokenFromRefreshToken": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.OAuthCredentials> createTokenFromRefreshToken(com.braintreegateway.OAuthCredentialsRequest request)" ] }, "revokeAccessToken": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.OAuthResult> revokeAccessToken(String accessToken)" ] } } },
    "paymentMethod": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with payments", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.? extends PaymentMethod> create(com.braintreegateway.PaymentMethodRequest request)" ] }, "delete": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.? extends PaymentMethod> delete(String token)", "com.braintreegateway.Result<com.braintreegateway.? extends PaymentMethod> delete(String token, com.braintreegateway.PaymentMethodDeleteRequest request)" ] }, "find": { "description": "", "signatures": [ "com.braintreegateway.PaymentMethod find(String token)" ] }, "grant": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.PaymentMethodNonce> grant(String token)", "com.braintreegateway.Result<com.braintreegateway.PaymentMethodNonce> grant(String token, com.braintreegateway.PaymentMethodGrantRequest grantRequest)" ] }, "revoke": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.? extends PaymentMethod> revoke(String token)" ] }, "update": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.? extends PaymentMethod> update(String token, com.braintreegateway.PaymentMethodRequest request)" ] } } },
    "paymentMethodNonce": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with nonce payments", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.PaymentMethodNonce> create(String paymentMethodToken)", "com.braintreegateway.Result<com.braintreegateway.PaymentMethodNonce> create(com.braintreegateway.PaymentMethodNonceRequest request)" ] }, "find": { "description": "", "signatures": [ "com.braintreegateway.PaymentMethodNonce find(String paymentMethodNonce)" ] } } },
    "plan": { "consumerOnly": false, "producerOnly": true, "description": "", "methods": { "create": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Plan> create(com.braintreegateway.PlanRequest request)" ] }, "find": { "description": "", "signatures": [ "com.braintreegateway.Plan find(String id)" ] }, "update": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Plan> update(String id, com.braintreegateway.PlanRequest request)" ] } } },
    "report": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with reports", "methods": { "transactionLevelFees": { "description": "Retrieves a Transaction-Level Fee Report", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.TransactionLevelFeeReport> transactionLevelFees(com.braintreegateway.TransactionLevelFeeReportRequest request)" ] } } },
    "settlementBatchSummary": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact wit settlement summaries", "methods": { "generate": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.SettlementBatchSummary> generate(java.util.Calendar settlementDate)", "com.braintreegateway.Result<com.braintreegateway.SettlementBatchSummary> generate(java.util.Calendar settlementDate, String groupByCustomField)" ] } } },
    "subscription": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with Subscriptions", "methods": { "cancel": { "description": "Cancels the Subscription with the given id", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Subscription> cancel(String id)" ] }, "create": { "description": "Creates a Subscription", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Subscription> create(com.braintreegateway.SubscriptionRequest request)" ] }, "delete": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Subscription> delete(String customerId, String id)" ] }, "find": { "description": "Finds a Subscription by id", "signatures": [ "com.braintreegateway.Subscription find(String id)" ] }, "retryCharge": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> retryCharge(String subscriptionId)", "com.braintreegateway.Result<com.braintreegateway.Transaction> retryCharge(String subscriptionId, Boolean submitForSettlement)", "com.braintreegateway.Result<com.braintreegateway.Transaction> retryCharge(String subscriptionId, java.math.BigDecimal amount)", "com.braintreegateway.Result<com.braintreegateway.Transaction> retryCharge(String subscriptionId, java.math.BigDecimal amount, Boolean submitForSettlement)" ] }, "search": { "description": "Search for a Subscription", "signatures": [ "com.braintreegateway.ResourceCollection<com.braintreegateway.Subscription> search(com.braintreegateway.SubscriptionSearchRequest searchRequest)" ] }, "update": { "description": "Updates a Subscription", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Subscription> update(String id, com.braintreegateway.SubscriptionRequest request)" ] } } },
    "transaction": { "consumerOnly": false, "producerOnly": true, "description": "Provides methods to interact with Transactions", "methods": { "adjustAuthorization": { "description": "Submits the transaction with the given id to be adjusted for the given amount which must be less than or equal to the authorization amount", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> adjustAuthorization(String id, com.braintreegateway.TransactionRequest request)", "com.braintreegateway.Result<com.braintreegateway.Transaction> adjustAuthorization(String id, java.math.BigDecimal amount)" ] }, "cancelRelease": { "description": "Cancels a pending release of a transaction with the given id from escrow", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> cancelRelease(String id)" ] }, "cloneTransaction": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> cloneTransaction(String id, com.braintreegateway.TransactionCloneRequest request)" ] }, "credit": { "description": "Creates a credit Transaction", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> credit(com.braintreegateway.TransactionRequest request)" ] }, "find": { "description": "Finds a Transaction by id", "signatures": [ "com.braintreegateway.Transaction find(String id)" ] }, "holdInEscrow": { "description": "Holds the transaction with the given id for escrow", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> holdInEscrow(String id)" ] }, "packageTracking": { "description": "Supplement the transaction with package tracking details", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> packageTracking(String id, com.braintreegateway.PackageTrackingRequest packageTrackingRequest)" ] }, "refund": { "description": "Refunds all or part of a previous sale Transaction", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> refund(String id)", "com.braintreegateway.Result<com.braintreegateway.Transaction> refund(String id, com.braintreegateway.TransactionRefundRequest request)", "com.braintreegateway.Result<com.braintreegateway.Transaction> refund(String id, java.math.BigDecimal amount)" ] }, "releaseFromEscrow": { "description": "Submits the transaction with the given id for release", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> releaseFromEscrow(String id)" ] }, "sale": { "description": "Creates a sale Transaction", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> sale(com.braintreegateway.TransactionRequest request)" ] }, "search": { "description": "Finds all Transactions that match the query and returns a ResourceCollection", "signatures": [ "com.braintreegateway.ResourceCollection<com.braintreegateway.Transaction> search(com.braintreegateway.TransactionSearchRequest query)" ] }, "submitForPartialSettlement": { "description": "Submits a partial settlement transaction for the given id", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> submitForPartialSettlement(String id, com.braintreegateway.TransactionRequest request)", "com.braintreegateway.Result<com.braintreegateway.Transaction> submitForPartialSettlement(String id, java.math.BigDecimal amount)" ] }, "submitForSettlement": { "description": "Submits the transaction with the given id to be settled along with a TransactionRequest object", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> submitForSettlement(String id)", "com.braintreegateway.Result<com.braintreegateway.Transaction> submitForSettlement(String id, com.braintreegateway.TransactionRequest request)", "com.braintreegateway.Result<com.braintreegateway.Transaction> submitForSettlement(String id, java.math.BigDecimal amount)" ] }, "updateCustomFields": { "description": "Updates custom field values for a given transaction", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> updateCustomFields(String id, com.braintreegateway.TransactionRequest request)" ] }, "updateDetails": { "description": "Updates details for a transaction that has been submitted for settlement", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> updateDetails(String id, com.braintreegateway.TransactionRequest request)" ] }, "voidTransaction": { "description": "Voids the transaction with the given id", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> voidTransaction(String id)" ] } } },
    "usBankAccount": { "consumerOnly": false, "producerOnly": true, "description": "", "methods": { "find": { "description": "", "signatures": [ "com.braintreegateway.UsBankAccount find(String token)" ] }, "sale": { "description": "", "signatures": [ "com.braintreegateway.Result<com.braintreegateway.Transaction> sale(String token, com.braintreegateway.TransactionRequest transactionRequest)" ] } } },
    "webhookNotification": { "consumerOnly": false, "producerOnly": true, "description": "To retrieve notifications via webhooks", "methods": { "parse": { "description": "", "signatures": [ "com.braintreegateway.WebhookNotification parse(String signature, String payload)" ] }, "parseWithoutSignatureVerification": { "description": "", "signatures": [ "com.braintreegateway.WebhookNotification parseWithoutSignatureVerification(String payload)" ] }, "verify": { "description": "", "signatures": [ "String verify(String challenge)" ] } } }
  },
  "apiProperties": {
    "address": { "methods": { "create": { "properties": { "customerId": { "index": 0, "kind": "parameter", "displayName": "Customer Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.AddressRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request object", "optional": false } } }, "delete": { "properties": { "customerId": { "index": 0, "kind": "parameter", "displayName": "Customer Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Address to delete", "optional": false } } }, "find": { "properties": { "customerId": { "index": 0, "kind": "parameter", "displayName": "Customer Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Address", "optional": false } } }, "update": { "properties": { "customerId": { "index": 0, "kind": "parameter", "displayName": "Customer Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Address", "optional": false }, "request": { "index": 2, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.AddressRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request object containing the AddressRequest parameters", "optional": false } } } } },
    "clientToken": { "methods": { "generate": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.ClientTokenRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "creditCardVerification": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.CreditCardVerificationRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "search": { "properties": { "query": { "index": 0, "kind": "parameter", "displayName": "Query", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.CreditCardVerificationSearchRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "customer": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.CustomerRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "delete": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false } } }, "find": { "properties": { "associationFilterId": { "index": 0, "kind": "parameter", "displayName": "Association Filter Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the association filter to use", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false } } }, "search": { "properties": { "query": { "index": 0, "kind": "parameter", "displayName": "Query", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.CustomerSearchRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request query to use for search", "optional": false } } }, "update": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Customer", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.CustomerRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } } } },
    "dispute": { "methods": { "accept": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to accept", "optional": false } } }, "addFileEvidence": { "properties": { "disputeId": { "index": 0, "kind": "parameter", "displayName": "Dispute Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to add text evidence to", "optional": false }, "documentId": { "index": 1, "kind": "parameter", "displayName": "Document Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The document id of a previously uploaded document", "optional": false }, "fileEvidenceRequest": { "index": 2, "kind": "parameter", "displayName": "File Evidence Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.FileEvidenceRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The file evidence request for the dispute", "optional": false } } }, "addTextEvidence": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The content of the text evidence for the dispute", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to add text evidence to", "optional": false }, "textEvidenceRequest": { "index": 2, "kind": "parameter", "displayName": "Text Evidence Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TextEvidenceRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The text evidence request for the dispute", "optional": false } } }, "finalize": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to finalize", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to find", "optional": false } } }, "removeEvidence": { "properties": { "disputeId": { "index": 0, "kind": "parameter", "displayName": "Dispute Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The dispute id to remove evidence from", "optional": false }, "evidenceId": { "index": 1, "kind": "parameter", "displayName": "Evidence Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The evidence id to remove", "optional": false } } }, "search": { "properties": { "query": { "index": 0, "kind": "parameter", "displayName": "Query", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.DisputeSearchRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The query for what disputes to find", "optional": false } } } } },
    "documentUpload": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.DocumentUploadRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "merchantAccount": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.MerchantAccountRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "createForCurrency": { "properties": { "currencyRequest": { "index": 0, "kind": "parameter", "displayName": "Currency Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.MerchantAccountCreateForCurrencyRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "fetchMerchantAccounts": { "properties": { "page": { "index": 0, "kind": "parameter", "displayName": "Page", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "update": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.MerchantAccountRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "oauth": { "methods": { "connectUrl": { "properties": { "connectRequest": { "index": 0, "kind": "parameter", "displayName": "Connect Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.OAuthConnectUrlRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "createTokenFromCode": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.OAuthCredentialsRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "createTokenFromRefreshToken": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.OAuthCredentialsRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "revokeAccessToken": { "properties": { "accessToken": { "index": 0, "kind": "parameter", "displayName": "Access Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "paymentMethod": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PaymentMethodRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "delete": { "properties": { "deleteRequest": { "index": 0, "kind": "parameter", "displayName": "Delete Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PaymentMethodDeleteRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "token": { "index": 1, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "token": { "index": 0, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "grant": { "properties": { "grantRequest": { "index": 0, "kind": "parameter", "displayName": "Grant Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PaymentMethodGrantRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "token": { "index": 1, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "revoke": { "properties": { "token": { "index": 0, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "update": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PaymentMethodRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "token": { "index": 1, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "paymentMethodNonce": { "methods": { "create": { "properties": { "paymentMethodToken": { "index": 0, "kind": "parameter", "displayName": "Payment Method Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PaymentMethodNonceRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "paymentMethodNonce": { "index": 0, "kind": "parameter", "displayName": "Payment Method Nonce", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "plan": { "methods": { "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PlanRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "update": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PlanRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "report": { "methods": { "transactionLevelFees": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionLevelFeeReportRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } } } },
    "settlementBatchSummary": { "methods": { "generate": { "properties": { "groupByCustomField": { "index": 0, "kind": "parameter", "displayName": "Group By Custom Field", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "settlementDate": { "index": 2, "kind": "parameter", "displayName": "Settlement Date", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.util.Calendar", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "subscription": { "methods": { "cancel": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the Subscription to cancel", "optional": false } } }, "create": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.SubscriptionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "delete": { "properties": { "customerId": { "index": 0, "kind": "parameter", "displayName": "Customer Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Subscription", "optional": false } } }, "retryCharge": { "properties": { "amount": { "index": 0, "kind": "parameter", "displayName": "Amount", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.math.BigDecimal", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "submitForSettlement": { "index": 1, "kind": "parameter", "displayName": "Submit For Settlement", "group": "producer", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "subscriptionId": { "index": 2, "kind": "parameter", "displayName": "Subscription Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "search": { "properties": { "searchRequest": { "index": 0, "kind": "parameter", "displayName": "Search Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.SubscriptionSearchRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The SubscriptionSearchRequest", "optional": false } } }, "update": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Subscription", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.SubscriptionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } } } },
    "transaction": { "methods": { "adjustAuthorization": { "properties": { "amount": { "index": 0, "kind": "parameter", "displayName": "Amount", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.math.BigDecimal", "deprecated": false, "autowired": false, "secret": false, "description": "To be adjusted", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to to be adjusted", "optional": false }, "request": { "index": 2, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "Is the TransactionRequest object with amount details", "optional": false } } }, "cancelRelease": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to cancel release from escrow of", "optional": false } } }, "cloneTransaction": { "properties": { "cloneRequest": { "index": 0, "kind": "parameter", "displayName": "Clone Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionCloneRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "credit": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "find": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The id of the Transaction", "optional": false } } }, "holdInEscrow": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to hold for escrow", "optional": false } } }, "packageTracking": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to supplement the package details for", "optional": false }, "packageTrackingRequest": { "index": 1, "kind": "parameter", "displayName": "Package Tracking Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.PackageTrackingRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The package tracking request related to the transaction", "optional": false } } }, "refund": { "properties": { "amount": { "index": 0, "kind": "parameter", "displayName": "Amount", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.math.BigDecimal", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "refundRequest": { "index": 2, "kind": "parameter", "displayName": "Refund Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRefundRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "releaseFromEscrow": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to submit for release", "optional": false } } }, "sale": { "properties": { "request": { "index": 0, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "search": { "properties": { "query": { "index": 0, "kind": "parameter", "displayName": "Query", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionSearchRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The search query", "optional": false } } }, "submitForPartialSettlement": { "properties": { "amount": { "index": 0, "kind": "parameter", "displayName": "Amount", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.math.BigDecimal", "deprecated": false, "autowired": false, "secret": false, "description": "Of the partial settlement", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to add the partial settlement transaction for", "optional": false }, "request": { "index": 2, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "submitForSettlement": { "properties": { "amount": { "index": 0, "kind": "parameter", "displayName": "Amount", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.math.BigDecimal", "deprecated": false, "autowired": false, "secret": false, "description": "To settle. must be less than or equal to the authorization amount.", "optional": false }, "id": { "index": 1, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to submit for settlement", "optional": false }, "request": { "index": 2, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "updateCustomFields": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction being updated", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "A TransactionRequest object containing custom field info..", "optional": false } } }, "updateDetails": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to update the details for", "optional": false }, "request": { "index": 1, "kind": "parameter", "displayName": "Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The request", "optional": false } } }, "voidTransaction": { "properties": { "id": { "index": 0, "kind": "parameter", "displayName": "Id", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Of the transaction to void", "optional": false } } } } },
    "usBankAccount": { "methods": { "find": { "properties": { "token": { "index": 0, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "sale": { "properties": { "token": { "index": 0, "kind": "parameter", "displayName": "Token", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "transactionRequest": { "index": 1, "kind": "parameter", "displayName": "Transaction Request", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "com.braintreegateway.TransactionRequest", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } },
    "webhookNotification": { "methods": { "parse": { "properties": { "payload": { "index": 0, "kind": "parameter", "displayName": "Payload", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false }, "signature": { "index": 1, "kind": "parameter", "displayName": "Signature", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "parseWithoutSignatureVerification": { "properties": { "payload": { "index": 0, "kind": "parameter", "displayName": "Payload", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } }, "verify": { "properties": { "challenge": { "index": 0, "kind": "parameter", "displayName": "Challenge", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "", "optional": false } } } } }
  }
}
