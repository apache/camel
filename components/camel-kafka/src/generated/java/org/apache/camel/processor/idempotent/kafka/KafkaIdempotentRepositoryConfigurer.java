/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.processor.idempotent.kafka;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class KafkaIdempotentRepositoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository target = (org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bootstrapservers":
        case "BootstrapServers": target.setBootstrapServers(property(camelContext, java.lang.String.class, value)); return true;
        case "maxcachesize":
        case "MaxCacheSize": target.setMaxCacheSize(property(camelContext, int.class, value)); return true;
        case "polldurationms":
        case "PollDurationMs": target.setPollDurationMs(property(camelContext, int.class, value)); return true;
        case "topic":
        case "Topic": target.setTopic(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bootstrapservers":
        case "BootstrapServers": return java.lang.String.class;
        case "maxcachesize":
        case "MaxCacheSize": return int.class;
        case "polldurationms":
        case "PollDurationMs": return int.class;
        case "topic":
        case "Topic": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository target = (org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bootstrapservers":
        case "BootstrapServers": return target.getBootstrapServers();
        case "maxcachesize":
        case "MaxCacheSize": return target.getMaxCacheSize();
        case "polldurationms":
        case "PollDurationMs": return target.getPollDurationMs();
        case "topic":
        case "Topic": return target.getTopic();
        default: return null;
        }
    }
}

