{
  "bean": {
    "kind": "bean",
    "name": "KafkaIdempotentRepository",
    "javaType": "org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository",
    "interfaceType": "org.apache.camel.spi.IdempotentRepository",
    "title": "Kafka Idempotent Repository",
    "description": "Idempotent repository that uses Kafka to store message ids. Uses a local cache of previously seen Message IDs. The topic used must be unique per logical repository (i.e. two routes de-duplicate using different repositories, and different topics) On startup, the instance consumes the full content of the topic, rebuilding the cache to the latest state.",
    "deprecated": true,
    "groupId": "org.apache.camel",
    "artifactId": "camel-kafka",
    "version": "4.6.0-SNAPSHOT",
    "properties": { "topic": { "index": 0, "kind": "property", "displayName": "Topic", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of the Kafka topic used by this idempotent repository. Each functionally-separate repository should use a different topic." }, "bootstrapServers": { "index": 1, "kind": "property", "displayName": "Bootstrap Servers", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The URL for the kafka brokers to use" }, "maxCacheSize": { "index": 2, "kind": "property", "displayName": "Max Cache Size", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "1000", "description": "Sets the maximum size of the local key cache." }, "pollDurationMs": { "index": 3, "kind": "property", "displayName": "Poll Duration Ms", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "100", "description": "Sets the poll duration of the Kafka consumer. The local caches are updated immediately; this value will affect how far behind other peers in the cluster are, which are updating their caches from the topic, relative to the idempotent consumer instance issued the cache action message. The default value of this is 100 If setting this value explicitly, be aware that there is a tradeoff between the remote cache liveness and the volume of network traffic between this repository's consumer and the Kafka brokers. The cache warmup process also depends on there being one poll that fetches nothing - this indicates that the stream has been consumed up to the current point. If the poll duration is excessively long for the rate at which messages are sent on the topic, there exists a possibility that the cache cannot be warmed up and will operate in an inconsistent state relative to its peers until it catches up." } }
  }
}

