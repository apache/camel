<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- START SNIPPET: e1 -->
    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <!-- since we set the skipSendToOriginalEndpoint attribute to true we instruct
             Camel to skip sending the exchange to the original intended destination.
             That means that mock:foo will NOT receive the message, but the message
             is skipped and continued in the original route, so mock:result will receive
             the message. -->
        <interceptSendToEndpoint uri="mock:foo" skipSendToOriginalEndpoint="true">
            <transform>
                <constant>Bye World</constant>
            </transform>
            <to uri="mock:detour"/>
        </interceptSendToEndpoint>

        <route>
            <from uri="direct:third"/>
            <to uri="mock:bar"/>
            <to uri="mock:foo"/>
            <to uri="mock:result"/>
        </route>
    </camelContext>
    <!-- END SNIPPET: e1 -->

</beans>
