/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.elytron;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.undertow.UndertowComponentConfigurer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ElytronComponentConfigurer extends UndertowComponentConfigurer implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        ElytronComponent target = (ElytronComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "elytronprovider":
        case "elytronProvider": target.setElytronProvider(property(camelContext, org.wildfly.security.WildFlyElytronBaseProvider.class, value)); return true;
        case "mechanismname":
        case "mechanismName": target.setMechanismName(property(camelContext, java.lang.String.class, value)); return true;
        case "securitydomainbuilder":
        case "securityDomainBuilder": target.setSecurityDomainBuilder(property(camelContext, org.wildfly.security.auth.server.SecurityDomain.Builder.class, value)); return true;
        default: return super.configure(camelContext, obj, name, value, ignoreCase);
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        Map<String, Object> answer = super.getAllOptions(target);
        answer.put("elytronProvider", org.wildfly.security.WildFlyElytronBaseProvider.class);
        answer.put("mechanismName", java.lang.String.class);
        answer.put("securityDomainBuilder", org.wildfly.security.auth.server.SecurityDomain.Builder.class);
        return answer;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        ElytronComponent target = (ElytronComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "elytronprovider":
        case "elytronProvider": return target.getElytronProvider();
        case "mechanismname":
        case "mechanismName": return target.getMechanismName();
        case "securitydomainbuilder":
        case "securityDomainBuilder": return target.getSecurityDomainBuilder();
        default: return super.getOptionValue(obj, name, ignoreCase);
        }
    }
}

