<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd" xmlns:ns2="null">

    <!-- START SNIPPET: e1 -->
    <!-- Creating mina endpoints is a bit complex so we reuse MinaComponnet
         as a factory bean to create our endpoint, this is the easiest to do -->
  <bean id="myMinaFactory" class="org.apache.camel.component.mina2.Mina2Component">
        <!-- we must provide a camel context so we refer to it by its id -->
    <constructor-arg index="0" ref="myCamel"/>
  </bean>

    <!-- This is our mina endpoint configured with spring, we will use the factory above
         to create it for us. The goal is to invoke the createEndpoint method with the
         mina configuration parameter we defined using the constructor-arg option -->
  <bean id="myMinaEndpoint"
          factory-bean="myMinaFactory"
          factory-method="createEndpoint">
        <!-- and here we can pass it our configuration -->
    <constructor-arg index="0" ref="myMinaConfig"/>
  </bean>

    <!-- this is our mina configuration with plain properties -->
  <bean id="myMinaConfig" class="org.apache.camel.component.mina2.Mina2Configuration">
    <property name="protocol" value="udp"/>
    <property name="host" value="localhost"/>
    <property name="port" value="1234"/>
    <property name="sync" value="false"/> <!-- InOut Exchange. Response is allowed -->
    <property name="minaLogger" value="true"/>
    <property name="textline" value="true"/>
    <property name="encoding" value="UTF-8"/>
  </bean>
    <!-- END SNIPPET: e1 -->

  <camelContext id="myCamel" xmlns="http://camel.apache.org/schema/spring">
        <!-- START SNIPPET: e2 -->
    <route>
            <!-- here we route from or mina endpoint we have defined above -->
      <from ref="myMinaEndpoint"/>
      <to uri="mock:result"/>
    </route>
        <!-- END SNIPPET: e2 -->
  </camelContext>

</beans>
