/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.jclouds;

import org.apache.camel.Exchange;
import org.apache.camel.TypeConversionException;
import org.apache.camel.TypeConverterLoaderException;
import org.apache.camel.spi.TypeConverterLoader;
import org.apache.camel.spi.TypeConverterRegistry;
import org.apache.camel.support.SimpleTypeConverter;
import org.apache.camel.support.TypeConverterSupport;
import org.apache.camel.util.DoubleMap;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public final class JcloudsPayloadConverterLoader implements TypeConverterLoader {

    public JcloudsPayloadConverterLoader() {
    }

    @Override
    public void load(TypeConverterRegistry registry) throws TypeConverterLoaderException {
        registerConverters(registry);
        registerFallbackConverters(registry);
    }

    private void registerConverters(TypeConverterRegistry registry) {
        addTypeConverter(registry, org.jclouds.io.Payload.class, byte[].class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((byte[]) value));
        addTypeConverter(registry, org.jclouds.io.Payload.class, java.io.File.class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((java.io.File) value));
        addTypeConverter(registry, org.jclouds.io.Payload.class, java.io.InputStream.class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((java.io.InputStream) value, exchange));
        addTypeConverter(registry, org.jclouds.io.Payload.class, java.lang.String.class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((java.lang.String) value, exchange));
        addTypeConverter(registry, org.jclouds.io.Payload.class, javax.xml.transform.stream.StreamSource.class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((javax.xml.transform.stream.StreamSource) value, exchange));
        addTypeConverter(registry, org.jclouds.io.Payload.class, org.apache.camel.util.xml.StreamSourceCache.class, false,
            (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.toPayload((org.apache.camel.util.xml.StreamSourceCache) value, exchange));
    }

    private static void addTypeConverter(TypeConverterRegistry registry, Class<?> toType, Class<?> fromType, boolean allowNull, SimpleTypeConverter.ConversionMethod method) { 
        registry.addTypeConverter(toType, fromType, new SimpleTypeConverter(allowNull, method));
    }

    private void registerFallbackConverters(TypeConverterRegistry registry) {
        addFallbackTypeConverter(registry, false, false, (type, exchange, value) -> org.apache.camel.component.jclouds.JcloudsPayloadConverter.convertTo(type, exchange, value, registry));
    }

    private static void addFallbackTypeConverter(TypeConverterRegistry registry, boolean allowNull, boolean canPromote, SimpleTypeConverter.ConversionMethod method) { 
        registry.addFallbackTypeConverter(new SimpleTypeConverter(allowNull, method), canPromote);
    }

}
