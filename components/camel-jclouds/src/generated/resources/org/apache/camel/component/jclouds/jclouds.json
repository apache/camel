{
  "component": {
    "kind": "component",
    "name": "jclouds",
    "title": "JClouds",
    "description": "Interact with jclouds compute & blobstore service.",
    "deprecated": false,
    "firstVersion": "2.9.0",
    "label": "api,cloud,compute",
    "javaType": "org.apache.camel.component.jclouds.JcloudsComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-jclouds",
    "version": "3.7.0-SNAPSHOT",
    "scheme": "jclouds",
    "extendsScheme": "",
    "syntax": "jclouds:command:providerId",
    "async": false,
    "api": false,
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false
  },
  "componentProperties": {
    "blobStores": { "kind": "property", "displayName": "Blob Stores", "group": "common", "required": false, "type": "array", "javaType": "java.util.List<org.jclouds.blobstore.BlobStore>", "deprecated": false, "autowired": false, "secret": false, "description": "To use the given BlobStore which must be configured when using blobstore." },
    "computeServices": { "kind": "property", "displayName": "Compute Services", "group": "common", "required": false, "type": "array", "javaType": "java.util.List<org.jclouds.compute.ComputeService>", "deprecated": false, "autowired": false, "secret": false, "description": "To use the given ComputeService which must be configured when use compute." },
    "bridgeErrorHandler": { "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "lazyStartProducer": { "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." }
  },
  "properties": {
    "command": { "kind": "path", "displayName": "Command", "group": "common", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.jclouds.JcloudsCommand", "enum": [ "blobstore", "compute" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "What command to execute such as blobstore or compute." },
    "providerId": { "kind": "path", "displayName": "Provider Id", "group": "common", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The name of the cloud provider that provides the target service (e.g. aws-s3 or aws_ec2)." },
    "bridgeErrorHandler": { "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "autowired": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut", "InOptionalOut" ], "deprecated": false, "autowired": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "lazyStartProducer": { "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used, or Camel is allowed to use asynchronous processing (if supported)." },
    "blobName": { "kind": "parameter", "displayName": "Blob Name", "group": "blobstore", "label": "producer,blobstore", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The name of the blob." },
    "container": { "kind": "parameter", "displayName": "Container", "group": "blobstore", "label": "blobstore", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The name of the blob container." },
    "directory": { "kind": "parameter", "displayName": "Directory", "group": "blobstore", "label": "consumer,blobstore", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "An optional directory name to use" },
    "group": { "kind": "parameter", "displayName": "Group", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The group that will be assigned to the newly created node. Values depend on the actual cloud provider." },
    "hardwareId": { "kind": "parameter", "displayName": "Hardware Id", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The hardware that will be used for creating a node. Values depend on the actual cloud provider." },
    "imageId": { "kind": "parameter", "displayName": "Image Id", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The imageId that will be used for creating a node. Values depend on the actual cloud provider." },
    "locationId": { "kind": "parameter", "displayName": "Location Id", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The location that will be used for creating a node. Values depend on the actual cloud provider." },
    "nodeId": { "kind": "parameter", "displayName": "Node Id", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The id of the node that will run the script or destroyed." },
    "nodeState": { "kind": "parameter", "displayName": "Node State", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "enum": [ "PENDING", "TERMINATED", "SUSPENDED", "RUNNING", "ERROR", "UNRECOGNIZED" ], "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "To filter by node status to only select running nodes etc." },
    "operation": { "kind": "parameter", "displayName": "Operation", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "Specifies the type of operation that will be performed to the blobstore." },
    "user": { "kind": "parameter", "displayName": "User", "group": "compute", "label": "producer,compute", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.jclouds.JcloudsConfiguration", "configurationField": "configuration", "description": "The user on the target node that will run the script." }
  }
}
