/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.printer;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class PrinterEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        PrinterEndpoint target = (PrinterEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "copies": target.getConfig().setCopies(property(camelContext, int.class, value)); return true;
        case "docflavor":
        case "docFlavor": target.getConfig().setDocFlavor(property(camelContext, javax.print.DocFlavor.class, value)); return true;
        case "flavor": target.getConfig().setFlavor(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "mediasize":
        case "mediaSize": target.getConfig().setMediaSize(property(camelContext, java.lang.String.class, value)); return true;
        case "mediatray":
        case "mediaTray": target.getConfig().setMediaTray(property(camelContext, java.lang.String.class, value)); return true;
        case "mimetype":
        case "mimeType": target.getConfig().setMimeType(property(camelContext, java.lang.String.class, value)); return true;
        case "orientation": target.getConfig().setOrientation(property(camelContext, java.lang.String.class, value)); return true;
        case "printerprefix":
        case "printerPrefix": target.getConfig().setPrinterPrefix(property(camelContext, java.lang.String.class, value)); return true;
        case "sendtoprinter":
        case "sendToPrinter": target.getConfig().setSendToPrinter(property(camelContext, boolean.class, value)); return true;
        case "sides": target.getConfig().setSides(property(camelContext, java.lang.String.class, value)); return true;
        case "synchronous": target.setSynchronous(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "copies": return int.class;
        case "docflavor":
        case "docFlavor": return javax.print.DocFlavor.class;
        case "flavor": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "mediasize":
        case "mediaSize": return java.lang.String.class;
        case "mediatray":
        case "mediaTray": return java.lang.String.class;
        case "mimetype":
        case "mimeType": return java.lang.String.class;
        case "orientation": return java.lang.String.class;
        case "printerprefix":
        case "printerPrefix": return java.lang.String.class;
        case "sendtoprinter":
        case "sendToPrinter": return boolean.class;
        case "sides": return java.lang.String.class;
        case "synchronous": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        PrinterEndpoint target = (PrinterEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "copies": return target.getConfig().getCopies();
        case "docflavor":
        case "docFlavor": return target.getConfig().getDocFlavor();
        case "flavor": return target.getConfig().getFlavor();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "mediasize":
        case "mediaSize": return target.getConfig().getMediaSize();
        case "mediatray":
        case "mediaTray": return target.getConfig().getMediaTray();
        case "mimetype":
        case "mimeType": return target.getConfig().getMimeType();
        case "orientation": return target.getConfig().getOrientation();
        case "printerprefix":
        case "printerPrefix": return target.getConfig().getPrinterPrefix();
        case "sendtoprinter":
        case "sendToPrinter": return target.getConfig().isSendToPrinter();
        case "sides": return target.getConfig().getSides();
        case "synchronous": return target.isSynchronous();
        default: return null;
        }
    }
}

