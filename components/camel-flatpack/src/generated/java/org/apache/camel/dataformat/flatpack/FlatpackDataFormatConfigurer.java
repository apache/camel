/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.dataformat.flatpack;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class FlatpackDataFormatConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        FlatpackDataFormat dataformat = (FlatpackDataFormat) target;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "delimiter": dataformat.setDelimiter(property(camelContext, char.class, value)); return true;
        case "textqualifier":
        case "textQualifier": dataformat.setTextQualifier(property(camelContext, char.class, value)); return true;
        case "ignorefirstrecord":
        case "ignoreFirstRecord": dataformat.setIgnoreFirstRecord(property(camelContext, boolean.class, value)); return true;
        case "fixed": dataformat.setFixed(property(camelContext, boolean.class, value)); return true;
        case "allowshortlines":
        case "allowShortLines": dataformat.setAllowShortLines(property(camelContext, boolean.class, value)); return true;
        case "ignoreextracolumns":
        case "ignoreExtraColumns": dataformat.setIgnoreExtraColumns(property(camelContext, boolean.class, value)); return true;
        case "definition": dataformat.setDefinition(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

}

