{
  "component": {
    "kind": "component",
    "name": "google-drive",
    "title": "Google Drive",
    "description": "Manage files in Google Drive.",
    "deprecated": false,
    "firstVersion": "2.14.0",
    "label": "file,cloud,api",
    "javaType": "org.apache.camel.component.google.drive.GoogleDriveComponent",
    "supportLevel": "Stable",
    "groupId": "org.apache.camel",
    "artifactId": "camel-google-drive",
    "version": "4.4.0-SNAPSHOT",
    "scheme": "google-drive",
    "extendsScheme": "",
    "syntax": "google-drive:apiName\/methodName",
    "async": false,
    "api": true,
    "apiSyntax": "apiName\/methodName",
    "consumerOnly": false,
    "producerOnly": false,
    "lenientProperties": false,
    "remote": true
  },
  "componentProperties": {
    "applicationName": { "index": 0, "kind": "property", "displayName": "Application Name", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Google drive application name. Example would be camel-google-drive\/1.0" },
    "clientId": { "index": 1, "kind": "property", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Client ID of the drive application" },
    "configuration": { "index": 2, "kind": "property", "displayName": "Configuration", "group": "common", "label": "", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "deprecated": false, "autowired": false, "secret": false, "description": "To use the shared configuration" },
    "delegate": { "index": 3, "kind": "property", "displayName": "Delegate", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Delegate for wide-domain service account" },
    "scopes": { "index": 4, "kind": "property", "displayName": "Scopes", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List<java.lang.String>", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Specifies the level of permissions you want a drive application to have to a user account. See https:\/\/developers.google.com\/drive\/web\/scopes for more info." },
    "bridgeErrorHandler": { "index": 5, "kind": "property", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "lazyStartProducer": { "index": 6, "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "index": 7, "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." },
    "clientFactory": { "index": 8, "kind": "property", "displayName": "Client Factory", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.drive.GoogleDriveClientFactory", "deprecated": false, "autowired": false, "secret": false, "description": "To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleDriveClientFactory" },
    "accessToken": { "index": 9, "kind": "property", "displayName": "Access Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage." },
    "clientSecret": { "index": 10, "kind": "property", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Client secret of the drive application" },
    "refreshToken": { "index": 11, "kind": "property", "displayName": "Refresh Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived." },
    "serviceAccountKey": { "index": 12, "kind": "property", "displayName": "Service Account Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:" }
  },
  "properties": {
    "apiName": { "index": 0, "kind": "path", "displayName": "Api Name", "group": "common", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.google.drive.internal.GoogleDriveApiName", "enum": [ "DRIVE_ABOUT", "DRIVE_CHANGES", "DRIVE_CHANNELS", "DRIVE_COMMENTS", "DRIVE_DRIVES", "DRIVE_FILES", "DRIVE_PERMISSIONS", "DRIVE_REPLIES", "DRIVE_REVISIONS", "DRIVE_TEAMDRIVES" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "What kind of operation to perform" },
    "methodName": { "index": 1, "kind": "path", "displayName": "Method Name", "group": "common", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "enum": [ "copy", "delete", "get", "getIdForEmail", "insert", "list", "patch", "stop", "touch", "trash", "untrash", "update", "watch" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "What sub operation to use for the selected operation" },
    "applicationName": { "index": 2, "kind": "parameter", "displayName": "Application Name", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Google drive application name. Example would be camel-google-drive\/1.0" },
    "clientFactory": { "index": 3, "kind": "parameter", "displayName": "Client Factory", "group": "common", "label": "", "required": false, "type": "object", "javaType": "org.apache.camel.component.google.drive.GoogleDriveClientFactory", "deprecated": false, "autowired": false, "secret": false, "description": "To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleDriveClientFactory" },
    "clientId": { "index": 4, "kind": "parameter", "displayName": "Client Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Client ID of the drive application" },
    "delegate": { "index": 5, "kind": "parameter", "displayName": "Delegate", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Delegate for wide-domain service account" },
    "inBody": { "index": 6, "kind": "parameter", "displayName": "In Body", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the name of a parameter to be passed in the exchange In Body" },
    "scopes": { "index": 7, "kind": "parameter", "displayName": "Scopes", "group": "common", "label": "", "required": false, "type": "array", "javaType": "java.util.List<java.lang.String>", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Specifies the level of permissions you want a drive application to have to a user account. See https:\/\/developers.google.com\/drive\/web\/scopes for more info." },
    "sendEmptyMessageWhenIdle": { "index": 8, "kind": "parameter", "displayName": "Send Empty Message When Idle", "group": "consumer", "label": "consumer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "If the polling consumer did not poll any files, you can enable this option to send an empty message (no body) instead." },
    "bridgeErrorHandler": { "index": 9, "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exceptionHandler": { "index": 10, "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "autowired": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored." },
    "exchangePattern": { "index": 11, "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "InOut" ], "deprecated": false, "autowired": false, "secret": false, "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "pollStrategy": { "index": 12, "kind": "parameter", "displayName": "Poll Strategy", "group": "consumer (advanced)", "label": "consumer,advanced", "required": false, "type": "object", "javaType": "org.apache.camel.spi.PollingConsumerPollStrategy", "deprecated": false, "autowired": false, "secret": false, "description": "A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel." },
    "lazyStartProducer": { "index": 13, "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer (advanced)", "label": "producer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "backoffErrorThreshold": { "index": 14, "kind": "parameter", "displayName": "Backoff Error Threshold", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in." },
    "backoffIdleThreshold": { "index": 15, "kind": "parameter", "displayName": "Backoff Idle Threshold", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "The number of subsequent idle polls that should happen before the backoffMultipler should kick-in." },
    "backoffMultiplier": { "index": 16, "kind": "parameter", "displayName": "Backoff Multiplier", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "int", "deprecated": false, "autowired": false, "secret": false, "description": "To let the scheduled polling consumer backoff if there has been a number of subsequent idles\/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and\/or backoffErrorThreshold must also be configured." },
    "delay": { "index": 17, "kind": "parameter", "displayName": "Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 500, "description": "Milliseconds before the next poll." },
    "greedy": { "index": 18, "kind": "parameter", "displayName": "Greedy", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "If greedy is enabled, then the ScheduledPollConsumer will run immediately again, if the previous run polled 1 or more messages." },
    "initialDelay": { "index": 19, "kind": "parameter", "displayName": "Initial Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 1000, "description": "Milliseconds before the first poll starts." },
    "repeatCount": { "index": 20, "kind": "parameter", "displayName": "Repeat Count", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "integer", "javaType": "long", "deprecated": false, "autowired": false, "secret": false, "defaultValue": 0, "description": "Specifies a maximum limit of number of fires. So if you set it to 1, the scheduler will only fire once. If you set it to 5, it will only fire five times. A value of zero or negative means fire forever." },
    "runLoggingLevel": { "index": 21, "kind": "parameter", "displayName": "Run Logging Level", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "org.apache.camel.LoggingLevel", "enum": [ "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "OFF" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "TRACE", "description": "The consumer logs a start\/complete log line when it polls. This option allows you to configure the logging level for that." },
    "scheduledExecutorService": { "index": 22, "kind": "parameter", "displayName": "Scheduled Executor Service", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.concurrent.ScheduledExecutorService", "deprecated": false, "autowired": false, "secret": false, "description": "Allows for configuring a custom\/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool." },
    "scheduler": { "index": 23, "kind": "parameter", "displayName": "Scheduler", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.lang.Object", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "none", "description": "To use a cron scheduler from either camel-spring or camel-quartz component. Use value spring or quartz for built in scheduler" },
    "schedulerProperties": { "index": 24, "kind": "parameter", "displayName": "Scheduler Properties", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "prefix": "scheduler.", "multiValue": true, "deprecated": false, "autowired": false, "secret": false, "description": "To configure additional properties when using a custom scheduler or any of the Quartz, Spring based scheduler." },
    "startScheduler": { "index": 25, "kind": "parameter", "displayName": "Start Scheduler", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether the scheduler should be auto started." },
    "timeUnit": { "index": 26, "kind": "parameter", "displayName": "Time Unit", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "object", "javaType": "java.util.concurrent.TimeUnit", "enum": [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ], "deprecated": false, "autowired": false, "secret": false, "defaultValue": "MILLISECONDS", "description": "Time unit for initialDelay and delay options." },
    "useFixedDelay": { "index": 27, "kind": "parameter", "displayName": "Use Fixed Delay", "group": "scheduler", "label": "consumer,scheduler", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details." },
    "accessToken": { "index": 28, "kind": "parameter", "displayName": "Access Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage." },
    "clientSecret": { "index": 29, "kind": "parameter", "displayName": "Client Secret", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Client secret of the drive application" },
    "refreshToken": { "index": 30, "kind": "parameter", "displayName": "Refresh Token", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": true, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "OAuth 2 refresh token. Using this, the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived." },
    "serviceAccountKey": { "index": 31, "kind": "parameter", "displayName": "Service Account Key", "group": "security", "label": "security", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.google.drive.GoogleDriveConfiguration", "configurationField": "configuration", "description": "Service account key in json format to authenticate an application as a service account. Accept base64 adding the prefix base64:" }
  },
  "apis": {
    "drive-changes": { "consumerOnly": false, "producerOnly": false, "description": "The changes collection of methods", "methods": { "list": { "description": "Lists the changes for a user or shared drive", "signatures": [ "com.google.api.services.drive.Drive$Changes$List list(String pageToken)" ] }, "watch": { "description": "Subscribes to changes for a user", "signatures": [ "com.google.api.services.drive.Drive$Changes$Watch watch(String pageToken, com.google.api.services.drive.model.Channel content)" ] } } },
    "drive-channels": { "consumerOnly": false, "producerOnly": false, "description": "The channels collection of methods", "methods": { "stop": { "description": "Stops watching resources through this channel", "signatures": [ "com.google.api.services.drive.Drive$Channels$Stop stop(com.google.api.services.drive.model.Channel content)" ] } } },
    "drive-comments": { "consumerOnly": false, "producerOnly": false, "description": "The comments collection of methods", "methods": { "create": { "description": "Creates a comment on a file", "signatures": [ "com.google.api.services.drive.Drive$Comments$Create create(String fileId, com.google.api.services.drive.model.Comment content)" ] }, "delete": { "description": "Deletes a comment", "signatures": [ "com.google.api.services.drive.Drive$Comments$Delete delete(String fileId, String commentId)" ] }, "get": { "description": "Gets a comment by ID", "signatures": [ "com.google.api.services.drive.Drive$Comments$Get get(String fileId, String commentId)" ] }, "list": { "description": "Lists a file's comments", "signatures": [ "com.google.api.services.drive.Drive$Comments$List list(String fileId)" ] }, "update": { "description": "Updates a comment with patch semantics", "signatures": [ "com.google.api.services.drive.Drive$Comments$Update update(String fileId, String commentId, com.google.api.services.drive.model.Comment content)" ] } } },
    "drive-drives": { "consumerOnly": false, "producerOnly": false, "description": "The drives collection of methods", "methods": { "create": { "description": "Creates a shared drive", "signatures": [ "com.google.api.services.drive.Drive$Drives$Create create(String requestId, com.google.api.services.drive.model.Drive content)" ] }, "delete": { "description": "Permanently deletes a shared drive for which the user is an organizer", "signatures": [ "com.google.api.services.drive.Drive$Drives$Delete delete(String driveId)" ] }, "get": { "description": "Gets a shared drive's metadata by ID", "signatures": [ "com.google.api.services.drive.Drive$Drives$Get get(String driveId)" ] }, "hide": { "description": "Hides a shared drive from the default view", "signatures": [ "com.google.api.services.drive.Drive$Drives$Hide hide(String driveId)" ] }, "unhide": { "description": "Restores a shared drive to the default view", "signatures": [ "com.google.api.services.drive.Drive$Drives$Unhide unhide(String driveId)" ] }, "update": { "description": "Updates the metadate for a shared drive", "signatures": [ "com.google.api.services.drive.Drive$Drives$Update update(String driveId, com.google.api.services.drive.model.Drive content)" ] } } },
    "drive-files": { "consumerOnly": false, "producerOnly": false, "description": "The files collection of methods", "methods": { "copy": { "description": "Creates a copy of a file and applies any requested updates with patch semantics", "signatures": [ "com.google.api.services.drive.Drive$Files$Copy copy(String fileId, com.google.api.services.drive.model.File content)" ] }, "create": { "description": "Creates a new file", "signatures": [ "com.google.api.services.drive.Drive$Files$Create create(com.google.api.services.drive.model.File content)", "com.google.api.services.drive.Drive$Files$Create create(com.google.api.services.drive.model.File content, com.google.api.client.http.AbstractInputStreamContent mediaContent)" ] }, "delete": { "description": "Permanently deletes a file owned by the user without moving it to the trash", "signatures": [ "com.google.api.services.drive.Drive$Files$Delete delete(String fileId)" ] }, "export": { "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content", "signatures": [ "com.google.api.services.drive.Drive$Files$Export export(String fileId, String mimeType)" ] }, "get": { "description": "Gets a file's metadata or content by ID", "signatures": [ "com.google.api.services.drive.Drive$Files$Get get(String fileId)" ] }, "listLabels": { "description": "Lists the labels on a file", "signatures": [ "com.google.api.services.drive.Drive$Files$ListLabels listLabels(String fileId)" ] }, "modifyLabels": { "description": "Modifies the set of labels applied to a file", "signatures": [ "com.google.api.services.drive.Drive$Files$ModifyLabels modifyLabels(String fileId, com.google.api.services.drive.model.ModifyLabelsRequest content)" ] }, "update": { "description": "Updates a file's metadata and\/or content", "signatures": [ "com.google.api.services.drive.Drive$Files$Update update(String fileId, com.google.api.services.drive.model.File content)", "com.google.api.services.drive.Drive$Files$Update update(String fileId, com.google.api.services.drive.model.File content, com.google.api.client.http.AbstractInputStreamContent mediaContent)" ] }, "watch": { "description": "Subscribes to changes to a file", "signatures": [ "com.google.api.services.drive.Drive$Files$Watch watch(String fileId, com.google.api.services.drive.model.Channel content)" ] } } },
    "drive-permissions": { "consumerOnly": false, "producerOnly": false, "description": "The permissions collection of methods", "methods": { "create": { "description": "Creates a permission for a file or shared drive", "signatures": [ "com.google.api.services.drive.Drive$Permissions$Create create(String fileId, com.google.api.services.drive.model.Permission content)" ] }, "delete": { "description": "Deletes a permission", "signatures": [ "com.google.api.services.drive.Drive$Permissions$Delete delete(String fileId, String permissionId)" ] }, "get": { "description": "Gets a permission by ID", "signatures": [ "com.google.api.services.drive.Drive$Permissions$Get get(String fileId, String permissionId)" ] }, "list": { "description": "Lists a file's or shared drive's permissions", "signatures": [ "com.google.api.services.drive.Drive$Permissions$List list(String fileId)" ] }, "update": { "description": "Updates a permission with patch semantics", "signatures": [ "com.google.api.services.drive.Drive$Permissions$Update update(String fileId, String permissionId, com.google.api.services.drive.model.Permission content)" ] } } },
    "drive-replies": { "consumerOnly": false, "producerOnly": false, "description": "The replies collection of methods", "methods": { "create": { "description": "Creates a reply to a comment", "signatures": [ "com.google.api.services.drive.Drive$Replies$Create create(String fileId, String commentId, com.google.api.services.drive.model.Reply content)" ] }, "delete": { "description": "Deletes a reply", "signatures": [ "com.google.api.services.drive.Drive$Replies$Delete delete(String fileId, String commentId, String replyId)" ] }, "get": { "description": "Gets a reply by ID", "signatures": [ "com.google.api.services.drive.Drive$Replies$Get get(String fileId, String commentId, String replyId)" ] }, "list": { "description": "Lists a comment's replies", "signatures": [ "com.google.api.services.drive.Drive$Replies$List list(String fileId, String commentId)" ] }, "update": { "description": "Updates a reply with patch semantics", "signatures": [ "com.google.api.services.drive.Drive$Replies$Update update(String fileId, String commentId, String replyId, com.google.api.services.drive.model.Reply content)" ] } } },
    "drive-revisions": { "consumerOnly": false, "producerOnly": false, "description": "The revisions collection of methods", "methods": { "delete": { "description": "Permanently deletes a file version", "signatures": [ "com.google.api.services.drive.Drive$Revisions$Delete delete(String fileId, String revisionId)" ] }, "get": { "description": "Gets a revision's metadata or content by ID", "signatures": [ "com.google.api.services.drive.Drive$Revisions$Get get(String fileId, String revisionId)" ] }, "list": { "description": "Lists a file's revisions", "signatures": [ "com.google.api.services.drive.Drive$Revisions$List list(String fileId)" ] }, "update": { "description": "Updates a revision with patch semantics", "signatures": [ "com.google.api.services.drive.Drive$Revisions$Update update(String fileId, String revisionId, com.google.api.services.drive.model.Revision content)" ] } } },
    "drive-teamdrives": { "consumerOnly": false, "producerOnly": false, "description": "The teamdrives collection of methods", "methods": { "create": { "description": "Deprecated: Use drives", "signatures": [ "com.google.api.services.drive.Drive$Teamdrives$Create create(String requestId, com.google.api.services.drive.model.TeamDrive content)" ] }, "delete": { "description": "Deprecated: Use drives", "signatures": [ "com.google.api.services.drive.Drive$Teamdrives$Delete delete(String teamDriveId)" ] }, "get": { "description": "Deprecated: Use drives", "signatures": [ "com.google.api.services.drive.Drive$Teamdrives$Get get(String teamDriveId)" ] }, "update": { "description": "Deprecated: Use drives", "signatures": [ "com.google.api.services.drive.Drive$Teamdrives$Update update(String teamDriveId, com.google.api.services.drive.model.TeamDrive content)" ] } } }
  },
  "apiProperties": {
    "drive-changes": { "methods": { "list": { "properties": { "pageToken": { "index": 0, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", "optional": false } } }, "watch": { "properties": { "contentChannel": { "index": 0, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Channel", "optional": false }, "pageToken": { "index": 1, "kind": "parameter", "displayName": "Page Token", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", "optional": false } } } } },
    "drive-channels": { "methods": { "stop": { "properties": { "contentChannel": { "index": 0, "kind": "parameter", "displayName": "Content Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Channel", "optional": false } } } } },
    "drive-comments": { "methods": { "create": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Comment", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "delete": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "get": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "list": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "update": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Comment", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Comment", "optional": false }, "fileId": { "index": 2, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } } } },
    "drive-drives": { "methods": { "create": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Drive", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Drive", "optional": false }, "requestId": { "index": 1, "kind": "parameter", "displayName": "Request Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.", "optional": false } } }, "delete": { "properties": { "driveId": { "index": 0, "kind": "parameter", "displayName": "Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the shared drive", "optional": false } } }, "get": { "properties": { "driveId": { "index": 0, "kind": "parameter", "displayName": "Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the shared drive", "optional": false } } }, "hide": { "properties": { "driveId": { "index": 0, "kind": "parameter", "displayName": "Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the shared drive", "optional": false } } }, "unhide": { "properties": { "driveId": { "index": 0, "kind": "parameter", "displayName": "Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the shared drive", "optional": false } } }, "update": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Drive", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Drive", "optional": false }, "driveId": { "index": 1, "kind": "parameter", "displayName": "Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the shared drive", "optional": false } } } } },
    "drive-files": { "methods": { "copy": { "properties": { "file": { "index": 0, "kind": "parameter", "displayName": "File", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.File", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.File", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "create": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.File", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.File media metadata or null if none", "optional": false }, "mediaContent": { "index": 1, "kind": "parameter", "displayName": "Media Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.http.AbstractInputStreamContent", "deprecated": false, "autowired": false, "secret": false, "description": "The media HTTP content", "optional": false } } }, "delete": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "export": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "mimeType": { "index": 1, "kind": "parameter", "displayName": "Mime Type", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Required. The MIME type of the format requested for this export.", "optional": false } } }, "get": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "listLabels": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID for the file", "optional": false } } }, "modifyLabels": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file to which the labels belong", "optional": false }, "modifyLabelsRequest": { "index": 1, "kind": "parameter", "displayName": "Modify Labels Request", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.ModifyLabelsRequest", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.ModifyLabelsRequest", "optional": false } } }, "update": { "properties": { "file": { "index": 0, "kind": "parameter", "displayName": "File", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.File", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.File media metadata or null if none", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "mediaContent": { "index": 2, "kind": "parameter", "displayName": "Media Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.client.http.AbstractInputStreamContent", "deprecated": false, "autowired": false, "secret": false, "description": "The media HTTP content", "optional": false } } }, "watch": { "properties": { "channel": { "index": 0, "kind": "parameter", "displayName": "Channel", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Channel", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Channel", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } } } },
    "drive-permissions": { "methods": { "create": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Permission", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Permission", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file or shared drive", "optional": false } } }, "delete": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file or shared drive", "optional": false }, "permissionId": { "index": 1, "kind": "parameter", "displayName": "Permission Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the permission", "optional": false } } }, "get": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "permissionId": { "index": 1, "kind": "parameter", "displayName": "Permission Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the permission", "optional": false } } }, "list": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file or shared drive", "optional": false } } }, "update": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Permission", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Permission", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file or shared drive", "optional": false }, "permissionId": { "index": 2, "kind": "parameter", "displayName": "Permission Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the permission", "optional": false } } } } },
    "drive-replies": { "methods": { "create": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Reply", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Reply", "optional": false }, "fileId": { "index": 2, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "delete": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "replyId": { "index": 2, "kind": "parameter", "displayName": "Reply Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the reply", "optional": false } } }, "get": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "replyId": { "index": 2, "kind": "parameter", "displayName": "Reply Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the reply", "optional": false } } }, "list": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "update": { "properties": { "commentId": { "index": 0, "kind": "parameter", "displayName": "Comment Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the comment", "optional": false }, "content": { "index": 1, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Reply", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Reply", "optional": false }, "fileId": { "index": 2, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "replyId": { "index": 3, "kind": "parameter", "displayName": "Reply Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the reply", "optional": false } } } } },
    "drive-revisions": { "methods": { "delete": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "revisionId": { "index": 1, "kind": "parameter", "displayName": "Revision Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the revision", "optional": false } } }, "get": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "revisionId": { "index": 1, "kind": "parameter", "displayName": "Revision Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the revision", "optional": false } } }, "list": { "properties": { "fileId": { "index": 0, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false } } }, "update": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.Revision", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.Revision", "optional": false }, "fileId": { "index": 1, "kind": "parameter", "displayName": "File Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the file", "optional": false }, "revisionId": { "index": 2, "kind": "parameter", "displayName": "Revision Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the revision", "optional": false } } } } },
    "drive-teamdrives": { "methods": { "create": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.TeamDrive", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.TeamDrive", "optional": false }, "requestId": { "index": 1, "kind": "parameter", "displayName": "Request Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.", "optional": false } } }, "delete": { "properties": { "teamDriveId": { "index": 0, "kind": "parameter", "displayName": "Team Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the Team Drive", "optional": false } } }, "get": { "properties": { "teamDriveId": { "index": 0, "kind": "parameter", "displayName": "Team Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the Team Drive", "optional": false } } }, "update": { "properties": { "content": { "index": 0, "kind": "parameter", "displayName": "Content", "group": "common", "label": "", "required": false, "type": "object", "javaType": "com.google.api.services.drive.model.TeamDrive", "deprecated": false, "autowired": false, "secret": false, "description": "The com.google.api.services.drive.model.TeamDrive", "optional": false }, "teamDriveId": { "index": 1, "kind": "parameter", "displayName": "Team Drive Id", "group": "common", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The ID of the Team Drive", "optional": false } } } } }
  }
}
