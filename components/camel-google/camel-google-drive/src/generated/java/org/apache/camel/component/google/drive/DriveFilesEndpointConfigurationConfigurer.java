/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.google.drive;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.google.drive.DriveFilesEndpointConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.GenerateConfigurerMojo")
@SuppressWarnings("unchecked")
public class DriveFilesEndpointConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, ExtendedPropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("AccessToken", java.lang.String.class);
        map.put("ApiName", org.apache.camel.component.google.drive.internal.GoogleDriveApiName.class);
        map.put("ApplicationName", java.lang.String.class);
        map.put("Channel", com.google.api.services.drive.model.Channel.class);
        map.put("ClientId", java.lang.String.class);
        map.put("ClientSecret", java.lang.String.class);
        map.put("Content", com.google.api.services.drive.model.File.class);
        map.put("Delegate", java.lang.String.class);
        map.put("File", com.google.api.services.drive.model.File.class);
        map.put("FileId", java.lang.String.class);
        map.put("MediaContent", com.google.api.client.http.AbstractInputStreamContent.class);
        map.put("MethodName", java.lang.String.class);
        map.put("MimeType", java.lang.String.class);
        map.put("ModifyLabelsRequest", com.google.api.services.drive.model.ModifyLabelsRequest.class);
        map.put("RefreshToken", java.lang.String.class);
        map.put("Scopes", java.util.List.class);
        map.put("ServiceAccountKey", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.google.drive.DriveFilesEndpointConfiguration target = (org.apache.camel.component.google.drive.DriveFilesEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstoken":
        case "accessToken": target.setAccessToken(property(camelContext, java.lang.String.class, value)); return true;
        case "apiname":
        case "apiName": target.setApiName(property(camelContext, org.apache.camel.component.google.drive.internal.GoogleDriveApiName.class, value)); return true;
        case "applicationname":
        case "applicationName": target.setApplicationName(property(camelContext, java.lang.String.class, value)); return true;
        case "channel": target.setChannel(property(camelContext, com.google.api.services.drive.model.Channel.class, value)); return true;
        case "clientid":
        case "clientId": target.setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "clientsecret":
        case "clientSecret": target.setClientSecret(property(camelContext, java.lang.String.class, value)); return true;
        case "content": target.setContent(property(camelContext, com.google.api.services.drive.model.File.class, value)); return true;
        case "delegate": target.setDelegate(property(camelContext, java.lang.String.class, value)); return true;
        case "file": target.setFile(property(camelContext, com.google.api.services.drive.model.File.class, value)); return true;
        case "fileid":
        case "fileId": target.setFileId(property(camelContext, java.lang.String.class, value)); return true;
        case "mediacontent":
        case "mediaContent": target.setMediaContent(property(camelContext, com.google.api.client.http.AbstractInputStreamContent.class, value)); return true;
        case "methodname":
        case "methodName": target.setMethodName(property(camelContext, java.lang.String.class, value)); return true;
        case "mimetype":
        case "mimeType": target.setMimeType(property(camelContext, java.lang.String.class, value)); return true;
        case "modifylabelsrequest":
        case "modifyLabelsRequest": target.setModifyLabelsRequest(property(camelContext, com.google.api.services.drive.model.ModifyLabelsRequest.class, value)); return true;
        case "refreshtoken":
        case "refreshToken": target.setRefreshToken(property(camelContext, java.lang.String.class, value)); return true;
        case "scopes": target.setScopes(property(camelContext, java.util.List.class, value)); return true;
        case "serviceaccountkey":
        case "serviceAccountKey": target.setServiceAccountKey(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstoken":
        case "accessToken": return java.lang.String.class;
        case "apiname":
        case "apiName": return org.apache.camel.component.google.drive.internal.GoogleDriveApiName.class;
        case "applicationname":
        case "applicationName": return java.lang.String.class;
        case "channel": return com.google.api.services.drive.model.Channel.class;
        case "clientid":
        case "clientId": return java.lang.String.class;
        case "clientsecret":
        case "clientSecret": return java.lang.String.class;
        case "content": return com.google.api.services.drive.model.File.class;
        case "delegate": return java.lang.String.class;
        case "file": return com.google.api.services.drive.model.File.class;
        case "fileid":
        case "fileId": return java.lang.String.class;
        case "mediacontent":
        case "mediaContent": return com.google.api.client.http.AbstractInputStreamContent.class;
        case "methodname":
        case "methodName": return java.lang.String.class;
        case "mimetype":
        case "mimeType": return java.lang.String.class;
        case "modifylabelsrequest":
        case "modifyLabelsRequest": return com.google.api.services.drive.model.ModifyLabelsRequest.class;
        case "refreshtoken":
        case "refreshToken": return java.lang.String.class;
        case "scopes": return java.util.List.class;
        case "serviceaccountkey":
        case "serviceAccountKey": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.google.drive.DriveFilesEndpointConfiguration target = (org.apache.camel.component.google.drive.DriveFilesEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstoken":
        case "accessToken": return target.getAccessToken();
        case "apiname":
        case "apiName": return target.getApiName();
        case "applicationname":
        case "applicationName": return target.getApplicationName();
        case "channel": return target.getChannel();
        case "clientid":
        case "clientId": return target.getClientId();
        case "clientsecret":
        case "clientSecret": return target.getClientSecret();
        case "content": return target.getContent();
        case "delegate": return target.getDelegate();
        case "file": return target.getFile();
        case "fileid":
        case "fileId": return target.getFileId();
        case "mediacontent":
        case "mediaContent": return target.getMediaContent();
        case "methodname":
        case "methodName": return target.getMethodName();
        case "mimetype":
        case "mimeType": return target.getMimeType();
        case "modifylabelsrequest":
        case "modifyLabelsRequest": return target.getModifyLabelsRequest();
        case "refreshtoken":
        case "refreshToken": return target.getRefreshToken();
        case "scopes": return target.getScopes();
        case "serviceaccountkey":
        case "serviceAccountKey": return target.getServiceAccountKey();
        default: return null;
        }
    }

    @Override
    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "scopes": return java.lang.String.class;
        default: return null;
        }
    }
}

