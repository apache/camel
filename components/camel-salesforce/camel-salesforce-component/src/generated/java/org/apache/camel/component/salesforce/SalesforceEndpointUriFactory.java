/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.salesforce;

import java.net.URISyntaxException;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.camel.spi.EndpointUriFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class SalesforceEndpointUriFactory extends org.apache.camel.support.component.EndpointUriFactorySupport implements EndpointUriFactory {

    private static final String BASE = ":operationName:topicName";

    private static final Set<String> PROPERTY_NAMES = Set.of(
            "allOrNone", "apexMethod", "apexQueryParams", "apexUrl", "apiVersion", "backoffIncrement", "batchId",
            "bridgeErrorHandler", "compositeMethod", "contentType", "defaultReplayId", "exceptionHandler",
            "exchangePattern", "fallBackReplayId", "format", "httpClient", "includeDetails", "initialReplayIdMap",
            "instanceId", "jobId", "lazyStartProducer", "limit", "locator", "maxBackoff", "maxRecords",
            "notFoundBehaviour", "notifyForFields", "notifyForOperationCreate", "notifyForOperationDelete",
            "notifyForOperationUndelete", "notifyForOperationUpdate", "notifyForOperations", "objectMapper",
            "operationName", "pkChunking", "pkChunkingChunkSize", "pkChunkingParent", "pkChunkingStartRow", "queryLocator",
            "rawHttpHeaders", "rawMethod", "rawPath", "rawPayload", "rawQueryParameters", "replayId", "reportId",
            "reportMetadata", "resultId", "sObjectBlobFieldName", "sObjectClass", "sObjectFields", "sObjectId",
            "sObjectIdName", "sObjectIdValue", "sObjectName", "sObjectQuery", "sObjectSearch", "streamQueryResult",
            "topicName", "updateTopic");
    private static final Set<String> SECRET_PROPERTY_NAMES = Set.of();
    private static final Set<String> MULTI_VALUE_PREFIXES = Set.of();

    @Override
    public boolean isEnabled(String scheme) {
        return "salesforce".equals(scheme);
    }

    @Override
    public String buildUri(String scheme, Map<String, Object> properties, boolean encode) throws URISyntaxException {
        String syntax = scheme + BASE;
        String uri = syntax;

        Map<String, Object> copy = new HashMap<>(properties);

        uri = buildPathParameter(syntax, uri, "operationName", null, true, copy);
        uri = buildPathParameter(syntax, uri, "topicName", null, false, copy);
        uri = buildQueryParameters(uri, copy, encode);
        return uri;
    }

    @Override
    public Set<String> propertyNames() {
        return PROPERTY_NAMES;
    }

    @Override
    public Set<String> secretPropertyNames() {
        return SECRET_PROPERTY_NAMES;
    }

    @Override
    public Set<String> multiValuePrefixes() {
        return MULTI_VALUE_PREFIXES;
    }

    @Override
    public boolean isLenientProperties() {
        return false;
    }
}

