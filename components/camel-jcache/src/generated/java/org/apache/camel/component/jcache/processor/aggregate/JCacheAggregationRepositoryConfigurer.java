/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.jcache.processor.aggregate;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.jcache.processor.aggregate.JCacheAggregationRepository;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class JCacheAggregationRepositoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.jcache.processor.aggregate.JCacheAggregationRepository target = (org.apache.camel.component.jcache.processor.aggregate.JCacheAggregationRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowserializedheaders":
        case "AllowSerializedHeaders": target.setAllowSerializedHeaders(property(camelContext, boolean.class, value)); return true;
        case "cachename":
        case "CacheName": target.setCacheName(property(camelContext, java.lang.String.class, value)); return true;
        case "configuration":
        case "Configuration": target.setConfiguration(property(camelContext, org.apache.camel.component.jcache.JCacheConfiguration.class, value)); return true;
        case "optimistic":
        case "Optimistic": target.setOptimistic(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowserializedheaders":
        case "AllowSerializedHeaders": return boolean.class;
        case "cachename":
        case "CacheName": return java.lang.String.class;
        case "configuration":
        case "Configuration": return org.apache.camel.component.jcache.JCacheConfiguration.class;
        case "optimistic":
        case "Optimistic": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.jcache.processor.aggregate.JCacheAggregationRepository target = (org.apache.camel.component.jcache.processor.aggregate.JCacheAggregationRepository) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "allowserializedheaders":
        case "AllowSerializedHeaders": return target.isAllowSerializedHeaders();
        case "cachename":
        case "CacheName": return target.getCacheName();
        case "configuration":
        case "Configuration": return target.getConfiguration();
        case "optimistic":
        case "Optimistic": return target.isOptimistic();
        default: return null;
        }
    }
}

