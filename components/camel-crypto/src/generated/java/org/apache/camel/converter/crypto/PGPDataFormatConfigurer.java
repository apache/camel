/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.converter.crypto;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class PGPDataFormatConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        PGPDataFormat dataformat = (PGPDataFormat) target;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "password": dataformat.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "keyfilename":
        case "keyFileName": dataformat.setKeyFileName(property(camelContext, java.lang.String.class, value)); return true;
        case "signaturepassword":
        case "signaturePassword": dataformat.setSignaturePassword(property(camelContext, java.lang.String.class, value)); return true;
        case "signaturekeyfilename":
        case "signatureKeyFileName": dataformat.setSignatureKeyFileName(property(camelContext, java.lang.String.class, value)); return true;
        case "signaturekeyring":
        case "signatureKeyRing": dataformat.setSignatureKeyRing(property(camelContext, byte[].class, value)); return true;
        case "provider": dataformat.setProvider(property(camelContext, java.lang.String.class, value)); return true;
        case "keyuserid":
        case "keyUserid": dataformat.setKeyUserid(property(camelContext, java.lang.String.class, value)); return true;
        case "signaturekeyuserid":
        case "signatureKeyUserid": dataformat.setSignatureKeyUserid(property(camelContext, java.lang.String.class, value)); return true;
        case "armored": dataformat.setArmored(property(camelContext, boolean.class, value)); return true;
        case "integrity": dataformat.setIntegrity(property(camelContext, boolean.class, value)); return true;
        case "hashalgorithm":
        case "hashAlgorithm": dataformat.setHashAlgorithm(property(camelContext, int.class, value)); return true;
        case "algorithm": dataformat.setAlgorithm(property(camelContext, int.class, value)); return true;
        case "compressionalgorithm":
        case "compressionAlgorithm": dataformat.setCompressionAlgorithm(property(camelContext, int.class, value)); return true;
        case "signatureverificationoption":
        case "signatureVerificationOption": dataformat.setSignatureVerificationOption(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

}

