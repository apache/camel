<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    <!-- START SNIPPET: pgp-xml-basic -->
    <dataFormats>
      <!-- will load the file from classpath by default, but you can prefix with file: to load from file system -->
      <pgp id="encrypt" keyFileName="org/apache/camel/component/crypto/pubring.gpg"
           keyUserid="sdude@nowhere.net"/>
      <pgp id="decrypt" keyFileName="org/apache/camel/component/crypto/secring.gpg"
           password="sdude"/>
    </dataFormats>

    <route>
      <from uri="direct:inline"/>
      <marshal ref="encrypt"/>
      <to uri="mock:encrypted"/>
      <unmarshal ref="decrypt"/>
      <to uri="mock:unencrypted"/>
    </route>
    <!-- END SNIPPET: pgp-xml-basic -->
    
    <!-- START SNIPPET: pgp-xml-data-format-bean-with-keyring-bytearray -->
    <route>
      <from uri="direct:pgp-key-ring-byte-array"/>
      <marshal ref="encryptBean"/>
      <to uri="mock:encrypted"/>
      <unmarshal ref="decryptBean"/>
      <to uri="mock:unencrypted"/>
    </route>
  </camelContext>

   <bean id="encryptBean" class="org.apache.camel.converter.crypto.PGPDataFormat">
      <property name="keyUserid" value="sdude@nowhere.net"/>  
      <property name="encryptionKeyRing" ref="pubKeyRing"/>
      <property name="algorithm" value="7"/> <!-- AES128  algorithm -->
      <property name="compressionAlgorithm" value="3"/> <!-- BZ2 compression -->
   </bean>
   
   <bean id="decryptBean" class="org.apache.camel.converter.crypto.PGPDataFormat"> 
      <property name="encryptionKeyRing" ref="secKeyRing"/>
      <property name="passphraseAccessor" ref="passphraseAccessorBean"/>
   </bean>
   
   <!-- bean represents the public key ring as byte array -->
   <bean id="pubKeyRing"
		class="org.apache.camel.converter.crypto.PGPDataFormatTest"
		factory-method="getPublicKeyRing" />
		
	<!-- bean represents the secret key ring as byte array -->	
   <bean id="secKeyRing"
		class="org.apache.camel.converter.crypto.PGPDataFormatTest"
		factory-method="getSecKeyRing" />
        
    <!-- bean passphrase accessor  -->
     <bean id="passphraseAccessorBean"
        class="org.apache.camel.converter.crypto.PGPDataFormatTest"
        factory-method="getPassphraseAccessor" />
    <!-- END SNIPPET:  pgp-xml-data-format-bean-with-keyring-bytearray -->
</beans>