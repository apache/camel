/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.ribbon.cloud;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.ribbon.cloud.RibbonServiceLoadBalancerFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class RibbonServiceLoadBalancerFactoryConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.ribbon.cloud.RibbonServiceLoadBalancerFactory target = (org.apache.camel.component.ribbon.cloud.RibbonServiceLoadBalancerFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientname":
        case "ClientName": target.setClientName(property(camelContext, java.lang.String.class, value)); return true;
        case "namespace":
        case "Namespace": target.setNamespace(property(camelContext, java.lang.String.class, value)); return true;
        case "password":
        case "Password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "properties":
        case "Properties": target.setProperties(property(camelContext, java.util.Map.class, value)); return true;
        case "username":
        case "Username": target.setUsername(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientname":
        case "ClientName": return java.lang.String.class;
        case "namespace":
        case "Namespace": return java.lang.String.class;
        case "password":
        case "Password": return java.lang.String.class;
        case "properties":
        case "Properties": return java.util.Map.class;
        case "username":
        case "Username": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.ribbon.cloud.RibbonServiceLoadBalancerFactory target = (org.apache.camel.component.ribbon.cloud.RibbonServiceLoadBalancerFactory) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientname":
        case "ClientName": return target.getClientName();
        case "namespace":
        case "Namespace": return target.getNamespace();
        case "password":
        case "Password": return target.getPassword();
        case "properties":
        case "Properties": return target.getProperties();
        case "username":
        case "Username": return target.getUsername();
        default: return null;
        }
    }

    @Override
    public Object getCollectionValueType(Object target, String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "properties":
        case "Properties": return java.lang.String.class;
        default: return null;
        }
    }
}

