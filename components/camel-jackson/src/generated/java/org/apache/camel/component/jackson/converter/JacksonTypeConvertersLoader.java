/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.jackson.converter;

import org.apache.camel.Exchange;
import org.apache.camel.TypeConversionException;
import org.apache.camel.TypeConverterLoaderException;
import org.apache.camel.spi.TypeConverterLoader;
import org.apache.camel.spi.TypeConverterRegistry;
import org.apache.camel.support.SimpleTypeConverter;
import org.apache.camel.support.TypeConverterSupport;
import org.apache.camel.util.DoubleMap;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public final class JacksonTypeConvertersLoader implements TypeConverterLoader {

    public JacksonTypeConvertersLoader() {
    }

    @Override
    public void load(TypeConverterRegistry registry) throws TypeConverterLoaderException {
        registerFallbackConverters(registry);
    }

    private void registerFallbackConverters(TypeConverterRegistry registry) {
        addFallbackTypeConverter(registry, false, false, (type, exchange, value) -> getJacksonTypeConverters().convertTo(type, exchange, value, registry));
    }

    private static void addFallbackTypeConverter(TypeConverterRegistry registry, boolean allowNull, boolean canPromote, SimpleTypeConverter.ConversionMethod method) { 
        registry.addFallbackTypeConverter(new SimpleTypeConverter(allowNull, method), canPromote);
    }

    private volatile org.apache.camel.component.jackson.converter.JacksonTypeConverters jacksonTypeConverters;
    private org.apache.camel.component.jackson.converter.JacksonTypeConverters getJacksonTypeConverters() {
        if (jacksonTypeConverters == null) {
            jacksonTypeConverters = new org.apache.camel.component.jackson.converter.JacksonTypeConverters();
        }
        return jacksonTypeConverters;
    }
}
