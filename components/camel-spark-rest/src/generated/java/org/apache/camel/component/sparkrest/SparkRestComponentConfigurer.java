/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.sparkrest;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class SparkRestComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    private org.apache.camel.component.sparkrest.SparkConfiguration getOrCreateConfiguration(SparkRestComponent target) {
        if (target.getSparkConfiguration() == null) {
            target.setSparkConfiguration(new org.apache.camel.component.sparkrest.SparkConfiguration());
        }
        return target.getSparkConfiguration();
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        SparkRestComponent target = (SparkRestComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "basicpropertybinding":
        case "basicPropertyBinding": target.setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "disablestreamcache":
        case "disableStreamCache": getOrCreateConfiguration(target).setDisableStreamCache(property(camelContext, boolean.class, value)); return true;
        case "ipaddress":
        case "ipAddress": target.setIpAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "keystorefile":
        case "keystoreFile": target.setKeystoreFile(property(camelContext, java.lang.String.class, value)); return true;
        case "keystorepassword":
        case "keystorePassword": target.setKeystorePassword(property(camelContext, java.lang.String.class, value)); return true;
        case "mapheaders":
        case "mapHeaders": getOrCreateConfiguration(target).setMapHeaders(property(camelContext, boolean.class, value)); return true;
        case "matchonuriprefix":
        case "matchOnUriPrefix": getOrCreateConfiguration(target).setMatchOnUriPrefix(property(camelContext, boolean.class, value)); return true;
        case "maxthreads":
        case "maxThreads": target.setMaxThreads(property(camelContext, int.class, value)); return true;
        case "minthreads":
        case "minThreads": target.setMinThreads(property(camelContext, int.class, value)); return true;
        case "port": target.setPort(property(camelContext, int.class, value)); return true;
        case "sparkbinding":
        case "sparkBinding": target.setSparkBinding(property(camelContext, org.apache.camel.component.sparkrest.SparkBinding.class, value)); return true;
        case "sparkconfiguration":
        case "sparkConfiguration": target.setSparkConfiguration(property(camelContext, org.apache.camel.component.sparkrest.SparkConfiguration.class, value)); return true;
        case "timeoutmillis":
        case "timeOutMillis": target.setTimeOutMillis(property(camelContext, int.class, value)); return true;
        case "transferexception":
        case "transferException": getOrCreateConfiguration(target).setTransferException(property(camelContext, boolean.class, value)); return true;
        case "truststorefile":
        case "truststoreFile": target.setTruststoreFile(property(camelContext, java.lang.String.class, value)); return true;
        case "truststorepassword":
        case "truststorePassword": target.setTruststorePassword(property(camelContext, java.lang.String.class, value)); return true;
        case "urldecodeheaders":
        case "urlDecodeHeaders": getOrCreateConfiguration(target).setUrlDecodeHeaders(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

}

