<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- START SNIPPET: e1 -->
    <!-- configure our route policy to throttling based -->
    <bean id="myRoutePolicy" class="org.apache.camel.impl.ThrottlingInflightRoutePolicy">
        <!-- we want at most 10 concurrent inflight exchanges -->
        <property name="maxInflightExchanges" value="10"/>
        <!-- and we want a low water mark value of 20% of the max which means that
             the route will be resumed when hitting low to <= 2 current inflight exchanges -->
        <property name="resumePercentOfMax" value="20"/>
        <!-- and we want it to be scoped at this route: (can also be context scoped)
             its default route scoped so we could omit this property -->
        <property name="scope" value="Route"/>
    </bean>

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <route id="myRoute" routePolicyRef="myRoutePolicy">
            <from uri="seda:foo?concurrentConsumers=20"/>
            <to uri="log:foo?groupSize=10"/>
            <to uri="mock:result"/>
        </route>
    </camelContext>
    <!-- END SNIPPET: e1 -->

</beans>
