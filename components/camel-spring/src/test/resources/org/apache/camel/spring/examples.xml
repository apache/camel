<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

  <!--
       put all combinations of possible usages in this file so that XML->XSD converters
       (like trang) can generate a pretty good XSD.
  -->

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="seda:a"/>
      <to uri="seda:b"/>
    </route>
    <route>
      <from uri="seda:a"/>
      <to uri="seda:b"/>
    </route>
    <route>
      <from ref="a"/>
      <to ref="b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <process ref="myProcessor"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <process ref="#myProcessor"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <intercept>
        <interceptor ref="interceptor1"/>
        <interceptor ref="#interceptor2"/>
      </intercept>
      <intercept>
        <interceptor ref="#interceptor1"/>
        <interceptor ref="interceptor2"/>
      </intercept>
      <to uri="seda:b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <choice>
        <when>
          <predicate>
            <header name="foo"/>
            <isEqualTo value="bar"/>
          </predicate>
          <to uri="seda:b"/>
        </when>
        <when>
          <predicate>
            <header name="foo"/>
            <isNotEqualTo value="cheese"/>
          </predicate>
          <to uri="seda:c"/>
        </when>
        <otherwise>
          <to uri="seda:d"/>
        </otherwise>
      </choice>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <to uri="seda:b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <to>
        <uri>seda:tap</uri>
        <uri>seda:a</uri>
      </to>
    </route>

    <route>
      <from uri="seda:a"/>
      <recipientList>
        <recipients>
          <header name=""/>
        </recipients>
      </recipientList>
    </route>

    <route>
      <from uri="seda:a"/>
      <recipientList>
        <recipients>
          <header name=""/>
          <tokenize token=","/>
        </recipients>
      </recipientList>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <body/>
          <isNotEqualTo value="none"/>
        </predicate>
      </filter>
      <recipientList>
        <recipients>
          <body/>
        </recipients>
      </recipientList>
    </route>


    <route>
      <from uri="seda:a"/>
      <split>
        <recipients>
          <bodyAs class="java.lang.String"/>
          <tokenize token="
"/>
        </recipients>
      </split>
      <to uri="seda:b"/>
    </route>

  </camelContext>

</beans>
        <!-- END SNIPPET: example -->
