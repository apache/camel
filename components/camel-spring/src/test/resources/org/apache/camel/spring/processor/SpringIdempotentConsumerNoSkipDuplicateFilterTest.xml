<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- START SNIPPET: e1 -->

    <!-- idempotent repository, just use a memory based for testing -->
    <bean id="myRepo" class="org.apache.camel.processor.idempotent.MemoryIdempotentRepository"/>

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="direct:start"/>
            <!-- we do not want to skip any duplicate messages -->
            <idempotentConsumer messageIdRepositoryRef="myRepo" skipDuplicate="false">
                <!-- use the messageId header as key for identifying duplicate messages -->
                <header>messageId</header>
                <!-- we will to handle duplicate messages using a filter -->
                <filter>
                    <!-- the filter will only react on duplicate messages, if this property is set on the Exchange -->
                    <exchangeProperty>CamelDuplicateMessage</exchangeProperty>
                    <!-- and send the message to this mock, due its part of an unit test -->
                    <!-- but you can of course do anything as its part of the route -->
                    <to uri="mock:duplicate"/>
                    <!-- and then stop -->
                    <stop/>
                </filter>
                <!-- here we route only new messages -->
                <to uri="mock:result"/>
            </idempotentConsumer>
        </route>
    </camelContext>
    <!-- END SNIPPET: e1 -->

</beans>
