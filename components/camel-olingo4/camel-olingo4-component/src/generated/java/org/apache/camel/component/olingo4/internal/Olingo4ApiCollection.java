
/*
 * Camel ApiCollection generated by camel-api-component-maven-plugin
 */
package org.apache.camel.component.olingo4.internal;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.camel.component.olingo4.Olingo4Configuration;
import org.apache.camel.component.olingo4.Olingo4AppEndpointConfiguration;

import org.apache.camel.support.component.ApiCollection;
import org.apache.camel.support.component.ApiMethod;
import org.apache.camel.support.component.ApiMethodHelper;

/**
 * Camel {@link ApiCollection} for Olingo4
 */
public final class Olingo4ApiCollection extends ApiCollection<Olingo4ApiName, Olingo4Configuration> {

    private static Olingo4ApiCollection collection;

    private Olingo4ApiCollection() {
        final Map<String, String> aliases = new HashMap<String, String>();
        final Map<Olingo4ApiName, ApiMethodHelper<? extends ApiMethod>> apiHelpers = new HashMap<>();
        final Map<Class<? extends ApiMethod>, Olingo4ApiName> apiMethods = new HashMap<>();

        List<String> nullableArgs;

        aliases.clear();
        nullableArgs = Arrays.asList("queryParams", "endpointHttpHeaders", "edm", "responseHandler", "data");
        apiHelpers.put(Olingo4ApiName.DEFAULT, new ApiMethodHelper<Olingo4AppApiMethod>(Olingo4AppApiMethod.class, aliases, nullableArgs));
        apiMethods.put(Olingo4AppApiMethod.class, Olingo4ApiName.DEFAULT);

        setApiHelpers(apiHelpers);
        setApiMethods(apiMethods);
    }

    public Olingo4Configuration getEndpointConfiguration(Olingo4ApiName apiName) {
        Olingo4Configuration result = null;
        switch (apiName) {
            case DEFAULT:
                result = new Olingo4AppEndpointConfiguration();
                break;
        }
        return result;
    }

    public static synchronized Olingo4ApiCollection getCollection() {
        if (collection == null) {
            collection = new Olingo4ApiCollection();
        }
        return collection;
    }
}
