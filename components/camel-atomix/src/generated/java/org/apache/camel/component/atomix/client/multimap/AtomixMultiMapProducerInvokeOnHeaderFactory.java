/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.atomix.client.multimap;

import org.apache.camel.AsyncCallback;
import org.apache.camel.Exchange;
import org.apache.camel.spi.InvokeOnHeaderStrategy;
import org.apache.camel.component.atomix.client.multimap.AtomixMultiMapProducer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class AtomixMultiMapProducerInvokeOnHeaderFactory implements InvokeOnHeaderStrategy {

    @Override
    public Object invoke(Object obj, String key, Exchange exchange, AsyncCallback callback) throws Exception {
        org.apache.camel.component.atomix.client.multimap.AtomixMultiMapProducer target = (org.apache.camel.component.atomix.client.multimap.AtomixMultiMapProducer) obj;
        switch (key) {
        case "is_empty":
        case "IS_EMPTY": return target.onIsEmpty(exchange.getMessage(), callback);
        case "size":
        case "SIZE": return target.onSize(exchange.getMessage(), callback);
        case "contains_key":
        case "CONTAINS_KEY": return target.onContainsKey(exchange.getMessage(), callback);
        case "put":
        case "PUT": return target.onPut(exchange.getMessage(), callback);
        case "remove_value":
        case "REMOVE_VALUE": return target.onRemoveValue(exchange.getMessage(), callback);
        case "get":
        case "GET": return target.onGet(exchange.getMessage(), callback);
        case "clear":
        case "CLEAR": return target.onClear(exchange.getMessage(), callback);
        case "remove":
        case "REMOVE": return target.onRemove(exchange.getMessage(), callback);
        default: return null;
        }
    }

}

