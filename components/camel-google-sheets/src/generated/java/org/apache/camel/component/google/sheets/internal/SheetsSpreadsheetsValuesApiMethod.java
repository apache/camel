
/*
 * Camel ApiMethod Enumeration generated by camel-api-component-maven-plugin
 */
package org.apache.camel.component.google.sheets.internal;

import java.lang.reflect.Method;
import java.util.List;

import com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values;

import org.apache.camel.support.component.ApiMethod;
import org.apache.camel.support.component.ApiMethodArg;
import org.apache.camel.support.component.ApiMethodImpl;

import static org.apache.camel.support.component.ApiMethodArg.arg;

/**
 * Camel {@link ApiMethod} Enumeration for com.google.api.services.sheets.v4.Sheets$Spreadsheets$Values
 */
public enum SheetsSpreadsheetsValuesApiMethod implements ApiMethod {

    APPEND(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.Append.class,
        "append",
        arg("spreadsheetId", String.class),
        arg("range", String.class),
        arg("values", com.google.api.services.sheets.v4.model.ValueRange.class)),

    BATCH_CLEAR(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchClear.class,
        "batchClear",
        arg("spreadsheetId", String.class),
        arg("batchClearValuesRequest", com.google.api.services.sheets.v4.model.BatchClearValuesRequest.class)),

    BATCH_CLEAR_BY_DATA_FILTER(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchClearByDataFilter.class,
        "batchClearByDataFilter",
        arg("spreadsheetId", String.class),
        arg("content", com.google.api.services.sheets.v4.model.BatchClearValuesByDataFilterRequest.class)),

    BATCH_GET(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchGet.class,
        "batchGet",
        arg("spreadsheetId", String.class)),

    BATCH_GET_BY_DATA_FILTER(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchGetByDataFilter.class,
        "batchGetByDataFilter",
        arg("spreadsheetId", String.class),
        arg("batchGetValuesByDataFilterRequest", com.google.api.services.sheets.v4.model.BatchGetValuesByDataFilterRequest.class)),

    BATCH_UPDATE(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchUpdate.class,
        "batchUpdate",
        arg("spreadsheetId", String.class),
        arg("batchUpdateValuesRequest", com.google.api.services.sheets.v4.model.BatchUpdateValuesRequest.class)),

    BATCH_UPDATE_BY_DATA_FILTER(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.BatchUpdateByDataFilter.class,
        "batchUpdateByDataFilter",
        arg("spreadsheetId", String.class),
        arg("batchUpdateValuesByDataFilterRequest", com.google.api.services.sheets.v4.model.BatchUpdateValuesByDataFilterRequest.class)),

    CLEAR(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.Clear.class,
        "clear",
        arg("spreadsheetId", String.class),
        arg("range", String.class),
        arg("clearValuesRequest", com.google.api.services.sheets.v4.model.ClearValuesRequest.class)),

    GET(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.Get.class,
        "get",
        arg("spreadsheetId", String.class),
        arg("range", String.class)),

    UPDATE(
        com.google.api.services.sheets.v4.Sheets.Spreadsheets.Values.Update.class,
        "update",
        arg("spreadsheetId", String.class),
        arg("range", String.class),
        arg("values", com.google.api.services.sheets.v4.model.ValueRange.class));

    private final ApiMethod apiMethod;

    private SheetsSpreadsheetsValuesApiMethod(Class<?> resultType, String name, ApiMethodArg... args) {
        this.apiMethod = new ApiMethodImpl(Values.class, resultType, name, args);
    }

    @Override
    public String getName() { return apiMethod.getName(); }

    @Override
    public Class<?> getResultType() { return apiMethod.getResultType(); }

    @Override
    public List<String> getArgNames() { return apiMethod.getArgNames(); }

    @Override
    public List<Class<?>> getArgTypes() { return apiMethod.getArgTypes(); }

    @Override
    public Method getMethod() { return apiMethod.getMethod(); }
}
