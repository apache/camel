/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.zendesk;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.zendesk.ZendeskConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ZendeskConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, ExtendedPropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("MethodName", org.apache.camel.component.zendesk.internal.ZendeskApiMethod.class);
        map.put("OauthToken", java.lang.String.class);
        map.put("Password", java.lang.String.class);
        map.put("ServerUrl", java.lang.String.class);
        map.put("Token", java.lang.String.class);
        map.put("Username", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.zendesk.ZendeskConfiguration target = (org.apache.camel.component.zendesk.ZendeskConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "methodname":
        case "MethodName": target.setMethodName(property(camelContext, org.apache.camel.component.zendesk.internal.ZendeskApiMethod.class, value)); return true;
        case "oauthtoken":
        case "OauthToken": target.setOauthToken(property(camelContext, java.lang.String.class, value)); return true;
        case "password":
        case "Password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "serverurl":
        case "ServerUrl": target.setServerUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "token":
        case "Token": target.setToken(property(camelContext, java.lang.String.class, value)); return true;
        case "username":
        case "Username": target.setUsername(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "methodname":
        case "MethodName": return org.apache.camel.component.zendesk.internal.ZendeskApiMethod.class;
        case "oauthtoken":
        case "OauthToken": return java.lang.String.class;
        case "password":
        case "Password": return java.lang.String.class;
        case "serverurl":
        case "ServerUrl": return java.lang.String.class;
        case "token":
        case "Token": return java.lang.String.class;
        case "username":
        case "Username": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.zendesk.ZendeskConfiguration target = (org.apache.camel.component.zendesk.ZendeskConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "methodname":
        case "MethodName": return target.getMethodName();
        case "oauthtoken":
        case "OauthToken": return target.getOauthToken();
        case "password":
        case "Password": return target.getPassword();
        case "serverurl":
        case "ServerUrl": return target.getServerUrl();
        case "token":
        case "Token": return target.getToken();
        case "username":
        case "Username": return target.getUsername();
        default: return null;
        }
    }
}

