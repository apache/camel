/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.zendesk;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.component.zendesk.ZendeskEndpointConfiguration;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ZendeskEndpointConfigurationConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.component.zendesk.ZendeskEndpointConfiguration target = (org.apache.camel.component.zendesk.ZendeskEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "article":
        case "Article": target.setArticle(property(camelContext, org.zendesk.client.v2.model.hc.Article.class, value)); return true;
        case "articleattachments":
        case "ArticleAttachments": target.setArticleAttachments(property(camelContext, org.zendesk.client.v2.model.hc.ArticleAttachments.class, value)); return true;
        case "articleid":
        case "ArticleId": target.setArticleId(property(camelContext, java.lang.Long.class, value)); return true;
        case "articleid0":
        case "ArticleId0": target.setArticleId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "attachment":
        case "Attachment": target.setAttachment(property(camelContext, org.zendesk.client.v2.model.Attachment.class, value)); return true;
        case "attachments":
        case "Attachments": target.setAttachments(property(camelContext, java.util.List.class, value)); return true;
        case "audit":
        case "Audit": target.setAudit(property(camelContext, org.zendesk.client.v2.model.Audit.class, value)); return true;
        case "auditid":
        case "AuditId": target.setAuditId(property(camelContext, java.lang.Long.class, value)); return true;
        case "automation":
        case "Automation": target.setAutomation(property(camelContext, org.zendesk.client.v2.model.Automation.class, value)); return true;
        case "automationid":
        case "AutomationId": target.setAutomationId(property(camelContext, java.lang.Long.class, value)); return true;
        case "automationid0":
        case "AutomationId0": target.setAutomationId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "category":
        case "Category": target.setCategory(property(camelContext, org.zendesk.client.v2.model.hc.Category.class, value)); return true;
        case "categoryid":
        case "CategoryId": target.setCategoryId(property(camelContext, java.lang.Long.class, value)); return true;
        case "category_id":
        case "Category_id": target.setCategory_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "comment":
        case "Comment": target.setComment(property(camelContext, org.zendesk.client.v2.model.Comment.class, value)); return true;
        case "commentid":
        case "CommentId": target.setCommentId(property(camelContext, java.lang.Long.class, value)); return true;
        case "content":
        case "Content": target.setContent(property(camelContext, byte[].class, value)); return true;
        case "contenttype":
        case "ContentType": target.setContentType(property(camelContext, java.lang.String.class, value)); return true;
        case "email":
        case "Email": target.setEmail(property(camelContext, java.lang.String.class, value)); return true;
        case "endtime":
        case "EndTime": target.setEndTime(property(camelContext, java.util.Date.class, value)); return true;
        case "externalid":
        case "ExternalId": target.setExternalId(property(camelContext, java.lang.String.class, value)); return true;
        case "field":
        case "Field": target.setField(property(camelContext, org.zendesk.client.v2.model.Field.class, value)); return true;
        case "file":
        case "File": target.setFile(property(camelContext, java.io.File.class, value)); return true;
        case "filename":
        case "FileName": target.setFileName(property(camelContext, java.lang.String.class, value)); return true;
        case "forum":
        case "Forum": target.setForum(property(camelContext, org.zendesk.client.v2.model.Forum.class, value)); return true;
        case "forum_id":
        case "Forum_id": target.setForum_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "group":
        case "Group": target.setGroup(property(camelContext, org.zendesk.client.v2.model.Group.class, value)); return true;
        case "groupmembership":
        case "GroupMembership": target.setGroupMembership(property(camelContext, org.zendesk.client.v2.model.GroupMembership.class, value)); return true;
        case "group_id":
        case "Group_id": target.setGroup_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "group_membership_id":
        case "Group_membership_id": target.setGroup_membership_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "id":
        case "Id": target.setId(property(camelContext, java.lang.Long.class, value)); return true;
        case "idarticle":
        case "IdArticle": target.setIdArticle(property(camelContext, java.lang.String.class, value)); return true;
        case "identity":
        case "Identity": target.setIdentity(property(camelContext, org.zendesk.client.v2.model.Identity.class, value)); return true;
        case "identityid":
        case "IdentityId": target.setIdentityId(property(camelContext, java.lang.Long.class, value)); return true;
        case "ids":
        case "Ids": target.setIds(property(camelContext, long[].class, value)); return true;
        case "includearchived":
        case "IncludeArchived": target.setIncludeArchived(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "inline":
        case "Inline": target.setInline(property(camelContext, java.lang.Boolean.class, value)); return true;
        case "installationid":
        case "InstallationId": target.setInstallationId(property(camelContext, java.lang.Integer.class, value)); return true;
        case "json":
        case "Json": target.setJson(property(camelContext, java.lang.String.class, value)); return true;
        case "locale":
        case "Locale": target.setLocale(property(camelContext, java.lang.String.class, value)); return true;
        case "macro":
        case "Macro": target.setMacro(property(camelContext, org.zendesk.client.v2.model.Macro.class, value)); return true;
        case "macroid":
        case "MacroId": target.setMacroId(property(camelContext, java.lang.Long.class, value)); return true;
        case "macroid0":
        case "MacroId0": target.setMacroId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "methodname":
        case "MethodName": target.setMethodName(property(camelContext, java.lang.String.class, value)); return true;
        case "monitorid":
        case "MonitorId": target.setMonitorId(property(camelContext, java.lang.Long.class, value)); return true;
        case "name":
        case "Name": target.setName(property(camelContext, java.lang.String.class, value)); return true;
        case "newpassword":
        case "NewPassword": target.setNewPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthtoken":
        case "OauthToken": target.setOauthToken(property(camelContext, java.lang.String.class, value)); return true;
        case "oldpassword":
        case "OldPassword": target.setOldPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "organization":
        case "Organization": target.setOrganization(property(camelContext, org.zendesk.client.v2.model.Organization.class, value)); return true;
        case "organizationid":
        case "OrganizationId": target.setOrganizationId(property(camelContext, java.lang.Long.class, value)); return true;
        case "organizationlist":
        case "OrganizationList": target.setOrganizationList(property(camelContext, java.util.List.class, value)); return true;
        case "organizationmembership":
        case "OrganizationMembership": target.setOrganizationMembership(property(camelContext, org.zendesk.client.v2.model.OrganizationMembership.class, value)); return true;
        case "organization_id":
        case "Organization_id": target.setOrganization_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "organization_membership_id":
        case "Organization_membership_id": target.setOrganization_membership_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "organizations":
        case "Organizations": target.setOrganizations(property(camelContext, org.zendesk.client.v2.model.Organization[].class, value)); return true;
        case "page":
        case "Page": target.setPage(property(camelContext, java.lang.Integer.class, value)); return true;
        case "params":
        case "Params": target.setParams(property(camelContext, java.lang.String.class, value)); return true;
        case "password":
        case "Password": target.setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "query":
        case "Query": target.setQuery(property(camelContext, java.lang.String.class, value)); return true;
        case "request":
        case "Request": target.setRequest(property(camelContext, org.zendesk.client.v2.model.Request.class, value)); return true;
        case "requestid":
        case "RequestId": target.setRequestId(property(camelContext, java.lang.Long.class, value)); return true;
        case "role":
        case "Role": target.setRole(property(camelContext, java.lang.String.class, value)); return true;
        case "roles":
        case "Roles": target.setRoles(property(camelContext, java.lang.String[].class, value)); return true;
        case "satisfactionrating":
        case "SatisfactionRating": target.setSatisfactionRating(property(camelContext, org.zendesk.client.v2.model.SatisfactionRating.class, value)); return true;
        case "schedule":
        case "Schedule": target.setSchedule(property(camelContext, org.zendesk.client.v2.model.schedules.Schedule.class, value)); return true;
        case "scheduleid":
        case "ScheduleId": target.setScheduleId(property(camelContext, java.lang.Long.class, value)); return true;
        case "searchterm":
        case "SearchTerm": target.setSearchTerm(property(camelContext, java.lang.String.class, value)); return true;
        case "section":
        case "Section": target.setSection(property(camelContext, org.zendesk.client.v2.model.hc.Section.class, value)); return true;
        case "sectionid":
        case "SectionId": target.setSectionId(property(camelContext, java.lang.Long.class, value)); return true;
        case "serverurl":
        case "ServerUrl": target.setServerUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "starttime":
        case "StartTime": target.setStartTime(property(camelContext, java.util.Date.class, value)); return true;
        case "status":
        case "Status": target.setStatus(property(camelContext, org.zendesk.client.v2.model.JobStatus.class, value)); return true;
        case "statuses":
        case "Statuses": target.setStatuses(property(camelContext, java.util.List.class, value)); return true;
        case "suspendedticket":
        case "SuspendedTicket": target.setSuspendedTicket(property(camelContext, org.zendesk.client.v2.model.SuspendedTicket.class, value)); return true;
        case "tags":
        case "Tags": target.setTags(property(camelContext, java.lang.String[].class, value)); return true;
        case "target":
        case "Target": target.setTarget(property(camelContext, org.zendesk.client.v2.model.targets.Target.class, value)); return true;
        case "targetid":
        case "TargetId": target.setTargetId(property(camelContext, java.lang.Long.class, value)); return true;
        case "ticket":
        case "Ticket": target.setTicket(property(camelContext, org.zendesk.client.v2.model.Ticket.class, value)); return true;
        case "ticketform":
        case "TicketForm": target.setTicketForm(property(camelContext, org.zendesk.client.v2.model.TicketForm.class, value)); return true;
        case "ticketid":
        case "TicketId": target.setTicketId(property(camelContext, java.lang.Long.class, value)); return true;
        case "ticketid0":
        case "TicketId0": target.setTicketId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "ticketimport":
        case "TicketImport": target.setTicketImport(property(camelContext, org.zendesk.client.v2.model.TicketImport.class, value)); return true;
        case "ticketlist":
        case "TicketList": target.setTicketList(property(camelContext, java.util.List.class, value)); return true;
        case "tickets":
        case "Tickets": target.setTickets(property(camelContext, org.zendesk.client.v2.model.Ticket[].class, value)); return true;
        case "token":
        case "Token": target.setToken(property(camelContext, java.lang.String.class, value)); return true;
        case "topic":
        case "Topic": target.setTopic(property(camelContext, org.zendesk.client.v2.model.Topic.class, value)); return true;
        case "translation":
        case "Translation": target.setTranslation(property(camelContext, org.zendesk.client.v2.model.hc.Translation.class, value)); return true;
        case "trigger":
        case "Trigger": target.setTrigger(property(camelContext, org.zendesk.client.v2.model.Trigger.class, value)); return true;
        case "triggerid":
        case "TriggerId": target.setTriggerId(property(camelContext, java.lang.Long.class, value)); return true;
        case "triggerid0":
        case "TriggerId0": target.setTriggerId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "tweetid":
        case "TweetId": target.setTweetId(property(camelContext, java.lang.Long.class, value)); return true;
        case "type":
        case "Type": target.setType(property(camelContext, java.lang.Class.class, value)); return true;
        case "unixepochtime":
        case "UnixEpochTime": target.setUnixEpochTime(property(camelContext, java.lang.Long.class, value)); return true;
        case "upload":
        case "Upload": target.setUpload(property(camelContext, org.zendesk.client.v2.model.Attachment.Upload.class, value)); return true;
        case "user":
        case "User": target.setUser(property(camelContext, org.zendesk.client.v2.model.User.class, value)); return true;
        case "userid":
        case "UserId": target.setUserId(property(camelContext, java.lang.Long.class, value)); return true;
        case "userid0":
        case "UserId0": target.setUserId0(property(camelContext, java.lang.Long.class, value)); return true;
        case "userlist":
        case "UserList": target.setUserList(property(camelContext, java.util.List.class, value)); return true;
        case "user_id":
        case "User_id": target.setUser_id(property(camelContext, java.lang.Long.class, value)); return true;
        case "username":
        case "Username": target.setUsername(property(camelContext, java.lang.String.class, value)); return true;
        case "users":
        case "Users": target.setUsers(property(camelContext, org.zendesk.client.v2.model.User[].class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        Map<String, Object> answer = new CaseInsensitiveMap();
        answer.put("Article", org.zendesk.client.v2.model.hc.Article.class);
        answer.put("ArticleAttachments", org.zendesk.client.v2.model.hc.ArticleAttachments.class);
        answer.put("ArticleId", java.lang.Long.class);
        answer.put("ArticleId0", java.lang.Long.class);
        answer.put("Attachment", org.zendesk.client.v2.model.Attachment.class);
        answer.put("Attachments", java.util.List.class);
        answer.put("Audit", org.zendesk.client.v2.model.Audit.class);
        answer.put("AuditId", java.lang.Long.class);
        answer.put("Automation", org.zendesk.client.v2.model.Automation.class);
        answer.put("AutomationId", java.lang.Long.class);
        answer.put("AutomationId0", java.lang.Long.class);
        answer.put("Category", org.zendesk.client.v2.model.hc.Category.class);
        answer.put("CategoryId", java.lang.Long.class);
        answer.put("Category_id", java.lang.Long.class);
        answer.put("Comment", org.zendesk.client.v2.model.Comment.class);
        answer.put("CommentId", java.lang.Long.class);
        answer.put("Content", byte[].class);
        answer.put("ContentType", java.lang.String.class);
        answer.put("Email", java.lang.String.class);
        answer.put("EndTime", java.util.Date.class);
        answer.put("ExternalId", java.lang.String.class);
        answer.put("Field", org.zendesk.client.v2.model.Field.class);
        answer.put("File", java.io.File.class);
        answer.put("FileName", java.lang.String.class);
        answer.put("Forum", org.zendesk.client.v2.model.Forum.class);
        answer.put("Forum_id", java.lang.Long.class);
        answer.put("Group", org.zendesk.client.v2.model.Group.class);
        answer.put("GroupMembership", org.zendesk.client.v2.model.GroupMembership.class);
        answer.put("Group_id", java.lang.Long.class);
        answer.put("Group_membership_id", java.lang.Long.class);
        answer.put("Id", java.lang.Long.class);
        answer.put("IdArticle", java.lang.String.class);
        answer.put("Identity", org.zendesk.client.v2.model.Identity.class);
        answer.put("IdentityId", java.lang.Long.class);
        answer.put("Ids", long[].class);
        answer.put("IncludeArchived", java.lang.Boolean.class);
        answer.put("Inline", java.lang.Boolean.class);
        answer.put("InstallationId", java.lang.Integer.class);
        answer.put("Json", java.lang.String.class);
        answer.put("Locale", java.lang.String.class);
        answer.put("Macro", org.zendesk.client.v2.model.Macro.class);
        answer.put("MacroId", java.lang.Long.class);
        answer.put("MacroId0", java.lang.Long.class);
        answer.put("MethodName", java.lang.String.class);
        answer.put("MonitorId", java.lang.Long.class);
        answer.put("Name", java.lang.String.class);
        answer.put("NewPassword", java.lang.String.class);
        answer.put("OauthToken", java.lang.String.class);
        answer.put("OldPassword", java.lang.String.class);
        answer.put("Organization", org.zendesk.client.v2.model.Organization.class);
        answer.put("OrganizationId", java.lang.Long.class);
        answer.put("OrganizationList", java.util.List.class);
        answer.put("OrganizationMembership", org.zendesk.client.v2.model.OrganizationMembership.class);
        answer.put("Organization_id", java.lang.Long.class);
        answer.put("Organization_membership_id", java.lang.Long.class);
        answer.put("Organizations", org.zendesk.client.v2.model.Organization[].class);
        answer.put("Page", java.lang.Integer.class);
        answer.put("Params", java.lang.String.class);
        answer.put("Password", java.lang.String.class);
        answer.put("Query", java.lang.String.class);
        answer.put("Request", org.zendesk.client.v2.model.Request.class);
        answer.put("RequestId", java.lang.Long.class);
        answer.put("Role", java.lang.String.class);
        answer.put("Roles", java.lang.String[].class);
        answer.put("SatisfactionRating", org.zendesk.client.v2.model.SatisfactionRating.class);
        answer.put("Schedule", org.zendesk.client.v2.model.schedules.Schedule.class);
        answer.put("ScheduleId", java.lang.Long.class);
        answer.put("SearchTerm", java.lang.String.class);
        answer.put("Section", org.zendesk.client.v2.model.hc.Section.class);
        answer.put("SectionId", java.lang.Long.class);
        answer.put("ServerUrl", java.lang.String.class);
        answer.put("StartTime", java.util.Date.class);
        answer.put("Status", org.zendesk.client.v2.model.JobStatus.class);
        answer.put("Statuses", java.util.List.class);
        answer.put("SuspendedTicket", org.zendesk.client.v2.model.SuspendedTicket.class);
        answer.put("Tags", java.lang.String[].class);
        answer.put("Target", org.zendesk.client.v2.model.targets.Target.class);
        answer.put("TargetId", java.lang.Long.class);
        answer.put("Ticket", org.zendesk.client.v2.model.Ticket.class);
        answer.put("TicketForm", org.zendesk.client.v2.model.TicketForm.class);
        answer.put("TicketId", java.lang.Long.class);
        answer.put("TicketId0", java.lang.Long.class);
        answer.put("TicketImport", org.zendesk.client.v2.model.TicketImport.class);
        answer.put("TicketList", java.util.List.class);
        answer.put("Tickets", org.zendesk.client.v2.model.Ticket[].class);
        answer.put("Token", java.lang.String.class);
        answer.put("Topic", org.zendesk.client.v2.model.Topic.class);
        answer.put("Translation", org.zendesk.client.v2.model.hc.Translation.class);
        answer.put("Trigger", org.zendesk.client.v2.model.Trigger.class);
        answer.put("TriggerId", java.lang.Long.class);
        answer.put("TriggerId0", java.lang.Long.class);
        answer.put("TweetId", java.lang.Long.class);
        answer.put("Type", java.lang.Class.class);
        answer.put("UnixEpochTime", java.lang.Long.class);
        answer.put("Upload", org.zendesk.client.v2.model.Attachment.Upload.class);
        answer.put("User", org.zendesk.client.v2.model.User.class);
        answer.put("UserId", java.lang.Long.class);
        answer.put("UserId0", java.lang.Long.class);
        answer.put("UserList", java.util.List.class);
        answer.put("User_id", java.lang.Long.class);
        answer.put("Username", java.lang.String.class);
        answer.put("Users", org.zendesk.client.v2.model.User[].class);
        return answer;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.component.zendesk.ZendeskEndpointConfiguration target = (org.apache.camel.component.zendesk.ZendeskEndpointConfiguration) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "article":
        case "Article": return target.getArticle();
        case "articleattachments":
        case "ArticleAttachments": return target.getArticleAttachments();
        case "articleid":
        case "ArticleId": return target.getArticleId();
        case "articleid0":
        case "ArticleId0": return target.getArticleId0();
        case "attachment":
        case "Attachment": return target.getAttachment();
        case "attachments":
        case "Attachments": return target.getAttachments();
        case "audit":
        case "Audit": return target.getAudit();
        case "auditid":
        case "AuditId": return target.getAuditId();
        case "automation":
        case "Automation": return target.getAutomation();
        case "automationid":
        case "AutomationId": return target.getAutomationId();
        case "automationid0":
        case "AutomationId0": return target.getAutomationId0();
        case "category":
        case "Category": return target.getCategory();
        case "categoryid":
        case "CategoryId": return target.getCategoryId();
        case "category_id":
        case "Category_id": return target.getCategory_id();
        case "comment":
        case "Comment": return target.getComment();
        case "commentid":
        case "CommentId": return target.getCommentId();
        case "content":
        case "Content": return target.getContent();
        case "contenttype":
        case "ContentType": return target.getContentType();
        case "email":
        case "Email": return target.getEmail();
        case "endtime":
        case "EndTime": return target.getEndTime();
        case "externalid":
        case "ExternalId": return target.getExternalId();
        case "field":
        case "Field": return target.getField();
        case "file":
        case "File": return target.getFile();
        case "filename":
        case "FileName": return target.getFileName();
        case "forum":
        case "Forum": return target.getForum();
        case "forum_id":
        case "Forum_id": return target.getForum_id();
        case "group":
        case "Group": return target.getGroup();
        case "groupmembership":
        case "GroupMembership": return target.getGroupMembership();
        case "group_id":
        case "Group_id": return target.getGroup_id();
        case "group_membership_id":
        case "Group_membership_id": return target.getGroup_membership_id();
        case "id":
        case "Id": return target.getId();
        case "idarticle":
        case "IdArticle": return target.getIdArticle();
        case "identity":
        case "Identity": return target.getIdentity();
        case "identityid":
        case "IdentityId": return target.getIdentityId();
        case "ids":
        case "Ids": return target.getIds();
        case "includearchived":
        case "IncludeArchived": return target.getIncludeArchived();
        case "inline":
        case "Inline": return target.getInline();
        case "installationid":
        case "InstallationId": return target.getInstallationId();
        case "json":
        case "Json": return target.getJson();
        case "locale":
        case "Locale": return target.getLocale();
        case "macro":
        case "Macro": return target.getMacro();
        case "macroid":
        case "MacroId": return target.getMacroId();
        case "macroid0":
        case "MacroId0": return target.getMacroId0();
        case "methodname":
        case "MethodName": return target.getMethodName();
        case "monitorid":
        case "MonitorId": return target.getMonitorId();
        case "name":
        case "Name": return target.getName();
        case "newpassword":
        case "NewPassword": return target.getNewPassword();
        case "oauthtoken":
        case "OauthToken": return target.getOauthToken();
        case "oldpassword":
        case "OldPassword": return target.getOldPassword();
        case "organization":
        case "Organization": return target.getOrganization();
        case "organizationid":
        case "OrganizationId": return target.getOrganizationId();
        case "organizationlist":
        case "OrganizationList": return target.getOrganizationList();
        case "organizationmembership":
        case "OrganizationMembership": return target.getOrganizationMembership();
        case "organization_id":
        case "Organization_id": return target.getOrganization_id();
        case "organization_membership_id":
        case "Organization_membership_id": return target.getOrganization_membership_id();
        case "organizations":
        case "Organizations": return target.getOrganizations();
        case "page":
        case "Page": return target.getPage();
        case "params":
        case "Params": return target.getParams();
        case "password":
        case "Password": return target.getPassword();
        case "query":
        case "Query": return target.getQuery();
        case "request":
        case "Request": return target.getRequest();
        case "requestid":
        case "RequestId": return target.getRequestId();
        case "role":
        case "Role": return target.getRole();
        case "roles":
        case "Roles": return target.getRoles();
        case "satisfactionrating":
        case "SatisfactionRating": return target.getSatisfactionRating();
        case "schedule":
        case "Schedule": return target.getSchedule();
        case "scheduleid":
        case "ScheduleId": return target.getScheduleId();
        case "searchterm":
        case "SearchTerm": return target.getSearchTerm();
        case "section":
        case "Section": return target.getSection();
        case "sectionid":
        case "SectionId": return target.getSectionId();
        case "serverurl":
        case "ServerUrl": return target.getServerUrl();
        case "starttime":
        case "StartTime": return target.getStartTime();
        case "status":
        case "Status": return target.getStatus();
        case "statuses":
        case "Statuses": return target.getStatuses();
        case "suspendedticket":
        case "SuspendedTicket": return target.getSuspendedTicket();
        case "tags":
        case "Tags": return target.getTags();
        case "target":
        case "Target": return target.getTarget();
        case "targetid":
        case "TargetId": return target.getTargetId();
        case "ticket":
        case "Ticket": return target.getTicket();
        case "ticketform":
        case "TicketForm": return target.getTicketForm();
        case "ticketid":
        case "TicketId": return target.getTicketId();
        case "ticketid0":
        case "TicketId0": return target.getTicketId0();
        case "ticketimport":
        case "TicketImport": return target.getTicketImport();
        case "ticketlist":
        case "TicketList": return target.getTicketList();
        case "tickets":
        case "Tickets": return target.getTickets();
        case "token":
        case "Token": return target.getToken();
        case "topic":
        case "Topic": return target.getTopic();
        case "translation":
        case "Translation": return target.getTranslation();
        case "trigger":
        case "Trigger": return target.getTrigger();
        case "triggerid":
        case "TriggerId": return target.getTriggerId();
        case "triggerid0":
        case "TriggerId0": return target.getTriggerId0();
        case "tweetid":
        case "TweetId": return target.getTweetId();
        case "type":
        case "Type": return target.getType();
        case "unixepochtime":
        case "UnixEpochTime": return target.getUnixEpochTime();
        case "upload":
        case "Upload": return target.getUpload();
        case "user":
        case "User": return target.getUser();
        case "userid":
        case "UserId": return target.getUserId();
        case "userid0":
        case "UserId0": return target.getUserId0();
        case "userlist":
        case "UserList": return target.getUserList();
        case "user_id":
        case "User_id": return target.getUser_id();
        case "username":
        case "Username": return target.getUsername();
        case "users":
        case "Users": return target.getUsers();
        default: return null;
        }
    }
}

