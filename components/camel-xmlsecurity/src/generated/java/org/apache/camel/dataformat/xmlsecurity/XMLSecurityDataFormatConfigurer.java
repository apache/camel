/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.dataformat.xmlsecurity;

import java.util.HashMap;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class XMLSecurityDataFormatConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        XMLSecurityDataFormat dataformat = (XMLSecurityDataFormat) target;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "xmlcipheralgorithm":
        case "xmlCipherAlgorithm": dataformat.setXmlCipherAlgorithm(property(camelContext, java.lang.String.class, value)); return true;
        case "keycipheralgorithm":
        case "keyCipherAlgorithm": dataformat.setKeyCipherAlgorithm(property(camelContext, java.lang.String.class, value)); return true;
        case "digestalgorithm":
        case "digestAlgorithm": dataformat.setDigestAlgorithm(property(camelContext, java.lang.String.class, value)); return true;
        case "mgfalgorithm":
        case "mgfAlgorithm": dataformat.setMgfAlgorithm(property(camelContext, java.lang.String.class, value)); return true;
        case "passphrase":
        case "passPhrase": dataformat.setPassPhrase(property(camelContext, byte[].class, value)); return true;
        case "securetag":
        case "secureTag": dataformat.setSecureTag(property(camelContext, java.lang.String.class, value)); return true;
        case "securetagcontents":
        case "secureTagContents": dataformat.setSecureTagContents(property(camelContext, boolean.class, value)); return true;
        case "recipientkeyalias":
        case "recipientKeyAlias": dataformat.setRecipientKeyAlias(property(camelContext, java.lang.String.class, value)); return true;
        case "keypassword":
        case "keyPassword": dataformat.setKeyPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "addkeyvalueforencryptedkey":
        case "addKeyValueForEncryptedKey": dataformat.setAddKeyValueForEncryptedKey(property(camelContext, boolean.class, value)); return true;
        default: return false;
        }
    }

}

