/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.keycloak;

import javax.annotation.processing.Generated;
import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointSchemaGeneratorMojo")
@SuppressWarnings("unchecked")
public class KeycloakEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        KeycloakEndpoint target = (KeycloakEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientid":
        case "clientId": target.getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "clientsecret":
        case "clientSecret": target.getConfiguration().setClientSecret(property(camelContext, java.lang.String.class, value)); return true;
        case "keycloakclient":
        case "keycloakClient": target.getConfiguration().setKeycloakClient(property(camelContext, org.keycloak.admin.client.Keycloak.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": target.getConfiguration().setOperation(property(camelContext, org.apache.camel.component.keycloak.KeycloakOperations.class, value)); return true;
        case "password": target.getConfiguration().setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "pojorequest":
        case "pojoRequest": target.getConfiguration().setPojoRequest(property(camelContext, boolean.class, value)); return true;
        case "realm": target.getConfiguration().setRealm(property(camelContext, java.lang.String.class, value)); return true;
        case "serverurl":
        case "serverUrl": target.getConfiguration().setServerUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "username": target.getConfiguration().setUsername(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public String[] getAutowiredNames() {
        return new String[]{"keycloakClient"};
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientid":
        case "clientId": return java.lang.String.class;
        case "clientsecret":
        case "clientSecret": return java.lang.String.class;
        case "keycloakclient":
        case "keycloakClient": return org.keycloak.admin.client.Keycloak.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "operation": return org.apache.camel.component.keycloak.KeycloakOperations.class;
        case "password": return java.lang.String.class;
        case "pojorequest":
        case "pojoRequest": return boolean.class;
        case "realm": return java.lang.String.class;
        case "serverurl":
        case "serverUrl": return java.lang.String.class;
        case "username": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        KeycloakEndpoint target = (KeycloakEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "clientid":
        case "clientId": return target.getConfiguration().getClientId();
        case "clientsecret":
        case "clientSecret": return target.getConfiguration().getClientSecret();
        case "keycloakclient":
        case "keycloakClient": return target.getConfiguration().getKeycloakClient();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "operation": return target.getConfiguration().getOperation();
        case "password": return target.getConfiguration().getPassword();
        case "pojorequest":
        case "pojoRequest": return target.getConfiguration().isPojoRequest();
        case "realm": return target.getConfiguration().getRealm();
        case "serverurl":
        case "serverUrl": return target.getConfiguration().getServerUrl();
        case "username": return target.getConfiguration().getUsername();
        default: return null;
        }
    }
}

