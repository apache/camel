/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.web3j;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class Web3jEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "addresses": ((Web3jEndpoint) target).getConfiguration().setAddresses(property(camelContext, java.util.List.class, value)); return true;
        case "fromAddress": ((Web3jEndpoint) target).getConfiguration().setFromAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "fromBlock": ((Web3jEndpoint) target).getConfiguration().setFromBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "fullTransactionObjects": ((Web3jEndpoint) target).getConfiguration().setFullTransactionObjects(property(camelContext, boolean.class, value)); return true;
        case "gasLimit": ((Web3jEndpoint) target).getConfiguration().setGasLimit(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "privateFor": ((Web3jEndpoint) target).getConfiguration().setPrivateFor(property(camelContext, java.util.List.class, value)); return true;
        case "quorumAPI": ((Web3jEndpoint) target).getConfiguration().setQuorumAPI(property(camelContext, boolean.class, value)); return true;
        case "toAddress": ((Web3jEndpoint) target).getConfiguration().setToAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "toBlock": ((Web3jEndpoint) target).getConfiguration().setToBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "topics": ((Web3jEndpoint) target).getConfiguration().setTopics(property(camelContext, java.lang.String.class, value)); return true;
        case "web3j": ((Web3jEndpoint) target).getConfiguration().setWeb3j(property(camelContext, org.web3j.protocol.Web3j.class, value)); return true;
        case "bridgeErrorHandler": ((Web3jEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionHandler": ((Web3jEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangePattern": ((Web3jEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "address": ((Web3jEndpoint) target).getConfiguration().setAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "atBlock": ((Web3jEndpoint) target).getConfiguration().setAtBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "blockHash": ((Web3jEndpoint) target).getConfiguration().setBlockHash(property(camelContext, java.lang.String.class, value)); return true;
        case "clientId": ((Web3jEndpoint) target).getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "data": ((Web3jEndpoint) target).getConfiguration().setData(property(camelContext, java.lang.String.class, value)); return true;
        case "databaseName": ((Web3jEndpoint) target).getConfiguration().setDatabaseName(property(camelContext, java.lang.String.class, value)); return true;
        case "filterId": ((Web3jEndpoint) target).getConfiguration().setFilterId(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "gasPrice": ((Web3jEndpoint) target).getConfiguration().setGasPrice(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "hashrate": ((Web3jEndpoint) target).getConfiguration().setHashrate(property(camelContext, java.lang.String.class, value)); return true;
        case "headerPowHash": ((Web3jEndpoint) target).getConfiguration().setHeaderPowHash(property(camelContext, java.lang.String.class, value)); return true;
        case "index": ((Web3jEndpoint) target).getConfiguration().setIndex(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "keyName": ((Web3jEndpoint) target).getConfiguration().setKeyName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazyStartProducer": ((Web3jEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "mixDigest": ((Web3jEndpoint) target).getConfiguration().setMixDigest(property(camelContext, java.lang.String.class, value)); return true;
        case "nonce": ((Web3jEndpoint) target).getConfiguration().setNonce(property(camelContext, java.lang.String.class, value)); return true;
        case "operation": ((Web3jEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "position": ((Web3jEndpoint) target).getConfiguration().setPosition(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "priority": ((Web3jEndpoint) target).getConfiguration().setPriority(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "sha3HashOfDataToSign": ((Web3jEndpoint) target).getConfiguration().setSha3HashOfDataToSign(property(camelContext, java.lang.String.class, value)); return true;
        case "signedTransactionData": ((Web3jEndpoint) target).getConfiguration().setSignedTransactionData(property(camelContext, java.lang.String.class, value)); return true;
        case "sourceCode": ((Web3jEndpoint) target).getConfiguration().setSourceCode(property(camelContext, java.lang.String.class, value)); return true;
        case "transactionHash": ((Web3jEndpoint) target).getConfiguration().setTransactionHash(property(camelContext, java.lang.String.class, value)); return true;
        case "ttl": ((Web3jEndpoint) target).getConfiguration().setTtl(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "value": ((Web3jEndpoint) target).getConfiguration().setValue(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "basicPropertyBinding": ((Web3jEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((Web3jEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "addresses": ((Web3jEndpoint) target).getConfiguration().setAddresses(property(camelContext, java.util.List.class, value)); return true;
        case "fromaddress": ((Web3jEndpoint) target).getConfiguration().setFromAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "fromblock": ((Web3jEndpoint) target).getConfiguration().setFromBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "fulltransactionobjects": ((Web3jEndpoint) target).getConfiguration().setFullTransactionObjects(property(camelContext, boolean.class, value)); return true;
        case "gaslimit": ((Web3jEndpoint) target).getConfiguration().setGasLimit(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "privatefor": ((Web3jEndpoint) target).getConfiguration().setPrivateFor(property(camelContext, java.util.List.class, value)); return true;
        case "quorumapi": ((Web3jEndpoint) target).getConfiguration().setQuorumAPI(property(camelContext, boolean.class, value)); return true;
        case "toaddress": ((Web3jEndpoint) target).getConfiguration().setToAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "toblock": ((Web3jEndpoint) target).getConfiguration().setToBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "topics": ((Web3jEndpoint) target).getConfiguration().setTopics(property(camelContext, java.lang.String.class, value)); return true;
        case "web3j": ((Web3jEndpoint) target).getConfiguration().setWeb3j(property(camelContext, org.web3j.protocol.Web3j.class, value)); return true;
        case "bridgeerrorhandler": ((Web3jEndpoint) target).setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "exceptionhandler": ((Web3jEndpoint) target).setExceptionHandler(property(camelContext, org.apache.camel.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern": ((Web3jEndpoint) target).setExchangePattern(property(camelContext, org.apache.camel.ExchangePattern.class, value)); return true;
        case "address": ((Web3jEndpoint) target).getConfiguration().setAddress(property(camelContext, java.lang.String.class, value)); return true;
        case "atblock": ((Web3jEndpoint) target).getConfiguration().setAtBlock(property(camelContext, java.lang.String.class, value)); return true;
        case "blockhash": ((Web3jEndpoint) target).getConfiguration().setBlockHash(property(camelContext, java.lang.String.class, value)); return true;
        case "clientid": ((Web3jEndpoint) target).getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "data": ((Web3jEndpoint) target).getConfiguration().setData(property(camelContext, java.lang.String.class, value)); return true;
        case "databasename": ((Web3jEndpoint) target).getConfiguration().setDatabaseName(property(camelContext, java.lang.String.class, value)); return true;
        case "filterid": ((Web3jEndpoint) target).getConfiguration().setFilterId(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "gasprice": ((Web3jEndpoint) target).getConfiguration().setGasPrice(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "hashrate": ((Web3jEndpoint) target).getConfiguration().setHashrate(property(camelContext, java.lang.String.class, value)); return true;
        case "headerpowhash": ((Web3jEndpoint) target).getConfiguration().setHeaderPowHash(property(camelContext, java.lang.String.class, value)); return true;
        case "index": ((Web3jEndpoint) target).getConfiguration().setIndex(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "keyname": ((Web3jEndpoint) target).getConfiguration().setKeyName(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer": ((Web3jEndpoint) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "mixdigest": ((Web3jEndpoint) target).getConfiguration().setMixDigest(property(camelContext, java.lang.String.class, value)); return true;
        case "nonce": ((Web3jEndpoint) target).getConfiguration().setNonce(property(camelContext, java.lang.String.class, value)); return true;
        case "operation": ((Web3jEndpoint) target).getConfiguration().setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "position": ((Web3jEndpoint) target).getConfiguration().setPosition(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "priority": ((Web3jEndpoint) target).getConfiguration().setPriority(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "sha3hashofdatatosign": ((Web3jEndpoint) target).getConfiguration().setSha3HashOfDataToSign(property(camelContext, java.lang.String.class, value)); return true;
        case "signedtransactiondata": ((Web3jEndpoint) target).getConfiguration().setSignedTransactionData(property(camelContext, java.lang.String.class, value)); return true;
        case "sourcecode": ((Web3jEndpoint) target).getConfiguration().setSourceCode(property(camelContext, java.lang.String.class, value)); return true;
        case "transactionhash": ((Web3jEndpoint) target).getConfiguration().setTransactionHash(property(camelContext, java.lang.String.class, value)); return true;
        case "ttl": ((Web3jEndpoint) target).getConfiguration().setTtl(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "value": ((Web3jEndpoint) target).getConfiguration().setValue(property(camelContext, java.math.BigInteger.class, value)); return true;
        case "basicpropertybinding": ((Web3jEndpoint) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "synchronous": ((Web3jEndpoint) target).setSynchronous(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

}

