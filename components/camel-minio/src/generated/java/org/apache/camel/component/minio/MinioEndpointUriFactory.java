/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.minio;

import java.net.URISyntaxException;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.camel.spi.EndpointUriFactory;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
public class MinioEndpointUriFactory extends org.apache.camel.support.component.EndpointUriFactorySupport implements EndpointUriFactory {

    private static final String BASE = ":bucketName";

    private static final Set<String> PROPERTY_NAMES = Set.of(
            "accessKey", "autoCloseBody", "autoCreateBucket", "backoffErrorThreshold", "backoffIdleThreshold",
            "backoffMultiplier", "bridgeErrorHandler", "bucketName", "bypassGovernanceMode", "customHttpClient", "delay",
            "deleteAfterRead", "deleteAfterWrite", "delimiter", "destinationBucketName", "destinationObjectName",
            "endpoint", "exceptionHandler", "exchangePattern", "greedy", "includeBody", "includeFolders",
            "includeUserMetadata", "includeVersions", "initialDelay", "keyName", "lazyStartProducer", "length",
            "matchETag", "maxConnections", "maxMessagesPerPoll", "minioClient", "modifiedSince", "moveAfterRead",
            "notMatchETag", "objectLock", "objectName", "offset", "operation", "pojoRequest", "policy", "pollStrategy",
            "prefix", "proxyPort", "recursive", "region", "repeatCount", "runLoggingLevel", "scheduledExecutorService",
            "scheduler", "schedulerProperties", "secretKey", "secure", "sendEmptyMessageWhenIdle", "serverSideEncryption",
            "serverSideEncryptionCustomerKey", "startAfter", "startScheduler", "storageClass", "timeUnit",
            "unModifiedSince", "useFixedDelay", "useVersion1", "versionId");
    private static final Set<String> SECRET_PROPERTY_NAMES = Set.of(
            "accessKey", "secretKey");
    private static final Set<String> MULTI_VALUE_PREFIXES = Set.of(
            "scheduler.");

    @Override
    public boolean isEnabled(String scheme) {
        return "minio".equals(scheme);
    }

    @Override
    public String buildUri(String scheme, Map<String, Object> properties, boolean encode) throws URISyntaxException {
        String syntax = scheme + BASE;
        String uri = syntax;

        Map<String, Object> copy = new HashMap<>(properties);

        uri = buildPathParameter(syntax, uri, "bucketName", null, true, copy);
        uri = buildQueryParameters(uri, copy, encode);
        return uri;
    }

    @Override
    public Set<String> propertyNames() {
        return PROPERTY_NAMES;
    }

    @Override
    public Set<String> secretPropertyNames() {
        return SECRET_PROPERTY_NAMES;
    }

    @Override
    public Set<String> multiValuePrefixes() {
        return MULTI_VALUE_PREFIXES;
    }

    @Override
    public boolean isLenientProperties() {
        return false;
    }
}

