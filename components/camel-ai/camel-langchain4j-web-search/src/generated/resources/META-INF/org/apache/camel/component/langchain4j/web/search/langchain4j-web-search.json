{
  "component": {
    "kind": "component",
    "name": "langchain4j-web-search",
    "title": "LangChain4j Web Search",
    "description": "LangChain4j Web Search Engine",
    "deprecated": false,
    "firstVersion": "4.8.0",
    "label": "ai",
    "javaType": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchComponent",
    "supportLevel": "Preview",
    "groupId": "org.apache.camel",
    "artifactId": "camel-langchain4j-web-search",
    "version": "4.9.0-SNAPSHOT",
    "scheme": "langchain4j-web-search",
    "extendsScheme": "",
    "syntax": "langchain4j-web-search:searchId",
    "async": false,
    "api": false,
    "consumerOnly": false,
    "producerOnly": true,
    "lenientProperties": false,
    "browsable": false,
    "remote": true
  },
  "componentProperties": {
    "lazyStartProducer": { "index": 0, "kind": "property", "displayName": "Lazy Start Producer", "group": "producer", "label": "producer", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "autowiredEnabled": { "index": 1, "kind": "property", "displayName": "Autowired Enabled", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": true, "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc." }
  },
  "properties": {
    "searchId": { "index": 0, "kind": "path", "displayName": "Search Id", "group": "producer", "label": "", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "description": "The id" },
    "additionalParams": { "index": 1, "kind": "parameter", "displayName": "Additional Params", "group": "producer", "label": "", "required": false, "type": "object", "javaType": "java.util.Map<java.lang.String, java.lang.Object>", "deprecated": false, "deprecationNote": "", "autowired": true, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The additionalParams is the additional parameters for the search request are a map of key-value pairs that represent additional parameters for the search request." },
    "geoLocation": { "index": 2, "kind": "parameter", "displayName": "Geo Location", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The geoLocation is the desired geolocation for search results. Each search engine may have a different set of supported geolocations." },
    "language": { "index": 3, "kind": "parameter", "displayName": "Language", "group": "producer", "label": "", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The language is the desired language for search results. The expected values may vary depending on the search engine." },
    "maxResults": { "index": 4, "kind": "parameter", "displayName": "Max Results", "group": "producer", "label": "", "required": true, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "defaultValue": "1", "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The maxResults is the expected number of results to be found if the search request were made. Each search engine may have a different limit for the maximum number of results that can be returned." },
    "resultType": { "index": 5, "kind": "parameter", "displayName": "Result Type", "group": "producer", "label": "", "required": true, "type": "object", "javaType": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchResultType", "enum": [ "LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT", "CONTENT", "SNIPPET" ], "deprecated": false, "deprecationNote": "", "autowired": false, "secret": false, "defaultValue": "CONTENT", "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The resultType is the result type of the request. Valid values are LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT, CONTENT, or SNIPPET. CONTENT is the default value; it will return a list of String . You can also specify to return either the Langchain4j Web Search Organic Result object (using LANGCHAIN4J_WEB_SEARCH_ORGANIC_RESULT) or snippet (using SNIPPET) for each result. If maxResults is equal to 1, the response will be a single object instead of a list." },
    "safeSearch": { "index": 6, "kind": "parameter", "displayName": "Safe Search", "group": "producer", "label": "", "required": false, "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The safeSearch is the safe search flag, indicating whether to enable or disable safe search." },
    "startIndex": { "index": 7, "kind": "parameter", "displayName": "Start Index", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The startIndex is the start index for search results, which may vary depending on the search engine." },
    "startPage": { "index": 8, "kind": "parameter", "displayName": "Start Page", "group": "producer", "label": "", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The startPage is the start page number for search results" },
    "webSearchEngine": { "index": 9, "kind": "parameter", "displayName": "Web Search Engine", "group": "producer", "label": "", "required": true, "type": "object", "javaType": "dev.langchain4j.web.search.WebSearchEngine", "deprecated": false, "deprecationNote": "", "autowired": true, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The WebSearchEngine engine to use. This is mandatory. Use one of the implementations from Langchain4j web search engines." },
    "lazyStartProducer": { "index": 10, "kind": "parameter", "displayName": "Lazy Start Producer", "group": "producer (advanced)", "label": "producer,advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "autowired": false, "secret": false, "defaultValue": false, "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing." },
    "webSearchRequest": { "index": 11, "kind": "parameter", "displayName": "Web Search Request", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "dev.langchain4j.web.search.WebSearchRequest", "deprecated": false, "deprecationNote": "", "autowired": true, "secret": false, "configurationClass": "org.apache.camel.component.langchain4j.web.search.LangChain4jWebSearchConfiguration", "configurationField": "configuration", "description": "The webSearchRequest is the custom WebSearchRequest - advanced" }
  }
}
