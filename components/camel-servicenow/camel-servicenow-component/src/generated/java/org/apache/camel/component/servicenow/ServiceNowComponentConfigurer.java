/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.servicenow;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ServiceNowComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer {

    @Override
    public boolean configure(CamelContext camelContext, Object target, String name, Object value, boolean ignoreCase) {
        if (ignoreCase) {
            return doConfigureIgnoreCase(camelContext, target, name, value);
        } else {
            return doConfigure(camelContext, target, name, value);
        }
    }

    private static boolean doConfigure(CamelContext camelContext, Object target, String name, Object value) {
        switch (name) {
        case "instanceName": ((ServiceNowComponent) target).setInstanceName(property(camelContext, java.lang.String.class, value)); return true;
        case "configuration": ((ServiceNowComponent) target).setConfiguration(property(camelContext, org.apache.camel.component.servicenow.ServiceNowConfiguration.class, value)); return true;
        case "apiUrl": ((ServiceNowComponent) target).setApiUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "userName": ((ServiceNowComponent) target).setUserName(property(camelContext, java.lang.String.class, value)); return true;
        case "password": ((ServiceNowComponent) target).setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthClientId": ((ServiceNowComponent) target).setOauthClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthClientSecret": ((ServiceNowComponent) target).setOauthClientSecret(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthTokenUrl": ((ServiceNowComponent) target).setOauthTokenUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "proxyHost": ((ServiceNowComponent) target).setProxyHost(property(camelContext, java.lang.String.class, value)); return true;
        case "proxyPort": ((ServiceNowComponent) target).setProxyPort(property(camelContext, java.lang.Integer.class, value)); return true;
        case "proxyUserName": ((ServiceNowComponent) target).setProxyUserName(property(camelContext, java.lang.String.class, value)); return true;
        case "proxyPassword": ((ServiceNowComponent) target).setProxyPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "useGlobalSslContextParameters": ((ServiceNowComponent) target).setUseGlobalSslContextParameters(property(camelContext, boolean.class, value)); return true;
        case "basicPropertyBinding": ((ServiceNowComponent) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "lazyStartProducer": ((ServiceNowComponent) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

    private static boolean doConfigureIgnoreCase(CamelContext camelContext, Object target, String name, Object value) {
        switch (name.toLowerCase()) {
        case "instancename": ((ServiceNowComponent) target).setInstanceName(property(camelContext, java.lang.String.class, value)); return true;
        case "configuration": ((ServiceNowComponent) target).setConfiguration(property(camelContext, org.apache.camel.component.servicenow.ServiceNowConfiguration.class, value)); return true;
        case "apiurl": ((ServiceNowComponent) target).setApiUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "username": ((ServiceNowComponent) target).setUserName(property(camelContext, java.lang.String.class, value)); return true;
        case "password": ((ServiceNowComponent) target).setPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthclientid": ((ServiceNowComponent) target).setOauthClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthclientsecret": ((ServiceNowComponent) target).setOauthClientSecret(property(camelContext, java.lang.String.class, value)); return true;
        case "oauthtokenurl": ((ServiceNowComponent) target).setOauthTokenUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "proxyhost": ((ServiceNowComponent) target).setProxyHost(property(camelContext, java.lang.String.class, value)); return true;
        case "proxyport": ((ServiceNowComponent) target).setProxyPort(property(camelContext, java.lang.Integer.class, value)); return true;
        case "proxyusername": ((ServiceNowComponent) target).setProxyUserName(property(camelContext, java.lang.String.class, value)); return true;
        case "proxypassword": ((ServiceNowComponent) target).setProxyPassword(property(camelContext, java.lang.String.class, value)); return true;
        case "useglobalsslcontextparameters": ((ServiceNowComponent) target).setUseGlobalSslContextParameters(property(camelContext, boolean.class, value)); return true;
        case "basicpropertybinding": ((ServiceNowComponent) target).setBasicPropertyBinding(property(camelContext, boolean.class, value)); return true;
        case "lazystartproducer": ((ServiceNowComponent) target).setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
            default: return false;
        }
    }

}

