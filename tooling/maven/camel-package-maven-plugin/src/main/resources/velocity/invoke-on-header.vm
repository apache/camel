## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------
/* Generated by camel build tools - do NOT edit this file! */
package ${pn};

import org.apache.camel.AsyncCallback;
import org.apache.camel.Exchange;
import org.apache.camel.spi.InvokeOnHeaderStrategy;
import ${pfqn};

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class ${cn} implements InvokeOnHeaderStrategy {

    @Override
    public Object invoke(Object obj, String key, Exchange exchange, AsyncCallback callback) throws Exception {
        ${en} target = (${en}) obj;
#if( $models.size() > 0 )
        switch (key) {
    #foreach( $option in $models )
        #set( $sync = true )
        #set( $args = "" )
        #foreach( $arg in $option.args )
            #set( $ba = $mojo.bindArg($arg) )
            #set( $sync = $sync && $ba != "callback" )
            #if( $args.length() > 0 )
                #set( $args = $args + ", " )
            #end
            #set( $args = $args + $ba )
        #end
        #if( $sync )
            #set( $ret = "null" )
        #else
            #set( $ret = "callback" )
        #end
        #if( $option.key.toLowerCase() != $option.key )
        case "${option.key.toLowerCase()}":
        #end
        #if( !$sync || $option.returnType == "VOID" )
        case "${option.key}": target.${option.methodName}(${args}); return ${ret};
        #else
        case "${option.key}": return target.${option.methodName}(${args});
        #end
    #end
        default: return null;
        }
#end
    }

}

