The @{title} endpoint is configured using URI syntax:

----
@{syntax}
----

with the following path and query parameters:

=== Path Parameters (@{endpointPathOptions.size()} parameters):

@if{endpointPathOptions.isEmpty()}
The @{title} endpoint has no path parameters.
@else{}
[width="100%",cols="2,5,^1,2",options="header"]
|===@comment{ Render table cells. If description contains newline, prefix cell with `a`, so the content is rendered with formatting. }
| Name | Description | Default | Type
@foreach{row : endpointPathOptions}| *@{row.getShortName(30)}* @{row.description.?contains("\n") ? "a" : ""}| @{util.escape(row.description)} | @{row.getShortDefaultValue(20)} | @{row.getShortJavaType()}
@end{}|===
@end{}

=== Query Parameters (@{endpointParameterOptions.size()} parameters):

@if{endpointParameterOptions.isEmpty()}
The @{title} endpoint has no query parameters.
@else{}
[width="100%",cols="2,5,^1,2",options="header"]
|===@comment{ Render table cells. If description contains newline, prefix cell with `a`, so the content is rendered with formatting. }
| Name | Description | Default | Type
@foreach{row : endpointParameterOptions}| *@{row.getShortName(30)}* (@{row.shortGroup}) @{row.description.?contains("\n") ? "a" : ""}| @{util.escape(row.description)} | @{row.getShortDefaultValue(20)} | @{row.getShortJavaType()}
@end{}|===
@end{}

@if{!apiOptions.isEmpty()}

=== Query API Parameters (@{apiOptions.size()} APIs):

The @{title} endpoint is an API based component and has additional parameters based on which API method in use.
The API method is located in the endpoint URI as the @{apiPropertyQualifier} path parameter:

----
@{syntax}
----

The following lists each API method and its additional parameters.

@foreach{api : apiOptions.entrySet()}
==== @{api.key}
@if{api.value.isEmpty()}
The @{api.key} method has no API parameters.
@else{}
[width="100%",cols="2,5,3",options="header"]
|===@comment{ Render table cells. If description contains newline, prefix cell with `a`, so the content is rendered with formatting. }
| Name | Description | Type
@foreach{row : api.value}| *@{row.getShortName(30)}* @{row.description.?contains("\n") ? "a" : ""}| @{util.escape(row.description)} | @{row.getShortJavaType()}
@end{}|===
@end{}
@end{}

@end{}
