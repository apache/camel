/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.component.kestrel.springboot;

import org.springframework.boot.context.properties.ConfigurationProperties;

/**
 * The kestrel component allows messages to be sent to (or consumed from)
 * Kestrel brokers.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@ConfigurationProperties(prefix = "camel.component.kestrel")
public class KestrelComponentConfiguration {

    /**
     * To use a shared configured configuration as base for creating new
     * endpoints.
     */
    private KestrelConfigurationNestedConfiguration configuration;

    public KestrelConfigurationNestedConfiguration getConfiguration() {
        return configuration;
    }

    public void setConfiguration(
            KestrelConfigurationNestedConfiguration configuration) {
        this.configuration = configuration;
    }

    public static class KestrelConfigurationNestedConfiguration {
        public static final Class CAMEL_NESTED_CLASS = org.apache.camel.component.kestrel.KestrelConfiguration.class;
        /**
         * The addresses
         */
        private String[] addresses;
        /**
         * The wait time in milliseconds
         */
        private Integer waitTimeMs;
        /**
         * The number of concurrent consumers
         */
        private Integer concurrentConsumers;

        public String[] getAddresses() {
            return addresses;
        }

        public void setAddresses(String[] addresses) {
            this.addresses = addresses;
        }

        public Integer getWaitTimeMs() {
            return waitTimeMs;
        }

        public void setWaitTimeMs(Integer waitTimeMs) {
            this.waitTimeMs = waitTimeMs;
        }

        public Integer getConcurrentConsumers() {
            return concurrentConsumers;
        }

        public void setConcurrentConsumers(Integer concurrentConsumers) {
            this.concurrentConsumers = concurrentConsumers;
        }
    }
}